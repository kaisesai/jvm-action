<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='6014' time_ms='1583920479896'>
<vm_version>
<name>
Java HotSpot(TM) 64-Bit Server VM
</name>
<release>
25.231-b11
</release>
<info>
Java HotSpot(TM) 64-Bit Server VM (25.231-b11) for bsd-amd64 JRE (1.8.0_231-b11), built on Oct  5 2019 03:15:25 by &quot;java_re&quot; with gcc 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+PrintCompilation -XX:+PrintInlining -XX:+PrintAssembly -XX:+TraceClassLoading -XX:+LogCompilation -XX:+UnlockDiagnosticVMOptions -XX:+PrintCompilation -XX:+PrintInlining -XX:+PrintAssembly -XX:+TraceClassLoading -XX:+LogCompilation -Dfile.encoding=UTF-8 -Duser.country=CN -Duser.language=zh -Duser.variant 
</args>
<command>
com.liukai.jvmaction.ch_11.JITCompilerTest
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.231-b11
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=/Users/liukai/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java
java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/endorsed
sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib
java.library.path=/Users/liukai/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre
java.class.path=/Users/liukai/IdeaProjects/myproject/jvm-action/build/classes/java/main:/Users/liukai/IdeaProjects/myproject/jvm-action/build/resources/main:/Users/liukai/.gradle/caches/modules-2/files-2.1/cglib/cglib/3.3.0/c956b9f9708af5901e9cf05701e9b2b1c25027cc/cglib-3.3.0.jar:/Users/liukai/.gradle/caches/modules-2/files-2.1/org.ow2.asm/asm/7.1/fa29aa438674ff19d5e1386d2c3527a0267f291e/asm-7.1.jar
sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
file.encoding=UTF-8
user.country=CN
user.language=zh
user.variant=
sun.java.command=com.liukai.jvmaction.ch_11.JITCompilerTest
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='4099'/>
[Opened /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Object from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Serializable from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Comparable from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.CharSequence from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.String from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.AnnotatedElement from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.GenericDeclaration from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Type from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Cloneable from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.System from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Throwable from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Error from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadDeath from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Exception from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.RuntimeException from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.SecurityManager from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.AccessControlContext from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.SecureClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ReflectiveOperationException from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassNotFoundException from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.LinkageError from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.NoClassDefFoundError from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassCastException from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ArrayStoreException from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.VirtualMachineError from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.OutOfMemoryError from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StackOverflowError from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.IllegalMonitorStateException from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.SoftReference from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.WeakReference from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.FinalReference from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.PhantomReference from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Cleaner from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Finalizer from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Runnable from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Thread from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Thread$UncaughtExceptionHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadGroup from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Map from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Dictionary from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Hashtable from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Properties from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.AccessibleObject from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Member from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Field from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Parameter from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Executable from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Method from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Constructor from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.MagicAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.MethodAccessor from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.MethodAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ConstructorAccessor from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ConstructorAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.DelegatingClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ConstantPool from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.FieldAccessor from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.FieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeFieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeStaticFieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.annotation.Annotation from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.CallerSensitive from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandle from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.DirectMethodHandle from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MemberName from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleNatives from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaForm from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodType from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.BootstrapMethodError from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.CallSite from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.ConstantCallSite from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MutableCallSite from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.VolatileCallSite from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Appendable from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.AbstractStringBuilder from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringBuilder from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Unsafe from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.AutoCloseable from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Closeable from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.InputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ByteArrayInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.File from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URL from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.Manifest from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.CodeSource from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StackTraceElement from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.Buffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Boolean from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Character from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Number from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Float from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Double from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Byte from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Short from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Integer from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Long from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.NullPointerException from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ArithmeticException from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamField from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Comparator from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.String$CaseInsensitiveComparator from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Guard from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Permission from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.BasicPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.RuntimePermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.AccessController from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.ReflectPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.PrivilegedAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory$GetReflectionFactoryAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.cert.Certificate from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Iterable from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collection from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.List from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.RandomAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractList from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Vector from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Stack from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$Lock from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$ReferenceHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.InterruptedException from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.ArrayList from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Set from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptyList from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptyMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableList from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableRandomAccessList from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Null from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Lock from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaLangRefAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.SharedSecrets from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.IncompatibleClassChangeError from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.NoSuchMethodError from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.Reflection from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Map$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap$Node from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.VM from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Hashtable$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Math from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Finalizer$FinalizerThread from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.Charset from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.spi.CharsetProvider from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.FastCharsetProvider from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.PreHashedMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Aliases from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Classes from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicInteger from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$ReflectionData from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$Atomic from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.AbstractRepository from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.GenericDeclRepository from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.ClassRepository from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$AnnotationData from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.annotation.AnnotationType from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$ClassValueMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Modifier from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.LangReflectAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.ReflectAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Arrays from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.HistoricallyNamedCharset from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.Unicode from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.NativeConstructorAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.DelegatingConstructorAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringCoding from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringCoding$StringDecoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.ArrayDecoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CharsetDecoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8$Decoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CodingErrorAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Hashtable$EntrySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$SynchronizedCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$SynchronizedSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Objects from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Enumeration from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Iterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Hashtable$Enumerator from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Runtime from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Version from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileDescriptor from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaIOFileDescriptorAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileDescriptor$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Flushable from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.OutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilterInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.BufferedInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.PrivilegedExceptionAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.misc.ReflectUtil from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilterOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.PrintStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.BufferedOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Writer from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.OutputStreamWriter from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StreamEncoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.action.GetPropertyAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.ArrayEncoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CharsetEncoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8$Encoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.ByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.HeapByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.Bits from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.ByteOrder from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicLong from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaNioAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.Bits$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.BufferedWriter from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.DefaultFileSystem from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileSystem from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.UnixFileSystem from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Enum from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.File$PathStatus from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.file.Watchable from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.file.Path from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringCoding$StringEncoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$NativeLibrary from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Terminator from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.SignalHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Terminator$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Signal from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.NativeSignalHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Integer$IntegerCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.OSEnvironment from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaLangAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.System$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.IllegalArgumentException from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Compiler from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Compiler$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLStreamHandlerFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$Factory from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.Debug from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$ParallelLoaders from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$SetFromMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap$KeySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaNetAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader$7 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.StringTokenizer from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.MetaIndex from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Readable from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Reader from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.BufferedReader from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.InputStreamReader from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileReader from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StreamDecoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.CharBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.HeapCharBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Array from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap$TreeNode from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileInputStream$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.ParseUtil from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.BitSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Locale from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleObjectCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Locale$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.Lock from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.ReentrantLock from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Segment from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Node from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CounterCell from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CollectionView from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$KeySetView from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ValuesView from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$EntrySetView from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale$Key from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleObjectCache$CacheEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Locale$LocaleKey from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleUtils from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.CharacterData from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.CharacterDataLatin1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Parts from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLStreamHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.file.Handler from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.util.IPAddressUtil from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaSecurityAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$JavaSecurityAccessImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaSecurityProtectionDomainAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$Key from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Principal from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.jar.Handler from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.SystemClassLoaderAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='14851'/>
<thread_logfile thread='14851' filename='/var/folders/n3/3zkdd1hx22d9yr3k26x1c_mh0000gn/T//hs_c14851_pid6014.log'/>
<writer thread='21763'/>
<thread_logfile thread='21763' filename='/var/folders/n3/3zkdd1hx22d9yr3k26x1c_mh0000gn/T//hs_c21763_pid6014.log'/>
<writer thread='43011'/>
<thread_logfile thread='43011' filename='/var/folders/n3/3zkdd1hx22d9yr3k26x1c_mh0000gn/T//hs_c43011_pid6014.log'/>
<writer thread='42755'/>
<thread_logfile thread='42755' filename='/var/folders/n3/3zkdd1hx22d9yr3k26x1c_mh0000gn/T//hs_c42755_pid6014.log'/>
<writer thread='42499'/>
<thread_logfile thread='42499' filename='/var/folders/n3/3zkdd1hx22d9yr3k26x1c_mh0000gn/T//hs_c42499_pid6014.log'/>
<writer thread='41987'/>
<thread_logfile thread='41987' filename='/var/folders/n3/3zkdd1hx22d9yr3k26x1c_mh0000gn/T//hs_c41987_pid6014.log'/>
<writer thread='22787'/>
<thread_logfile thread='22787' filename='/var/folders/n3/3zkdd1hx22d9yr3k26x1c_mh0000gn/T//hs_c22787_pid6014.log'/>
<writer thread='23299'/>
<thread_logfile thread='23299' filename='/var/folders/n3/3zkdd1hx22d9yr3k26x1c_mh0000gn/T//hs_c23299_pid6014.log'/>
<writer thread='41475'/>
<thread_logfile thread='41475' filename='/var/folders/n3/3zkdd1hx22d9yr3k26x1c_mh0000gn/T//hs_c41475_pid6014.log'/>
<writer thread='40963'/>
<thread_logfile thread='40963' filename='/var/folders/n3/3zkdd1hx22d9yr3k26x1c_mh0000gn/T//hs_c40963_pid6014.log'/>
<writer thread='23555'/>
<thread_logfile thread='23555' filename='/var/folders/n3/3zkdd1hx22d9yr3k26x1c_mh0000gn/T//hs_c23555_pid6014.log'/>
<writer thread='40195'/>
<thread_logfile thread='40195' filename='/var/folders/n3/3zkdd1hx22d9yr3k26x1c_mh0000gn/T//hs_c40195_pid6014.log'/>
<writer thread='4099'/>
[Loaded java.lang.invoke.MethodHandleImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.function.Function from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$4 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Identity from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Version from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MemberName$Factory from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleStatics from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleStatics$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31628'/>
</blob>
<task_queued compile_id='1' method='java/lang/String hashCode ()I' bytes='55' count='395' backedge_count='7168' iicount='395' level='3' stamp='0.066' comment='tiered' hot_count='395'/>
<writer thread='41475'/>
     65    1       3       java.lang.String::hashCode (55 bytes)
<writer thread='4099'/>
[Loaded sun.misc.PostVMInitHook from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.PostVMInitHook$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<task_queued compile_id='2' method='java/lang/String charAt (I)C' bytes='29' count='2304' iicount='2304' level='3' stamp='0.066' comment='tiered' hot_count='2304'/>
<writer thread='40963'/>
     65    2       3       java.lang.String::charAt (29 bytes)
                              @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='4099'/>
[Loaded sun.usagetracker.UsageTrackerClient from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='41475'/>
Loaded disassembler from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/server/hsdis-amd64.dylib
Decoding compiled method 0x0000000110443e10:
Code:
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
[Constants]
  # {method} {0x000000010d4d6000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000110443f80: mov    0x8(%rsi),%r10d
  0x0000000110443f84: shl    $0x3,%r10
  0x0000000110443f88: cmp    %rax,%r10
  0x0000000110443f8b: jne    0x00000001101e1e60  ;   {runtime_call}
  0x0000000110443f91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000110443f9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110443fa0: mov    %eax,-0x14000(%rsp)
  0x0000000110443fa7: push   %rbp
  0x0000000110443fa8: sub    $0x30,%rsp
  0x0000000110443fac: movabs $0x10d69de68,%rax  ;   {metadata(method data for {method} {0x000000010d4d6000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000110443fb6: mov    0xdc(%rax),%edi
  0x0000000110443fbc: add    $0x8,%edi
  0x0000000110443fbf: mov    %edi,0xdc(%rax)
  0x0000000110443fc5: movabs $0x10d4d6000,%rax  ;   {metadata({method} {0x000000010d4d6000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000110443fcf: and    $0x1ff8,%edi
  0x0000000110443fd5: cmp    $0x0,%edi
  0x0000000110443fd8: je     0x0000000110444111  ;*aload_0
                                                ; - java.lang.String::hashCode@0 (line 1466)

  0x0000000110443fde: mov    0x10(%rsi),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x0000000110443fe1: cmp    $0x0,%eax
  0x0000000110443fe4: movabs $0x10d69de68,%rdi  ;   {metadata(method data for {method} {0x000000010d4d6000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000110443fee: movabs $0x108,%rbx
  0x0000000110443ff8: jne    0x0000000110444008
  0x0000000110443ffe: movabs $0x118,%rbx
  0x0000000110444008: mov    (%rdi,%rbx,1),%rdx
  0x000000011044400c: lea    0x1(%rdx),%rdx
  0x0000000110444010: mov    %rdx,(%rdi,%rbx,1)
  0x0000000110444014: jne    0x0000000110444105  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x000000011044401a: mov    0xc(%rsi),%edi
  0x000000011044401d: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x0000000110444021: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x0000000110444128
  0x0000000110444024: cmp    $0x0,%ebx
  0x0000000110444027: movabs $0x10d69de68,%rdx  ;   {metadata(method data for {method} {0x000000010d4d6000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000110444031: movabs $0x128,%rcx
  0x000000011044403b: jle    0x000000011044404b
  0x0000000110444041: movabs $0x138,%rcx
  0x000000011044404b: mov    (%rdx,%rcx,1),%r8
  0x000000011044404f: lea    0x1(%r8),%r8
  0x0000000110444053: mov    %r8,(%rdx,%rcx,1)
  0x0000000110444057: jle    0x0000000110444105  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x000000011044405d: mov    $0x0,%edx
  0x0000000110444062: jmpq   0x00000001104440ca  ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)

  0x0000000110444067: nop
  0x0000000110444068: movslq %edx,%rcx
  0x000000011044406b: movzwl 0x10(%rdi,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000110444070: mov    %rax,%r8
  0x0000000110444073: shl    $0x5,%eax
  0x0000000110444076: sub    %r8d,%eax
  0x0000000110444079: add    %ecx,%eax
  0x000000011044407b: inc    %edx
  0x000000011044407d: movabs $0x10d69de68,%rcx  ;   {metadata(method data for {method} {0x000000010d4d6000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000110444087: mov    0xe0(%rcx),%r8d
  0x000000011044408e: add    $0x8,%r8d
  0x0000000110444092: mov    %r8d,0xe0(%rcx)
  0x0000000110444099: movabs $0x10d4d6000,%rcx  ;   {metadata({method} {0x000000010d4d6000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000001104440a3: and    $0xfff8,%r8d
  0x00000001104440aa: cmp    $0x0,%r8d
  0x00000001104440ae: je     0x000000011044412d  ; OopMap{rdi=Oop rsi=Oop off=308}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x00000001104440b4: test   %eax,-0xf964fba(%rip)        # 0x0000000100adf100
                                                ;   {poll}
  0x00000001104440ba: movabs $0x10d69de68,%rcx  ;   {metadata(method data for {method} {0x000000010d4d6000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000001104440c4: incl   0x168(%rcx)        ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x00000001104440ca: cmp    %ebx,%edx
  0x00000001104440cc: movabs $0x10d69de68,%rcx  ;   {metadata(method data for {method} {0x000000010d4d6000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000001104440d6: movabs $0x148,%r8
  0x00000001104440e0: jge    0x00000001104440f0
  0x00000001104440e6: movabs $0x158,%r8
  0x00000001104440f0: mov    (%rcx,%r8,1),%r9
  0x00000001104440f4: lea    0x1(%r9),%r9
  0x00000001104440f8: mov    %r9,(%rcx,%r8,1)
  0x00000001104440fc: jl     0x0000000110444068  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000110444102: mov    %eax,0x10(%rsi)    ;*putfield hash
                                                ; - java.lang.String::hashCode@50 (line 1473)

  0x0000000110444105: add    $0x30,%rsp
  0x0000000110444109: pop    %rbp
  0x000000011044410a: test   %eax,-0xf965010(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x0000000110444110: retq   
  0x0000000110444111: mov    %rax,0x8(%rsp)
  0x0000000110444116: movq   $0xffffffffffffffff,(%rsp)
  0x000000011044411e: callq  0x000000011043fba0  ; OopMap{rsi=Oop off=419}
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)
                                                ;   {runtime_call}
  0x0000000110444123: jmpq   0x0000000110443fde
  0x0000000110444128: callq  0x000000011020a100  ; OopMap{rsi=Oop rdi=Oop off=429}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x000000011044412d: mov    %rcx,0x8(%rsp)
  0x0000000110444132: movq   $0x2d,(%rsp)
  0x000000011044413a: callq  0x000000011043fba0  ; OopMap{rdi=Oop rsi=Oop off=447}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)
                                                ;   {runtime_call}
  0x000000011044413f: jmpq   0x00000001104440b4
  0x0000000110444144: nop
  0x0000000110444145: nop
  0x0000000110444146: mov    0x2a8(%r15),%rax
  0x000000011044414d: movabs $0x0,%r10
  0x0000000110444157: mov    %r10,0x2a8(%r15)
  0x000000011044415e: movabs $0x0,%r10
  0x0000000110444168: mov    %r10,0x2b0(%r15)
  0x000000011044416f: add    $0x30,%rsp
  0x0000000110444173: pop    %rbp
  0x0000000110444174: jmpq   0x0000000110208e20  ;   {runtime_call}
  0x0000000110444179: hlt    
  0x000000011044417a: hlt    
  0x000000011044417b: hlt    
  0x000000011044417c: hlt    
  0x000000011044417d: hlt    
  0x000000011044417e: hlt    
  0x000000011044417f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110444180: callq  0x0000000110297b20  ;   {no_reloc}
  0x0000000110444185: mov    %rsp,-0x28(%rsp)
  0x000000011044418a: sub    $0x80,%rsp
  0x0000000110444191: mov    %rax,0x78(%rsp)
  0x0000000110444196: mov    %rcx,0x70(%rsp)
  0x000000011044419b: mov    %rdx,0x68(%rsp)
  0x00000001104441a0: mov    %rbx,0x60(%rsp)
  0x00000001104441a5: mov    %rbp,0x50(%rsp)
  0x00000001104441aa: mov    %rsi,0x48(%rsp)
  0x00000001104441af: mov    %rdi,0x40(%rsp)
  0x00000001104441b4: mov    %r8,0x38(%rsp)
  0x00000001104441b9: mov    %r9,0x30(%rsp)
  0x00000001104441be: mov    %r10,0x28(%rsp)
  0x00000001104441c3: mov    %r11,0x20(%rsp)
  0x00000001104441c8: mov    %r12,0x18(%rsp)
  0x00000001104441cd: mov    %r13,0x10(%rsp)
  0x00000001104441d2: mov    %r14,0x8(%rsp)
  0x00000001104441d7: mov    %r15,(%rsp)
  0x00000001104441db: movabs $0x1031df39c,%rdi  ;   {external_word}
  0x00000001104441e5: movabs $0x110444185,%rsi  ;   {internal_word}
  0x00000001104441ef: mov    %rsp,%rdx
  0x00000001104441f2: and    $0xfffffffffffffff0,%rsp
  0x00000001104441f6: callq  0x0000000103006f7a  ;   {runtime_call}
  0x00000001104441fb: hlt    
[Deopt Handler Code]
  0x00000001104441fc: movabs $0x1104441fc,%r10  ;   {section_word}
  0x0000000110444206: push   %r10
  0x0000000110444208: jmpq   0x00000001101e3500  ;   {runtime_call}
  0x000000011044420d: hlt    
  0x000000011044420e: hlt    
  0x000000011044420f: hlt    
<nmethod compile_id='1' compiler='C1' level='3' entry='0x0000000110443f80' size='1448' address='0x0000000110443e10' relocation_offset='296' insts_offset='368' stub_offset='880' scopes_data_offset='1032' scopes_pcs_offset='1152' dependencies_offset='1424' nul_chk_table_offset='1432' method='java/lang/String hashCode ()I' bytes='55' count='412' backedge_count='7424' iicount='412' stamp='0.069'/>
<writer thread='40963'/>
Decoding compiled method 0x0000000110443890:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010d4d4db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;jav
<writer thread='4099'/>
[Loaded java.util.concurrent.atomic.AtomicBoolean from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='40963'/>
a/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000110443a00: mov    0x8(%rsi),%r10d
  0x0000000110443a04: shl    $0x3,%r10
  0x0000000110443a08: cmp    %rax,%r10
  0x0000000110443a0b: jne    0x00000001101e1e60  ;   {runtime_call}
  0x0000000110443a11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000110443a1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110443a20: mov    %eax,-0x14000(%rsp)
  0x0000000110443a27: push   %rbp
  0x0000000110443a28: sub    $0x30,%rsp
  0x0000000110443a2c: mov    %rdx,%rdi
  0x0000000110443a2f: movabs $0x10d657998,%rax  ;   {metadata(method data for {method} {0x000000010d4d4db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000110443a39: mov    0xdc(%rax),%edx
  0x0000000110443a3f: add    $0x8,%edx
  0x0000000110443a42: mov    %edx,0xdc(%rax)
  0x0000000110443a48: movabs $0x10d4d4db0,%rax  ;   {metadata({method} {0x000000010d4d4db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000110443a52: and    $0x1ff8,%edx
  0x0000000110443a58: cmp    $0x0,%edx
  0x0000000110443a5b: je     0x0000000110443b36  ;*iload_1
                                                ; - java.lang.String::charAt@0 (line 657)

  0x0000000110443a61: cmp    $0x0,%edi
  0x0000000110443a64: movabs $0x10d657998,%rax  ;   {metadata(method data for {method} {0x000000010d4d4db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000110443a6e: movabs $0x108,%rdx
  0x0000000110443a78: jl     0x0000000110443a88
  0x0000000110443a7e: movabs $0x118,%rdx
  0x0000000110443a88: mov    (%rax,%rdx,1),%rbx
  0x0000000110443a8c: lea    0x1(%rbx),%rbx
  0x0000000110443a90: mov    %rbx,(%rax,%rdx,1)
  0x0000000110443a94: jl     0x0000000110443af6  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x0000000110443a9a: mov    0xc(%rsi),%eax
  0x0000000110443a9d: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x0000000110443aa1: mov    0xc(%rax),%edx     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x0000000110443b4d
  0x0000000110443aa4: cmp    %edx,%edi
  0x0000000110443aa6: movabs $0x10d657998,%rdx  ;   {metadata(method data for {method} {0x000000010d4d4db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000110443ab0: movabs $0x128,%rsi
  0x0000000110443aba: jl     0x0000000110443aca
  0x0000000110443ac0: movabs $0x138,%rsi
  0x0000000110443aca: mov    (%rdx,%rsi,1),%rbx
  0x0000000110443ace: lea    0x1(%rbx),%rbx
  0x0000000110443ad2: mov    %rbx,(%rdx,%rsi,1)
  0x0000000110443ad6: jge    0x0000000110443af6  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x0000000110443adc: movslq %edi,%rdi
  0x0000000110443adf: movzwl 0x10(%rax,%rdi,2),%eax  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x0000000110443ae4: and    $0xffff,%eax
  0x0000000110443aea: add    $0x30,%rsp
  0x0000000110443aee: pop    %rbp
  0x0000000110443aef: test   %eax,-0xf9649f5(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x0000000110443af5: retq                      ;*ireturn
                                                ; - java.lang.String::charAt@28 (line 660)

  0x0000000110443af6: xchg   %ax,%ax
  0x0000000110443af8: jmpq   0x0000000110443b61  ;   {no_reloc}
  0x0000000110443afd: add    %al,(%rax)
  0x0000000110443aff: add    %al,(%rax)
  0x0000000110443b01: add    %ch,%cl
  0x0000000110443b03: add    %al,%fs:(%rax)
  0x0000000110443b06: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 658)

  0x0000000110443b09: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000000010d4d4db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000110443b0c: cwtl   
  0x0000000110443b0d: jns    0x0000000110443b74
  0x0000000110443b0f: or     $0x1,%eax
  0x0000000110443b14: addq   $0x1,0x148(%rsi)
  0x0000000110443b1c: mov    %rdi,%rdx
  0x0000000110443b1f: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)

  0x0000000110443b22: mov    %rax,0x20(%rsp)
  0x0000000110443b27: callq  0x00000001101e20a0  ; OopMap{[32]=Oop off=300}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ;   {optimized virtual_call}
  0x0000000110443b2c: mov    0x20(%rsp),%rax
  0x0000000110443b31: jmpq   0x0000000110443ba0
  0x0000000110443b36: mov    %rax,0x8(%rsp)
  0x0000000110443b3b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000110443b43: callq  0x000000011043fba0  ; OopMap{rsi=Oop off=328}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ;   {runtime_call}
  0x0000000110443b48: jmpq   0x0000000110443a61
  0x0000000110443b4d: callq  0x000000011020a100  ; OopMap{rax=Oop off=338}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x0000000110443b52: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000110443b5c: mov    $0xa050f00,%eax
  0x0000000110443b61: callq  0x0000000110440b60  ; OopMap{off=358}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ;   {runtime_call}
  0x0000000110443b66: jmp    0x0000000110443af8
  0x0000000110443b68: nop
  0x0000000110443b69: nop
  0x0000000110443b6a: nop
  0x0000000110443b6b: mov    %rdx,%rdx
  0x0000000110443b6e: callq  0x0000000110209be0  ; OopMap{off=371}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ;   {runtime_call}
  0x0000000110443b73: jmp    0x0000000110443b07
  0x0000000110443b75: nop
  0x0000000110443b76: nop
  0x0000000110443b77: mov    0x2a8(%r15),%rax
  0x0000000110443b7e: movabs $0x0,%r10
  0x0000000110443b88: mov    %r10,0x2a8(%r15)
  0x0000000110443b8f: movabs $0x0,%r10
  0x0000000110443b99: mov    %r10,0x2b0(%r15)
  0x0000000110443ba0: add    $0x30,%rsp
  0x0000000110443ba4: pop    %rbp
  0x0000000110443ba5: jmpq   0x0000000110208e20  ;   {runtime_call}
  0x0000000110443baa: hlt    
  0x0000000110443bab: hlt    
  0x0000000110443bac: hlt    
  0x0000000110443bad: hlt    
  0x0000000110443bae: hlt    
  0x0000000110443baf: hlt    
  0x0000000110443bb0: hlt    
  0x0000000110443bb1: hlt    
  0x0000000110443bb2: hlt    
  0x0000000110443bb3: hlt    
  0x0000000110443bb4: hlt    
  0x0000000110443bb5: hlt    
  0x0000000110443bb6: hlt    
  0x0000000110443bb7: hlt    
  0x0000000110443bb8: hlt    
  0x0000000110443bb9: hlt    
  0x0000000110443bba: hlt    
  0x0000000110443bbb: hlt    
  0x0000000110443bbc: hlt    
  0x0000000110443bbd: hlt    
  0x0000000110443bbe: hlt    
  0x0000000110443bbf: hlt    
[Stub Code]
  0x0000000110443bc0: nop                       ;   {no_reloc}
  0x0000000110443bc1: nop
  0x0000000110443bc2: nop
  0x0000000110443bc3: nop
  0x0000000110443bc4: nop
  0x0000000110443bc5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110443bcf: jmpq   0x0000000110443bcf  ;   {runtime_call}
[Exception Handler]
  0x0000000110443bd4: callq  0x0000000110297b20  ;   {runtime_call}
  0x0000000110443bd9: mov    %rsp,-0x28(%rsp)
  0x0000000110443bde: sub    $0x80,%rsp
  0x0000000110443be5: mov    %rax,0x78(%rsp)
  0x0000000110443bea: mov    %rcx,0x70(%rsp)
  0x0000000110443bef: mov    %rdx,0x68(%rsp)
  0x0000000110443bf4: mov    %rbx,0x60(%rsp)
  0x0000000110443bf9: mov    %rbp,0x50(%rsp)
  0x0000000110443bfe: mov    %rsi,0x48(%rsp)
  0x0000000110443c03: mov    %rdi,0x40(%rsp)
  0x0000000110443c08: mov    %r8,0x38(%rsp)
  0x0000000110443c0d: mov    %r9,0x30(%rsp)
  0x0000000110443c12: mov    %r10,0x28(%rsp)
  0x0000000110443c17: mov    %r11,0x20(%rsp)
  0x0000000110443c1c: mov    %r12,0x18(%rsp)
  0x0000000110443c21: mov    %r13,0x10(%rsp)
  0x0000000110443c26: mov    %r14,0x8(%rsp)
  0x0000000110443c2b: mov    %r15,(%rsp)
  0x0000000110443c2f: movabs $0x1031df39c,%rdi  ;   {external_word}
  0x0000000110443c39: movabs $0x110443bd9,%rsi  ;   {internal_word}
  0x0000000110443c43: mov    %rsp,%rdx
  0x0000000110443c46: and    $0xfffffffffffffff0,%rsp
  0x0000000110443c4a: callq  0x0000000103006f7a  ;   {runtime_call}
  0x0000000110443c4f: hlt    
[Deopt Handler Code]
  0x0000000110443c50: movabs $0x110443c50,%r10  ;   {section_word}
  0x0000000110443c5a: push   %r10
  0x0000000110443c5c: jmpq   0x00000001101e3500  ;   {runtime_call}
  0x0000000110443c61: hlt    
  0x0000000110443c62: hlt    
  0x0000000110443c63: hlt    
  0x0000000110443c64: hlt    
  0x0000000110443c65: hlt    
  0x0000000110443c66: hlt    
  0x0000000110443c67: hlt    
<nmethod compile_id='2' compiler='C1' level='3' entry='0x0000000110443a00' size='1376' address='0x0000000110443890' relocation_offset='296' insts_offset='368' stub_offset='816' scopes_data_offset='992' scopes_pcs_offset='1096' dependencies_offset='1352' nul_chk_table_offset='1360' method='java/lang/String charAt (I)C' bytes='29' count='2419' iicount='2419' stamp='0.071'/>
<writer thread='4099'/>
<task_queued compile_id='3' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='1536' iicount='1536' level='3' stamp='0.071' comment='tiered' hot_count='1536'/>
[Loaded sun.usagetracker.UsageTrackerClient$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='23555'/>
     71    3       3       java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='4099'/>
<task_queued compile_id='4' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='384' backedge_count='1746' iicount='384' level='3' stamp='0.072' comment='tiered' hot_count='384'/>
<writer thread='40195'/>
     71    4       3       java.lang.String::equals (81 bytes)
<writer thread='4099'/>
[Loaded sun.usagetracker.UsageTrackerClient$4 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='23555'/>
Decoding compiled method 0x0000000110443510:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010d4d1480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000110443680: mov    0x8(%rsi),%r10d
  0x0000000110443684: shl    $0x3,%r10
  0x0000000110443688: cmp    %rax,%r10
  0x000000011044368b: jne    0x00000001101e1e60  ;   {runtime_call}
  0x0000000110443691: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000011044369c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000001104436a0: mov    %eax,-0x14000(%rsp)
  0x00000001104436a7: push   %rbp
  0x00000001104436a8: sub    $0x30,%rsp
  0x00000001104436ac: movabs $0x10d648ee0,%rdi  ;   {metadata(method data for {method} {0x000000010d4d1480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000001104436b6: mov    0xdc(%rdi),%ebx
  0x00000001104436bc: add    $0x8,%ebx
  0x00000001104436bf: mov    %ebx,0xdc(%rdi)
  0x00000001104436c5: movabs $0x10d4d1480,%rdi  ;   {metadata({method} {0x000000010d4d1480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000001104436cf: and    $0x1ff8,%ebx
  0x00000001104436d5: cmp    $0x0,%ebx
  0x00000001104436d8: je     0x00000001104436f7
  0x00000001104436de: mov    %rsi,%rdi          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x00000001104436e1: mov    %rsi,0x20(%rsp)
  0x00000001104436e6: callq  0x0000000110209e60  ; OopMap{[32]=Oop off=107}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x00000001104436eb: add    $0x30,%rsp
  0x00000001104436ef: pop    %rbp
  0x00000001104436f0: test   %eax,-0xf9645f6(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x00000001104436f6: retq   
  0x00000001104436f7: mov    %rdi,0x8(%rsp)
  0x00000001104436fc: movq   $0xffffffffffffffff,(%rsp)
  0x0000000110443704: callq  0x000000011043fba0  ; OopMap{rsi=Oop off=137}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ;   {runtime_call}
  0x0000000110443709: jmp    0x00000001104436de
  0x000000011044370b: nop
  0x000000011044370c: nop
  0x000000011044370d: mov    0x2a8(%r15),%rax
  0x0000000110443714: movabs $0x0,%r10
  0x000000011044371e: mov    %r10,0x2a8(%r15)
  0x0000000110443725: movabs $0x0,%r10
  0x000000011044372f: mov    %r10,0x2b0(%r15)
  0x0000000110443736: add    $0x30,%rsp
  0x000000011044373a: pop    %rbp
  0x000000011044373b: jmpq   0x0000000110208e20  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x0000000110443740: callq  0x0000000110297b20  ;   {no_reloc}
  0x0000000110443745: mov    %rsp,-0x28(%rsp)
  0x000000011044374a: sub    $0x80,%rsp
  0x0000000110443751: mov    %rax,0x78(%rsp)
  0x0000000110443756: mov    %rcx,0x70(%rsp)
  0x000000011044375b: mov    %rdx,0x68(%rsp)
  0x0000000110443760: mov    %rbx,0x60(%rsp)
  0x0000000110443765: mov    %rbp,0x50(%rsp)
  0x000000011044376a: mov    %rsi,0x48(%rsp)
  0x000000011044376f: mov    %rdi,0x40(%rsp)
  0x0000000110443774: mov    %r8,0x38(%rsp)
  0x0000000110443779: mov    %r9,0x30(%rsp)
  0x000000011044377e: mov    %r10,0x28(%rsp)
  0x0000000110443783: mov    %r11,0x20(%rsp)
  0x0000000110443788: mov    %r12,0x18(%rsp)
  0x000000011044378d: mov    %r13,0x10(%rsp)
  0x0000000110443792: mov    %r14,0x8(%rsp)
  0x0000000110443797: mov    %r15,(%rsp)
  0x000000011044379b: movabs $0x1031df39c,%rdi  ;   {external_word}
  0x00000001104437a5: movabs $0x110443745,%rsi  ;   {internal_word}
  0x00000001104437af: mov    %rsp,%rdx
  0x00000001104437b2: and    $0xfffffffffffffff0,%rsp
  0x00000001104437b6: callq  0x0000000103006f7a  ;   {runtime_call}
  0x00000001104437bb: hlt    
[Deopt Handler Code]
  0x00000001104437bc: movabs $0x1104437bc,%r10  ;   {section_word}
  0x00000001104437c6: push   %r10
  0x00000001104437c8: jmpq   0x00000001101e3500  ;   {runtime_call}
  0x00000001104437cd: hlt    
  0x00000001104437ce: hlt    
  0x00000001104437cf: hlt    
<nmethod compile_id='3' compiler='C1' level='3' entry='0x0000000110443680' size='832' address='0x0000000110443510' relocation_offset='296' insts_offset='368' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='744' dependencies_offset='824' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='1546' iicount='1546' stamp='0.073'/>
<writer thread='4099'/>
<task_queued compile_id='5' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='256' iicount='256' level='3' stamp='0.073' comment='tiered' hot_count='256'/>
<task_queued compile_id='6' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='256' iicount='256' level='3' stamp='0.073' comment='tiered' hot_count='256'/>
<writer thread='41475'/>
     72    6       3       java.util.Arrays::copyOfRange (63 bytes)
<writer thread='4099'/>
Decoding compiled method 0x0000000110443190:
Code:
<writer thread='40963'/>
     72    5       3       java.lang.String::&lt;init&gt; (82 bytes)
<writer thread='41475'/>
                              @ 16   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
<writer thread='4099'/>
[Entry Point]
  # {method}
<writer thread='41475'/>
                   
<writer thread='40963'/>
                   
<writer thread='4099'/>
 {0x000000010d4ea868} &apos;
<writer thread='40963'/>
           @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='41475'/>
             @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
<writer thread='4099'/>
arraycopy&apos; &apos;(Ljav
<writer thread='41475'/>
                   
<writer thread='4099'/>
a/lang/
<writer thread='41475'/>
               
<writer thread='4099'/>
Obj
<writer thread='41475'/>
@ 1   java.lang.Object::
<writer thread='4099'/>
ect;
<writer thread='41475'/>
&lt;init&gt; (1 bytes)
<writer thread='4099'/>
ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x0000000110443300: mov    0x8(%rsi),%r10d
  0x0000000110443304: shl    $0x3,%r10
  0x0000000110443308: cmp    %r10,%rax
  0x000000011044330b: je     0x0000000110443318
  0x0000000110443311: jmpq   0x00000001101e1e60  ;   {runtime_call}
  0x0000000110443316: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000110443318: mov    %eax,-0x14000(%rsp)
  0x000000011044331f: push   %rbp
  0x0000000110443320: mov    %rsp,%rbp
  0x0000000110443323: sub    $0x50,%rsp
  0x0000000110443327: mov    %r9,(%rsp)
  0x000000011044332b: mov    %r8,%r9
  0x000000011044332e: mov    %rcx,0x18(%rsp)
  0x0000000110443333: cmp    $0x0,%rcx
  0x0000000110443337: lea    0x18(%rsp),%r8
  0x000000011044333c: cmove  0x18(%rsp),%r8
  0x0000000110443342: mov    %rdx,%rcx
  0x0000000110443345: mov    %rsi,0x8(%rsp)
  0x000000011044334a: cmp    $0x0,%rsi
  0x000000011044334e: lea    0x8(%rsp),%rdx
  0x0000000110443353: cmove  0x8(%rsp),%rdx
  0x0000000110443359: movabs $0x76ab00c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x0000000110443363: mov    %r14,0x38(%rsp)
  0x0000000110443368: lea    0x38(%rsp),%r14
  0x000000011044336d: mov    %r14,%rsi          ; OopMap{[24]=Oop [8]=Oop [56]=Oop off=112}
  0x0000000110443370: movabs $0x110443370,%r10  ;   {section_word}
  0x000000011044337a: mov    %r10,0x1e0(%r15)
  0x0000000110443381: mov    %rsp,0x1d8(%r15)
  0x0000000110443388: cmpb   $0x0,-0xcf4ff65(%rip)        # 0x00000001034f342a
                                                ;   {external_word}
  0x000000011044338f: je     0x00000001104433d3
  0x0000000110443395: push   %rsi
  0x0000000110443396: push   %rdx
  0x0000000110443397: push   %rcx
  0x0000000110443398: push   %r8
  0x000000011044339a: push   %r9
  0x000000011044339c: movabs $0x10d4ea868,%rsi  ;   {metadata({method} {0x000000010d4ea868} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00000001104433a6: mov    %r15,%rdi
  0x00000001104433a9: test   $0xf,%esp
  0x00000001104433af: je     0x00000001104433c7
  0x00000001104433b5: sub    $0x8,%rsp
  0x00000001104433b9: callq  0x00000001030eced4  ;   {runtime_call}
  0x00000001104433be: add    $0x8,%rsp
  0x00000001104433c2: jmpq   0x00000001104433cc
  0x00000001104433c7: callq  0x00000001030eced4  ;   {runtime_call}
  0x00000001104433cc: pop    %r9
  0x00000001104433ce: pop    %r8
  0x00000001104433d0: pop    %rcx
  0x00000001104433d1: pop    %rdx
  0x00000001104433d2: pop    %rsi
  0x00000001104433d3: lea    0x1f8(%r15),%rdi
  0x00000001104433da: movl   $0x4,0x270(%r15)
  0x00000001104433e5: callq  0x0000000102f46918  ;   {runtime_call}
  0x00000001104433ea: vzeroupper 
  0x00000001104433ed: movl   $0x5,0x270(%r15)
  0x00000001104433f8: lock addl $0x0,(%rsp)
  0x00000001104433fd: cmpl   $0x0,-0xcf45627(%rip)        # 0x00000001034fdde0
                                                ;   {external_word}
  0x0000000110443407: jne    0x000000011044341b
  0x000000011044340d: cmpl   $0x0,0x30(%r15)
  0x0000000110443415: je     0x0000000110443434
  0x000000011044341b: mov    %r15,%rdi
  0x000000011044341e: mov    %rsp,%r12
  0x0000000110443421: sub    $0x0,%rsp
  0x0000000110443425: and    $0xfffffffffffffff0,%rsp
  0x0000000110443429: callq  0x0000000103170aa2  ;   {runtime_call}
  0x000000011044342e: mov    %r12,%rsp
  0x0000000110443431: xor    %r12,%r12
  0x0000000110443434: movl   $0x8,0x270(%r15)
  0x000000011044343f: cmpl   $0x1,0x29c(%r15)
  0x000000011044344a: je     0x00000001104434d2
  0x0000000110443450: cmpb   $0x0,-0xcf5002d(%rip)        # 0x00000001034f342a
                                                ;   {external_word}
  0x0000000110443457: je     0x000000011044348d
  0x000000011044345d: movabs $0x10d4ea868,%rsi  ;   {metadata({method} {0x000000010d4ea868} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x0000000110443467: mov    %r15,%rdi
  0x000000011044346a: test   $0xf,%esp
  0x0000000110443470: je     0x0000000110443488
  0x0000000110443476: sub    $0x8,%rsp
  0x000000011044347a: callq  0x00000001030ece46  ;   {runtime_call}
  0x000000011044347f: add    $0x8,%rsp
  0x0000000110443483: jmpq   0x000000011044348d
  0x0000000110443488: callq  0x00000001030ece46  ;   {runtime_call}
  0x000000011044348d: movabs $0x0,%r10
  0x0000000110443497: mov    %r10,0x1d8(%r15)
  0x000000011044349e: movabs $0x0,%r10
  0x00000001104434a8: mov    %r10,0x1e0(%r15)
  0x00000001104434af: mov    0x38(%r15),%rcx
  0x00000001104434b3: movl   $0x0,0x100(%rcx)
  0x00000001104434bd: leaveq 
  0x00000001104434be: cmpq   $0x0,0x8(%r15)
  0x00000001104434c6: jne    0x00000001104434cd
  0x00000001104434cc: retq   
  0x00000001104434cd: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00000001104434d2: mov    %rsp,%r12
  0x00000001104434d5: sub    $0x0,%rsp
  0x00000001104434d9: and    $0xfffffffffffffff0,%rsp
  0x00000001104434dd: callq  0x00000001030eab8c  ;   {runtime_call}
  0x00000001104434e2: mov    %r12,%rsp
  0x00000001104434e5: xor    %r12,%r12
  0x00000001104434e8: jmpq   0x0000000110443450
  0x00000001104434ed: hlt    
  0x00000001104434ee: hlt    
  0x00000001104434ef: hlt    
<nmethod compile_id='7' compile_kind='c2n' level='0' entry='0x0000000110443300' size='864' address='0x0000000110443190' relocation_offset='296' consts_offset='864' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='640' iicount='640' stamp='0.075'/>
     74    7     n 0       java.lang.System::arraycopy (native)   (static)
<writer thread='40195'/>
Decoding compiled method 0x0000000110445a50:
Code:
[Entry Point]
[Constants]
  # {method}
<writer thread='4099'/>
[Loaded sun.usagetracker.UsageTrackerClient$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='40195'/>
 {0x000000010d4d5618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000110445be0: mov    0x8(%rsi),%r10d
  0x0000000110445be4: shl    $0x3,%r10
  0x0000000110445be8: cmp    %rax,%r10
  0x0000000110445beb: jne    0x00000001101e1e60  ;   {runtime_call}
  0x0000000110445bf1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000110445bfc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110445c00: mov    %eax,-0x14000(%rsp)
  0x0000000110445c07: push   %rbp
  0x0000000110445c08: sub    $0x30,%rsp
  0x0000000110445c0c: movabs $0x10d6c1d78,%rax  ;   {metadata(method data for {method} {0x000000010d4d5618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000110445c16: mov    0xdc(%rax),%edi
  0x0000000110445c1c: add    $0x8,%edi
  0x0000000110445c1f: mov    %edi,0xdc(%rax)
  0x0000000110445c25: movabs $0x10d4d5618,%rax  ;   {metadata({method} {0x000000010d4d5618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000110445c2f: and    $0x1ff8,%edi
  0x0000000110445c35: cmp    $0x0,%edi
  0x0000000110445c38: je     0x0000000110446006  ;*aload_0
                                                ; - java.lang.String::equals@0 (line 977)

  0x0000000110445c3e: cmp    %rdx,%rsi
  0x0000000110445c41: movabs $0x10d6c1d78,%rax  ;   {metadata(method data for {method} {0x000000010d4d5618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000110445c4b: movabs $0x108,%rdi
  0x0000000110445c55: jne    0x0000000110445c65
  0x0000000110445c5b: movabs $0x118,%rdi
  0x0000000110445c65: mov    (%rax,%rdi,1),%rbx
  0x0000000110445c69: lea    0x1(%rbx),%rbx
  0x0000000110445c6d: mov    %rbx,(%rax,%rdi,1)
  0x0000000110445c71: je     0x0000000110445ff5  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x0000000110445c77: cmp    $0x0,%rdx
  0x0000000110445c7b: jne    0x0000000110445c96
  0x0000000110445c7d: movabs $0x10d6c1d78,%rbx  ;   {metadata(method data for {method} {0x000000010d4d5618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000110445c87: orl    $0x100,0x120(%rbx)
  0x0000000110445c91: jmpq   0x0000000110445d56
  0x0000000110445c96: movabs $0x7c00016d0,%rcx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000110445ca0: mov    0x8(%rdx),%edi
  0x0000000110445ca3: shl    $0x3,%rdi
  0x0000000110445ca7: cmp    %rdi,%rcx
  0x0000000110445caa: jne    0x0000000110445d3a
  0x0000000110445cb0: movabs $0x10d6c1d78,%rbx  ;   {metadata(method data for {method} {0x000000010d4d5618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000110445cba: mov    0x8(%rdx),%ecx
  0x0000000110445cbd: shl    $0x3,%rcx
  0x0000000110445cc1: cmp    0x130(%rbx),%rcx
  0x0000000110445cc8: jne    0x0000000110445cd7
  0x0000000110445cca: addq   $0x1,0x138(%rbx)
  0x0000000110445cd2: jmpq   0x0000000110445d5b
  0x0000000110445cd7: cmp    0x140(%rbx),%rcx
  0x0000000110445cde: jne    0x0000000110445ced
  0x0000000110445ce0: addq   $0x1,0x148(%rbx)
  0x0000000110445ce8: jmpq   0x0000000110445d5b
  0x0000000110445ced: cmpq   $0x0,0x130(%rbx)
  0x0000000110445cf8: jne    0x0000000110445d11
  0x0000000110445cfa: mov    %rcx,0x130(%rbx)
  0x0000000110445d01: movq   $0x1,0x138(%rbx)
  0x0000000110445d0c: jmpq   0x0000000110445d5b
  0x0000000110445d11: cmpq   $0x0,0x140(%rbx)
  0x0000000110445d1c: jne    0x0000000110445d35
  0x0000000110445d1e: mov    %rcx,0x140(%rbx)
  0x0000000110445d25: movq   $0x1,0x148(%rbx)
  0x0000000110445d30: jmpq   0x0000000110445d5b
  0x0000000110445d35: jmpq   0x0000000110445d5b
  0x0000000110445d3a: movabs $0x10d6c1d78,%rbx  ;   {metadata(method data for {method} {0x000000010d4d5618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000110445d44: subq   $0x1,0x128(%rbx)
  0x0000000110445d4c: jmpq   0x0000000110445d56
  0x0000000110445d51: jmpq   0x0000000110445d5b
  0x0000000110445d56: xor    %rax,%rax
  0x0000000110445d59: jmp    0x0000000110445d65
  0x0000000110445d5b: movabs $0x1,%rax          ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x0000000110445d65: cmp    $0x0,%eax
  0x0000000110445d68: movabs $0x10d6c1d78,%rax  ;   {metadata(method data for {method} {0x000000010d4d5618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000110445d72: movabs $0x158,%rdi
  0x0000000110445d7c: je     0x0000000110445d8c
  0x0000000110445d82: movabs $0x168,%rdi
  0x0000000110445d8c: mov    (%rax,%rdi,1),%rbx
  0x0000000110445d90: lea    0x1(%rbx),%rbx
  0x0000000110445d94: mov    %rbx,(%rax,%rdi,1)
  0x0000000110445d98: je     0x0000000110445fe4  ;*ifeq
                                                ; - java.lang.String::equals@11 (line 980)

  0x0000000110445d9e: cmp    $0x0,%rdx
  0x0000000110445da2: jne    0x0000000110445dbd
  0x0000000110445da4: movabs $0x10d6c1d78,%rbx  ;   {metadata(method data for {method} {0x000000010d4d5618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000110445dae: orl    $0x100,0x170(%rbx)
  0x0000000110445db8: jmpq   0x0000000110445e7d
  0x0000000110445dbd: movabs $0x7c00016d0,%rax  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000110445dc7: mov    0x8(%rdx),%edi
  0x0000000110445dca: shl    $0x3,%rdi
  0x0000000110445dce: cmp    %rdi,%rax
  0x0000000110445dd1: jne    0x0000000110445e61
  0x0000000110445dd7: movabs $0x10d6c1d78,%rbx  ;   {metadata(method data for {method} {0x000000010d4d5618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000110445de1: mov    0x8(%rdx),%eax
  0x0000000110445de4: shl    $0x3,%rax
  0x0000000110445de8: cmp    0x180(%rbx),%rax
  0x0000000110445def: jne    0x0000000110445dfe
  0x0000000110445df1: addq   $0x1,0x188(%rbx)
  0x0000000110445df9: jmpq   0x0000000110445e7d
  0x0000000110445dfe: cmp    0x190(%rbx),%rax
  0x0000000110445e05: jne    0x0000000110445e14
  0x0000000110445e07: addq   $0x1,0x198(%rbx)
  0x0000000110445e0f: jmpq   0x0000000110445e7d
  0x0000000110445e14: cmpq   $0x0,0x180(%rbx)
  0x0000000110445e1f: jne    0x0000000110445e38
  0x0000000110445e21: mov    %rax,0x180(%rbx)
  0x0000000110445e28: movq   $0x1,0x188(%rbx)
  0x0000000110445e33: jmpq   0x0000000110445e7d
  0x0000000110445e38: cmpq   $0x0,0x190(%rbx)
  0x0000000110445e43: jne    0x0000000110445e5c
  0x0000000110445e45: mov    %rax,0x190(%rbx)
  0x0000000110445e4c: movq   $0x1,0x198(%rbx)
  0x0000000110445e57: jmpq   0x0000000110445e7d
  0x0000000110445e5c: jmpq   0x0000000110445e7d
  0x0000000110445e61: movabs $0x10d6c1d78,%rbx  ;   {metadata(method data for {method} {0x000000010d4d5618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000110445e6b: subq   $0x1,0x178(%rbx)
  0x0000000110445e73: jmpq   0x000000011044601d
  0x0000000110445e78: jmpq   0x0000000110445e7d
  0x0000000110445e7d: mov    %rdx,%rax          ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)

  0x0000000110445e80: mov    0xc(%rsi),%esi
  0x0000000110445e83: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x0000000110445e87: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ; implicit exception: dispatches to 0x0000000110446026
  0x0000000110445e8a: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x000000011044602b
  0x0000000110445e8d: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x0000000110445e91: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x0000000110446030
  0x0000000110445e94: cmp    %ebx,%edi
  0x0000000110445e96: movabs $0x10d6c1d78,%rbx  ;   {metadata(method data for {method} {0x000000010d4d5618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000110445ea0: movabs $0x1a8,%rdx
  0x0000000110445eaa: jne    0x0000000110445eba
  0x0000000110445eb0: movabs $0x1b8,%rdx
  0x0000000110445eba: mov    (%rbx,%rdx,1),%rcx
  0x0000000110445ebe: lea    0x1(%rcx),%rcx
  0x0000000110445ec2: mov    %rcx,(%rbx,%rdx,1)
  0x0000000110445ec6: jne    0x0000000110445fe4  ;*if_icmpne
                                                ; - java.lang.String::equals@31 (line 983)

  0x0000000110445ecc: mov    $0x0,%ebx
  0x0000000110445ed1: jmpq   0x0000000110445f7f  ;*iload_3
                                                ; - java.lang.String::equals@49 (line 987)

  0x0000000110445ed6: xchg   %ax,%ax
  0x0000000110445ed8: movslq %ebx,%rdi
  0x0000000110445edb: cmp    0xc(%rsi),%ebx
  0x0000000110445ede: jae    0x0000000110446035
  0x0000000110445ee4: movzwl 0x10(%rsi,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000110445ee9: movslq %ebx,%rcx
  0x0000000110445eec: cmp    0xc(%rax),%ebx
  0x0000000110445eef: jae    0x000000011044603e
  0x0000000110445ef5: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000110445efa: cmp    %ecx,%edi
  0x0000000110445efc: movabs $0x10d6c1d78,%rdi  ;   {metadata(method data for {method} {0x000000010d4d5618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000110445f06: movabs $0x1e8,%rcx
  0x0000000110445f10: je     0x0000000110445f20
  0x0000000110445f16: movabs $0x1f8,%rcx
  0x0000000110445f20: mov    (%rdi,%rcx,1),%r8
  0x0000000110445f24: lea    0x1(%r8),%r8
  0x0000000110445f28: mov    %r8,(%rdi,%rcx,1)
  0x0000000110445f2c: jne    0x0000000110445fc2  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x0000000110445f32: inc    %ebx
  0x0000000110445f34: movabs $0x10d6c1d78,%rdi  ;   {metadata(method data for {method} {0x000000010d4d5618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000110445f3e: mov    0xe0(%rdi),%ecx
  0x0000000110445f44: add    $0x8,%ecx
  0x0000000110445f47: mov    %ecx,0xe0(%rdi)
  0x0000000110445f4d: movabs $0x10d4d5618,%rdi  ;   {metadata({method} {0x000000010d4d5618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000110445f57: and    $0xfff8,%ecx
  0x0000000110445f5d: cmp    $0x0,%ecx
  0x0000000110445f60: je     0x0000000110446047  ; OopMap{rax=Oop rsi=Oop off=902}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x0000000110445f66: test   %eax,-0xf966e6c(%rip)        # 0x0000000100adf100
                                                ;   {poll}
  0x0000000110445f6c: movabs $0x10d6c1d78,%rdi  ;   {metadata(method data for {method} {0x000000010d4d5618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000110445f76: incl   0x208(%rdi)
  0x0000000110445f7c: mov    %rdx,%rdi          ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x0000000110445f7f: mov    %rdi,%rdx
  0x0000000110445f82: dec    %edx
  0x0000000110445f84: cmp    $0x0,%edi
  0x0000000110445f87: movabs $0x10d6c1d78,%rdi  ;   {metadata(method data for {method} {0x000000010d4d5618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000110445f91: movabs $0x1c8,%rcx
  0x0000000110445f9b: je     0x0000000110445fab
  0x0000000110445fa1: movabs $0x1d8,%rcx
  0x0000000110445fab: mov    (%rdi,%rcx,1),%r8
  0x0000000110445faf: lea    0x1(%r8),%r8
  0x0000000110445fb3: mov    %r8,(%rdi,%rcx,1)
  0x0000000110445fb7: je     0x0000000110445fd3
  0x0000000110445fbd: jmpq   0x0000000110445ed8  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x0000000110445fc2: mov    $0x0,%eax
  0x0000000110445fc7: add    $0x30,%rsp
  0x0000000110445fcb: pop    %rbp
  0x0000000110445fcc: test   %eax,-0xf966ed2(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x0000000110445fd2: retq                      ;*ireturn
                                                ; - java.lang.String::equals@70 (line 989)

  0x0000000110445fd3: mov    $0x1,%eax
  0x0000000110445fd8: add    $0x30,%rsp
  0x0000000110445fdc: pop    %rbp
  0x0000000110445fdd: test   %eax,-0xf966ee3(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x0000000110445fe3: retq                      ;*ireturn
                                                ; - java.lang.String::equals@78 (line 992)

  0x0000000110445fe4: mov    $0x0,%eax
  0x0000000110445fe9: add    $0x30,%rsp
  0x0000000110445fed: pop    %rbp
  0x0000000110445fee: test   %eax,-0xf966ef4(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x0000000110445ff4: retq                      ;*ireturn
                                                ; - java.lang.String::equals@80 (line 995)

  0x0000000110445ff5: mov    $0x1,%eax
  0x0000000110445ffa: add    $0x30,%rsp
  0x0000000110445ffe: pop    %rbp
  0x0000000110445fff: test   %eax,-0xf966f05(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x0000000110446005: retq   
  0x0000000110446006: mov    %rax,0x8(%rsp)
  0x000000011044600b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000110446013: callq  0x000000011043fba0  ; OopMap{rsi=Oop rdx=Oop off=1080}
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)
                                                ;   {runtime_call}
  0x0000000110446018: jmpq   0x0000000110445c3e
  0x000000011044601d: mov    %rdx,(%rsp)
  0x0000000110446021: callq  0x00000001102976c0  ; OopMap{rsi=Oop off=1094}
                                                ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)
                                                ;   {runtime_call}
  0x0000000110446026: callq  0x000000011020a100  ; OopMap{rax=Oop rsi=Oop off=1099}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x000000011044602b: callq  0x000000011020a100  ; OopMap{rsi=Oop off=1104}
                                                ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)
                                                ;   {runtime_call}
  0x0000000110446030: callq  0x000000011020a100  ; OopMap{rsi=Oop rax=Oop off=1109}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x0000000110446035: mov    %rbx,(%rsp)
  0x0000000110446039: callq  0x0000000110208980  ; OopMap{rax=Oop rsi=Oop off=1118}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x000000011044603e: mov    %rbx,(%rsp)
  0x0000000110446042: callq  0x0000000110208980  ; OopMap{rax=Oop rsi=Oop off=1127}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x0000000110446047: mov    %rdi,0x8(%rsp)
  0x000000011044604c: movq   $0x4a,(%rsp)
  0x0000000110446054: callq  0x000000011043fba0  ; OopMap{rax=Oop rsi=Oop off=1145}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)
                                                ;   {runtime_call}
  0x0000000110446059: jmpq   0x0000000110445f66
  0x000000011044605e: nop
  0x000000011044605f: nop
  0x0000000110446060: mov    0x2a8(%r15),%rax
  0x0000000110446067: movabs $0x0,%r10
  0x0000000110446071: mov    %r10,0x2a8(%r15)
  0x0000000110446078: movabs $0x0,%r10
  0x0000000110446082: mov    %r10,0x2b0(%r15)
  0x0000000110446089: add    $0x30,%rsp
  0x000000011044608d: pop    %rbp
  0x000000011044608e: jmpq   0x0000000110208e20  ;   {runtime_call}
  0x0000000110446093: hlt    
  0x0000000110446094: hlt    
  0x0000000110446095: hlt    
  0x0000000110446096: hlt    
  0x0000000110446097: hlt    
  0x0000000110446098: hlt    
  0x0000000110446099: hlt    
  0x000000011044609a: hlt    
  0x000000011044609b: hlt    
  0x000000011044609c: hlt    
  0x000000011044609d: hlt    
  0x000000011044609e: hlt    
  0x000000011044609f: hlt    
[Exception Handler]
[Stub Code]
  0x00000001104460a0: callq  0x0000000110297b20  ;   {no_reloc}
  0x00000001104460a5: mov    %rsp,-0x28(%rsp)
  0x00000001104460aa: sub    $0x80,%rsp
  0x00000001104460b1: mov    %rax,0x78(%rsp)
  0x00000001104460b6: mov    %rcx,0x70(%rsp)
  0x00000001104460bb: mov    %rdx,0x68(%rsp)
  0x00000001104460c0: mov    %rbx,0x60(%rsp)
  0x00000001104460c5: mov    %rbp,0x50(%rsp)
  0x00000001104460ca: mov    %rsi,0x48(%rsp)
  0x00000001104460cf: mov    %rdi,0x40(%rsp)
  0x00000001104460d4: mov    %r8,0x38(%rsp)
  0x00000001104460d9: mov    %r9,0x30(%rsp)
  0x00000001104460de: mov    %r10,0x28(%rsp)
  0x00000001104460e3: mov    %r11,0x20(%rsp)
  0x00000001104460e8: mov    %r12,0x18(%rsp)
  0x00000001104460ed: mov    %r13,0x10(%rsp)
  0x00000001104460f2: mov    %r14,0x8(%rsp)
  0x00000001104460f7: mov    %r15,(%rsp)
  0x00000001104460fb: movabs $0x1031df39c,%rdi  ;   {external_word}
  0x0000000110446105: movabs $0x1104460a5,%rsi  ;   {internal_word}
  0x000000011044610f: mov    %rsp,%rdx
  0x0000000110446112: and    $0xfffffffffffffff0,%rsp
  0x0000000110446116: callq  0x0000000103006f7a  ;   {runtime_call}
  0x000000011044611b: hlt    
[Deopt Handler Code]
  0x000000011044611c: movabs $0x11044611c,%r10  ;   {section_word}
  0x0000000110446126: push   %r10
  0x0000000110446128: jmpq   0x00000001101e3500  ;   {runtime_call}
  0x000000011044612d: hlt    
  0x000000011044612e: hlt    
  0x000000011044612f: hlt    
<nmethod compile_id='4' compiler='C1' level='3' entry='0x0000000110445be0' size='2504' address='0x0000000110445a50' relocation_offset='296' insts_offset='400' stub_offset='1616' scopes_data_offset='1768' scopes_pcs_offset='1984' dependencies_offset='2464' nul_chk_table_offset='2472' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='393' backedge_count='1785' iicount='393' stamp='0.079'/>
<writer thread='40963'/>
                              @ 13  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='41475'/>
        
<writer thread='4099'/>
<task_queued compile_id='8' method='java/lang/String indexOf (II)I' bytes='70' count='207' backedge_count='5120' iicount='207' level='3' stamp='0.079' comment='tiered' hot_count='207'/>
<writer thread='40963'/>
                              @ 30  java/lang/StringIndexOutOfBoundsException
<writer thread='41475'/>
                      
<writer thread='40963'/>
::&lt;init&gt; (not loaded)   not inlineable
<writer thread='41475'/>
@ 20   java.lang.StringBuilder::append (8 bytes)
<writer thread='40963'/>
        
<writer thread='23555'/>
     79    8       3       java.lang.String::indexOf (70 bytes)
<writer thread='41475'/>
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
<writer thread='40963'/>
                  
<writer thread='4099'/>
<task_queued compile_id='9' method='java/lang/Math min (II)I' bytes='11' count='640' iicount='640' level='3' stamp='0.080' comment='tiered' hot_count='640'/>
<writer thread='41475'/>
                              @ 25   java.lang.StringBuilder::append (8 bytes)
<writer thread='4099'/>
<task_queued compile_id='10' method='java/lang/String length ()I' bytes='6' count='512' iicount='512' level='3' stamp='0.080' comment='tiered' hot_count='512'/>
<writer thread='40963'/>
    @ 65  
<writer thread='23555'/>
             
<writer thread='40963'/>
java/lang/StringIndexOutOfBoundsException::
<writer thread='23555'/>
        
<writer thread='40963'/>
&lt;init&gt;
<writer thread='40195'/>
     79    9       3       java.lang.Math::min (11 bytes)
<writer thread='23555'/>
         @ 66  
<writer thread='41475'/>
             
<writer thread='23555'/>
 java.lang.String::indexOfSupplementary
<writer thread='40963'/>
 (not loaded)   not inlineable
<writer thread='23555'/>
 (71 bytes)   callee is too large
<writer thread='40963'/>

<writer thread='41475'/>
                   @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
<writer thread='23555'/>

<writer thread='41475'/>
                              @ 29   java.lang.StringBuilder::append (8 bytes)
                                
<writer thread='40963'/>
                              
<writer thread='40195'/>
Decoding compiled method 0x0000000110445690:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010d5c7b80} &apos;
<writer thread='41475'/>
@ 2   java.lang.AbstractStringBuilder::append (62 bytes)
<writer thread='40195'/>
min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rsi       = int
<writer thread='40963'/>
@ 75   java.util.Arrays::copyOfRange (63 bytes)
<writer thread='40195'/>

  # parm1:    rdx 
<writer thread='41475'/>
   callee is too large
<writer thread='40195'/>
      = int
  #         
<writer thread='40963'/>
   callee is too large
<writer thread='40195'/>
  [sp+0x40]  (sp of caller)
  0x0000000110445800: mov    %eax,-0x14000(%rsp)
  0x0000000110445807: push   %rbp
  0x0000000110445808: sub    $0x30,%rsp
  0x000000011044580c: movabs $0x10d69e000,%rax  ;   {metadata(method data for {method} {0x000000010d5c7b80} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000110445816: mov    0xdc(%rax),%edi
<writer thread='4099'/>
[Loaded java.io.FileOutputStream$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='40195'/>

  0x000000011044581c: add    $0x8,%edi
  0x000000011044581f: mov    %edi,0xdc(%rax)
  0x0000000110445825: movabs $0x10d5c7b80,%rax  ;   {metadata({method} {0x000000010d5c7b80} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011044582f: and    $0x1ff8,%edi
  0x0000000110445835: cmp    $0x0,%edi
  0x0000000110445838: je     0x000000011044589d  ;*iload_0
                                                ; - java.lang.Math::min@0 (line 1336)

  0x000000011044583e: cmp    %edx,%esi
  0x0000000110445840: movabs $0x10d69e000,%rax  ;   {metadata(method data for {method} {0x000000010d5c7b80} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011044584a: movabs $0x108,%rdi
  0x0000000110445854: jg     0x0000000110445864
  0x000000011044585a: movabs $0x118,%rdi
  0x0000000110445864: mov    (%rax,%rdi,1),%rbx
  0x0000000110445868: lea    0x1(%rbx),%rbx
  0x000000011044586c: mov    %rbx,(%rax,%rdi,1)
  0x0000000110445870: jg     0x000000011044588b  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)

  0x0000000110445876: movabs $0x10d69e000,%rax  ;   {metadata(method data for {method} {0x000000010d5c7b80} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000110445880: incl   0x128(%rax)
  0x0000000110445886: jmpq   0x000000011044588e  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)

  0x000000011044588b: mov    %rdx,%rsi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x000000011044588e: mov    %rsi,%rax
  0x0000000110445891: add    $0x30,%rsp
  0x0000000110445895: pop    %rbp
  0x0000000110445896: test   %eax,-0xf96679c(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x000000011044589c: retq   
  0x000000011044589d: mov    %rax,0x8(%rsp)
  0x00000001104458a2: movq   $0xffffffffffffffff,(%rsp)
  0x00000001104458aa: callq  0x000000011043fba0  ; OopMap{off=175}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ;   {runtime_call}
  0x00000001104458af: jmp    0x000000011044583e
  0x00000001104458b1: nop
  0x00000001104458b2: nop
  0x00000001104458b3: mov    0x2a8(%r15),%rax
  0x00000001104458ba: movabs $0x0,%r10
  0x00000001104458c4: mov    %r10,0x2a8(%r15)
  0x00000001104458cb: movabs $0x0,%r10
  0x00000001104458d5: mov    %r10,0x2b0(%r15)
  0x00000001104458dc: add    $0x30,%rsp
  0x00000001104458e0: pop    %rbp
  0x00000001104458e1: jmpq   0x0000000110208e20  ;   {runtime_call}
  0x00000001104458e6: hlt    
  0x00000001104458e7: hlt    
  0x00000001104458e8: hlt    
  0x00000001104458e9: hlt    
  0x00000001104458ea: hlt    
  0x00000001104458eb: hlt    
  0x00000001104458ec: hlt    
  0x00000001104458ed: hlt    
  0x00000001104458ee: hlt    
  0x00000001104458ef: hlt    
  0x00000001104458f0: hlt    
  0x00000001104458f1: hlt    
  0x00000001104458f2: hlt    
  0x00000001104458f3: hlt    
  0x00000001104458f4: hlt    
  0x00000001104458f5: hlt    
  0x00000001104458f6: hlt    
  0x00000001104458f7: hlt    
  0x00000001104458f8: hlt    
  0x00000001104458f9: hlt    
  0x00000001104458fa: hlt    
  0x00000001104458fb: hlt    
  0x00000001104458fc: hlt    
  0x00000001104458fd: hlt    
  0x00000001104458fe: hlt    
  0x00000001104458ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110445900: callq  0x0000000110297b20  ;   {no_reloc}
  0x0000000110445905: mov    %rsp,-0x28(%rsp)
  0x000000011044590a: sub    $0x80,%rsp
  0x0000000110445911: mov    %rax,0x78(%rsp)
  0x0000000110445916: mov    %rcx,0x70(%rsp)
  0x000000011044591b: mov    %rdx,0x68(%rsp)
  0x0000000110445920: mov    %rbx,0x60(%rsp)
  0x0000000110445925: mov    %rbp,0x50(%rsp)
  0x000000011044592a: mov    %rsi,0x48(%rsp)
  0x000000011044592f: mov    %rdi,0x40(%rsp)
  0x0000000110445934: mov    %r8,0x38(%rsp)
  0x0000000110445939: mov    %r9,0x30(%rsp)
  0x000000011044593e: mov    %r10,0x28(%rsp)
  0x0000000110445943: mov    %r11,0x20(%rsp)
  0x0000000110445948: mov    %r12,0x18(%rsp)
  0x000000011044594d: mov    %r13,0x10(%rsp)
  0x0000000110445952: mov    %r14,0x8(%rsp)
  0x0000000110445957: mov    %r15,(%rsp)
  0x000000011044595b: movabs $0x1031df39c,%rdi  ;   {external_word}
  0x0000000110445965: movabs $0x110445905,%rsi  ;   {internal_word}
  0x000000011044596f: mov    %rsp,%rdx
  0x0000000110445972: and    $0xfffffffffffffff0,%rsp
  0x0000000110445976: callq  0x0000000103006f7a  ;   {runtime_call}
  0x000000011044597b: hlt    
[Deopt Handler Code]
  0x000000011044597c: movabs $0x11044597c,%r10  ;   {section_word}
  0x0000000110445986: push   %r10
  0x0000000110445988: jmpq   0x00000001101e3500  ;   {runtime_call}
  0x000000011044598d: hlt    
  0x000000011044598e: hlt    
  0x000000011044598f: hlt    
<nmethod compile_id='9' compiler='C1' level='3' entry='0x0000000110445800' size='936' address='0x0000000110445690' relocation_offset='296' insts_offset='368' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='816' dependencies_offset='928' method='java/lang/Math min (II)I' bytes='11' count='656' iicount='656' stamp='0.081'/>
     81   10       3       java.lang.String::length (6 bytes)
<writer thread='23555'/>
Decoding compiled method 0x0000000110444f10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010d4d6180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x00000001104450a0: mov    0x8(%rsi),%r10d
  0x00000001104450a4: shl    $0x3,%r10
  0x00000001104450a8: cmp    %rax,%r10
  0x00000001104450ab: jne    0x00000001101e1e60  ;   {runtime_call}
  0x00000001104450b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000001104450bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000001104450c0: mov    %eax,-0x14000(%rsp)
  0x00000001104450c7: push   %rbp
  0x00000001104450c8: sub    $0x30,%rsp
  0x00000001104450cc: movabs $0x10d6c30e0,%rax  ;   {metadata(method data for {method} {0x000000010d4d6180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000001104450d6: mov    0xdc(%rax),%edi
  0x00000001104450dc: add    $0x8,%edi
  0x00000001104450df: mov    %edi,0xdc(%rax)
  0x00000001104450e5: movabs $0x10d4d6180,%rax  ;   {metadata({method} {0x000000010d4d6180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000001104450ef: and    $0x1ff8,%edi
  0x00000001104450f5: cmp    $0x0,%edi
  0x00000001104450f8: je     0x0000000110445301  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1546)

  0x00000001104450fe: mov    0xc(%rsi),%eax
  0x0000000110445101: shl    $0x3
<writer thread='4099'/>
[Loaded sun.launcher.LauncherHelper from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='23555'/>
,%rax                                           ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x0000000110445105: mov    0xc(%rax),%edi     ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x0000000110445318
  0x0000000110445108: cmp    $0x0,%ecx
  0x000000011044510b: movabs $0x10d6c30e0,%rbx  ;   {metadata(method data for {method} {0x000000010d4d6180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000110445115: movabs $0x108,%r8
  0x000000011044511f: jge    0x000000011044512f
  0x0000000110445125: movabs $0x118,%r8
  0x000000011044512f: mov    (%rbx,%r8,1),%r9
  0x0000000110445133: lea    0x1(%r9),%r9
  0x0000000110445137: mov    %r9,(%rbx,%r8,1)
  0x000000011044513b: jge    0x000000011044515b  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x0000000110445141: movabs $0x10d6c30e0,%rcx  ;   {metadata(method data for {method} {0x000000010d4d6180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011044514b: incl   0x128(%rcx)
  0x0000000110445151: mov    $0x0,%ecx
  0x0000000110445156: jmpq   0x0000000110445193  ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1548)

  0x000000011044515b: cmp    %edi,%ecx
  0x000000011044515d: movabs $0x10d6c30e0,%rbx  ;   {metadata(method data for {method} {0x000000010d4d6180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000110445167: movabs $0x140,%r8
  0x0000000110445171: jl     0x0000000110445181
  0x0000000110445177: movabs $0x150,%r8
  0x0000000110445181: mov    (%rbx,%r8,1),%r9
  0x0000000110445185: lea    0x1(%r9),%r9
  0x0000000110445189: mov    %r9,(%rbx,%r8,1)
  0x000000011044518d: jge    0x00000001104452f0  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x0000000110445193: cmp    $0x10000,%edx
  0x0000000110445199: movabs $0x10d6c30e0,%rbx  ;   {metadata(method data for {method} {0x000000010d4d6180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000001104451a3: movabs $0x160,%r8
  0x00000001104451ad: jge    0x00000001104451bd
  0x00000001104451b3: movabs $0x170,%r8
  0x00000001104451bd: mov    (%rbx,%r8,1),%r9
  0x00000001104451c1: lea    0x1(%r9),%r9
  0x00000001104451c5: mov    %r9,(%rbx,%r8,1)
  0x00000001104451c9: jge    0x00000001104452c8
  0x00000001104451cf: jmpq   0x000000011044526b  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x00000001104451d4: nopl   0x0(%rax)
  0x00000001104451d8: movslq %ecx,%rsi
  0x00000001104451db: cmp    0xc(%rax),%ecx
  0x00000001104451de: jae    0x000000011044531d
  0x00000001104451e4: movzwl 0x10(%rax,%rsi,2),%esi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000001104451e9: cmp    %edx,%esi
  0x00000001104451eb: movabs $0x10d6c30e0,%rsi  ;   {metadata(method data for {method} {0x000000010d4d6180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000001104451f5: movabs $0x1a0,%rbx
  0x00000001104451ff: jne    0x000000011044520f
  0x0000000110445205: movabs $0x1b0,%rbx
  0x000000011044520f: mov    (%rsi,%rbx,1),%r8
  0x0000000110445213: lea    0x1(%r8),%r8
  0x0000000110445217: mov    %r8,(%rsi,%rbx,1)
  0x000000011044521b: je     0x00000001104452a8  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000110445221: inc    %ecx
  0x0000000110445223: movabs $0x10d6c30e0,%rsi  ;   {metadata(method data for {method} {0x000000010d4d6180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011044522d: mov    0xe0(%rsi),%ebx
  0x0000000110445233: add    $0x8,%ebx
  0x0000000110445236: mov    %ebx,0xe0(%rsi)
  0x000000011044523c: movabs $0x10d4d6180,%rsi  ;   {metadata({method} {0x000000010d4d6180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000110445246: and    $0xfff8,%ebx
  0x000000011044524c: cmp    $0x0,%ebx
  0x000000011044524f: je     0x0000000110445326  ; OopMap{rax=Oop off=437}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x0000000110445255: test   %eax,-0xf96615b(%rip)        # 0x0000000100adf100
                                                ;   {poll}
  0x000000011044525b: movabs $0x10d6c30e0,%rsi  ;   {metadata(method data for {method} {0x000000010d4d6180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000110445265: incl   0x1c0(%rsi)        ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x000000011044526b: cmp    %edi,%ecx
  0x000000011044526d: movabs $0x10d6c30e0,%rsi  ;   {metadata(method data for {method} {0x000000010d4d6180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000110445277: movabs $0x180,%rbx
  0x0000000110445281: jge    0x0000000110445291
  0x0000000110445287: movabs $0x190,%rbx
  0x0000000110445291: mov    (%rsi,%rbx,1),%r8
  0x0000000110445295: lea    0x1(%r8),%r8
  0x0000000110445299: mov    %r8,(%rsi,%rbx,1)
  0x000000011044529d: jge    0x00000001104452b7
  0x00000001104452a3: jmpq   0x00000001104451d8  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x00000001104452a8: mov    %rcx,%rax
  0x00000001104452ab: add    $0x30,%rsp
  0x00000001104452af: pop    %rbp
  0x00000001104452b0: test   %eax,-0xf9661b6(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x00000001104452b6: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@54 (line 1560)

  0x00000001104452b7: mov    $0xffffffff,%eax
  0x00000001104452bc: add    $0x30,%rsp
  0x00000001104452c0: pop    %rbp
  0x00000001104452c1: test   %eax,-0xf9661c7(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x00000001104452c7: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@62 (line 1563)

  0x00000001104452c8: mov    %rsi,%rdi
  0x00000001104452cb: movabs $0x10d6c30e0,%rbx  ;   {metadata(method data for {method} {0x000000010d4d6180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000001104452d5: addq   $0x1,0x1d8(%rbx)
  0x00000001104452dd: nop
  0x00000001104452de: nop
  0x00000001104452df: callq  0x00000001101e20a0  ; OopMap{off=580}
                                                ;*invokespecial indexOfSupplementary
                                                ; - java.lang.String::indexOf@66 (line 1565)
                                                ;   {optimized virtual_call}
  0x00000001104452e4: add    $0x30,%rsp
  0x00000001104452e8: pop    %rbp
  0x00000001104452e9: test   %eax,-0xf9661ef(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x00000001104452ef: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@69 (line 1565)

  0x00000001104452f0: mov    $0xffffffff,%eax
  0x00000001104452f5: add    $0x30,%rsp
  0x00000001104452f9: pop    %rbp
  0x00000001104452fa: test   %eax,-0xf966200(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x0000000110445300: retq   
  0x0000000110445301: mov    %rax,0x8(%rsp)
  0x0000000110445306: movq   $0xffffffffffffffff,(%rsp)
  0x000000011044530e: callq  0x000000011043fba0  ; OopMap{rsi=Oop off=627}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)
                                                ;   {runtime_call}
  0x0000000110445313: jmpq   0x00000001104450fe
  0x0000000110445318: callq  0x000000011020a100  ; OopMap{rsi=Oop rax=Oop off=637}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x000000011044531d: mov    %rcx,(%rsp)
  0x0000000110445321: callq  0x0000000110208980  ; OopMap{rax=Oop off=646}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x0000000110445326: mov    %rsi,0x8(%rsp)
  0x000000011044532b: movq   $0x3a,(%rsp)
  0x0000000110445333: callq  0x000000011043fba0  ; OopMap{rax=Oop off=664}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)
                                                ;   {runtime_call}
  0x0000000110445338: jmpq   0x0000000110445255
  0x000000011044533d: nop
  0x000000011044533e: nop
  0x000000011044533f: mov    0x2a8(%r15),%rax
  0x0000000110445346: movabs $0x0,%r10
  0x0000000110445350: mov    %r10,0x2a8(%r15)
  0x0000000110445357: movabs $0x0,%r10
  0x0000000110445361: mov    %r10,0x2b0(%r15)
  0x0000000110445368: add    $0x30,%rsp
  0x000000011044536c: pop    %rbp
  0x000000011044536d: jmpq   0x0000000110208e20  ;   {runtime_call}
  0x0000000110445372: hlt    
  0x0000000110445373: hlt    
  0x0000000110445374: hlt    
  0x0000000110445375: hlt    
  0x0000000110445376: hlt    
  0x0000000110445377: hlt    
  0x0000000110445378: hlt    
  0x0000000110445379: hlt    
  0x000000011044537a: hlt    
  0x000000011044537b: hlt    
  0x000000011044537c: hlt    
  0x000000011044537d: hlt    
  0x000000011044537e: hlt    
  0x000000011044537f: hlt    
[Stub Code]
  0x0000000110445380: nop                       ;   {no_reloc}
  0x0000000110445381: nop
  0x0000000110445382: nop
  0x0000000110445383: nop
  0x0000000110445384: nop
  0x0000000110445385: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011044538f: jmpq   0x000000011044538f  ;   {runtime_call}
[Exception Handler]
  0x0000000110445394: callq  0x0000000110297b20  ;   {runtime_call}
  0x0000000110445399: mov    %rsp,-0x28(%rsp)
  0x000000011044539e: sub    $0x80,%rsp
  0x00000001104453a5: mov    %rax,0x78(%rsp)
  0x00000001104453aa: mov    %rcx,0x70(%rsp)
  0x00000001104453af: mov    %rdx,0x68(%rsp)
  0x00000001104453b4: mov    %rbx,0x60(%rsp)
  0x00000001104453b9: mov    %rbp,0x50(%rsp)
  0x00000001104453be: mov    %rsi,0x48(%rsp)
  0x00000001104453c3: mov    %rdi,0x40(%rsp)
  0x00000001104453c8: mov    %r8,0x38(%rsp)
  0x00000001104453cd: mov    %r9,0x30(%rsp)
  0x00000001104453d2: mov    %r10,0x28(%rsp)
  0x00000001104453d7: mov    %r11,0x20(%rsp)
  0x00000001104453dc: mov    %r12,0x18(%rsp)
  0x00000001104453e1: mov    %r13,0x10(%rsp)
  0x00000001104453e6: mov    %r14,0x8(%rsp)
  0x00000001104453eb: mov    %r15,(%rsp)
  0x00000001104453ef: movabs $0x1031df39c,%rdi  ;   {external_word}
  0x00000001104453f9: movabs $0x110445399,%rsi  ;   {internal_word}
  0x0000000110445403: mov    %rsp,%rdx
  0x0000000110445406: and    $0xfffffffffffffff0,%rsp
  0x000000011044540a: callq  0x0000000103006f7a  ;   {runtime_call}
  0x000000011044540f: hlt    
[Deopt Handler Code]
  0x0000000110445410: movabs $0x110445410,%r10  ;   {section_word}
  0x000000011044541a: push   %r10
  0x000000011044541c: jmpq   0x00000001101e3500  ;   {runtime_call}
  0x0000000110445421: hlt    
  0x0000000110445422: hlt    
  0x0000000110445423: hlt    
  0x0000000110445424: hlt    
  0x0000000110445425: hlt    
  0x0000000110445426: hlt    
  0x0000000110445427: hlt    
<nmethod compile_id='8' compiler='C1' level='3' entry='0x00000001104450a0' size='1848' address='0x0000000110444f10' relocation_offset='296' insts_offset='400' stub_offset='1136' scopes_data_offset='1312' scopes_pcs_offset='1472' dependencies_offset='1824' nul_chk_table_offset='1832' method='java/lang/String indexOf (II)I' bytes='70' count='209' backedge_count='5273' iicount='209' stamp='0.084'/>
<writer thread='41475'/>
                              @ 32   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 35   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 54   java.lang.Math::min (11 bytes)
<writer thread='40195'/>
Decoding compiled method 0x000000011044e2d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010d4d4c60} 
<writer thread='41475'/>

<writer thread='40195'/>
&apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
<writer thread='4099'/>
[Loaded java.net.URLClassLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='40195'/>
  0x000000011044e440: mov    0x8(%rsi),%r10d
  0x000000011044e444: shl    $0x3,%r10
  0x000000011044e448: cmp    %rax,%r10
  0x000000011044e44b: jne    0x00000001101e1e60  ;   {runtime_call}
  0x000000011044e451: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000011044e45c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011044e460: mov    %eax,-0x14000(%rsp)
  0x000000011044e467: push   %rbp
  0x000000011044e468: sub    $0x30,%rsp
  0x000000011044e46c: movabs $0x10d6c3920,%rax  ;   {metadata(method data for {method} {0x000000010d4d4c60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011044e476: mov    0xdc(%rax),%edi
  0x000000011044e47c: add    $0x8,%edi
  0x000000011044e47f: mov    %edi,0xdc(%rax)
  0x000000011044e485: movabs $0x10d4d4c60,%rax  ;   {metadata({method} {0x000000010d4d4c60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011044e48f: and    $0x1ff8,%edi
  0x000000011044e495: cmp    $0x0,%edi
  0x000000011044e498: je     0x000000011044e4b4  ;*aload_0
                                                ; - java.lang.String::length@0 (line 623)

  0x000000011044e49e: mov    0xc(%rsi),%eax
  0x000000011044e4a1: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x000000011044e4a5: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; implicit exception: dispatches to 0x000000011044e4c8
  0x000000011044e4a8: add    $0x30,%rsp
  0x000000011044e4ac: pop    %rbp
  0x000000011044e4ad: test   %eax,-0xf96f3b3(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x000000011044e4b3: retq   
  0x000000011044e4b4: mov    %rax,0x8(%rsp)
  0x000000011044e4b9: movq   $0xffffffffffffffff,(%rsp)
  0x000000011044e4c1: callq  0x000000011043fba0  ; OopMap{rsi=Oop off=134}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ;   {runtime_call}
  0x000000011044e4c6: jmp    0x000000011044e49e
  0x000000011044e4c8: callq  0x000000011020a100  ; OopMap{off=141}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x000000011044e4cd: nop
  0x000000011044e4ce: nop
  0x000000011044e4cf: mov    0x2a8(%r15),%rax
  0x000000011044e4d6: movabs $0x0,%r10
  0x000000011044e4e0: mov    %r10,0x2a8(%r15)
  0x000000011044e4e7: movabs $0x0,%r10
  0x000000011044e4f1: mov    %r10,0x2b0(%r15)
  0x000000011044e4f8: add    $0x30,%rsp
  0x000000011044e4fc: pop    %rbp
  0x000000011044e4fd: jmpq   0x0000000110208e20  ;   {runtime_call}
  0x000000011044e502: hlt    
  0x000000011044e503: hlt    
  0x000000011044e504: hlt    
  0x000000011044e505: hlt    
  0x000000011044e506: hlt    
  0x000000011044e507: hlt    
  0x000000011044e508: hlt    
  0x000000011044e509: hlt    
  0x000000011044e50a: hlt    
  0x000000011044e50b: hlt    
  0x000000011044e50c: hlt    
  0x000000011044e50d: hlt    
  0x000000011044e50e: hlt    
  0x000000011044e50f: hlt    
  0x000000011044e510: hlt    
  0x000000011044e511: hlt    
  0x000000011044e512: hlt    
  0x000000011044e513: hlt    
  0x000000011044e514: hlt    
  0x000000011044e515: hlt    
  0x000000011044e516: hlt    
  0x000000011044e517: hlt    
  0x000000011044e518: hlt    
  0x000000011044e519: hlt    
  0x000000011044e51a: hlt    
  0x000000011044e51b: hlt    
  0x000000011044e51c: hlt    
  0x000000011044e51d: hlt    
  0x000000011044e51e: hlt    
  0x000000011044e51f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011044e520: callq  0x0000000110297b20  ;   {no_reloc}
  0x000000011044e525: mov    %rsp,-0x28(%rsp)
  0x000000011044e52a: sub    $0x80,%rsp
  0x000000011044e531: mov    %rax,0x78(%rsp)
  0x000000011044e536: mov    %rcx,0x70(%rsp)
  0x000000011044e53b: mov    %rdx,0x68(%rsp)
  0x000000011044e540: mov    %rbx,0x60(%rsp)
  0x000000011044e545: mov    %rbp,0x50(%rsp)
  0x000000011044e54a: mov    %rsi,0x48(%rsp)
  0x000000011044e54f: mov    %rdi,0x40(%rsp)
  0x000000011044e554: mov    %r8,0x38(%rsp)
  0x000000011044e559: mov    %r9,0x30(%rsp)
  0x000000011044e55e: mov    %r10,0x28(%rsp)
  0x000000011044e563: mov    %r11,0x20(%rsp)
  0x000000011044e568: mov    %r12,0x18(%rsp)
  0x000000011044e56d: mov    %r13,0x10(%rsp)
  0x000000011044e572: mov    %r14,0x8(%rsp)
  0x000000011044e577: mov    %r15,(%rsp)
  0x000000011044e57b: movabs $0x1031df39c,%rdi  ;   {external_word}
  0x000000011044e585: movabs $0x11044e525,%rsi  ;   {internal_word}
  0x000000011044e58f: mov    %rsp,%rdx
  0x000000011044e592: and    $0xfffffffffffffff0,%rsp
  0x000000011044e596: callq  0x0000000103006f7a  ;   {runtime_call}
  0x000000011044e59b: hlt    
[Deopt Handler Code]
  0x000000011044e59c: movabs $0x11044e59c,%r10  ;   {section_word}
  0x000000011044e5a6: push   %r10
  0x000000011044e5a8: jmpq   0x00000001101e3500  ;   {runtime_call}
  0x000000011044e5ad: hlt    
  0x000000011044e5ae: hlt    
  0x000000011044e5af: hlt    
<nmethod compile_id='10' compiler='C1' level='3' entry='0x000000011044e440' size='920' address='0x000000011044e2d0' relocation_offset='296' insts_offset='368' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='784' dependencies_offset='896' nul_chk_table_offset='904' method='java/lang/String length ()I' bytes='6' count='522' iicount='522' stamp='0.086'/>
<writer thread='40963'/>
Decoding compiled method 0x000000011044e690:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010d4d41a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x000000011044e860: mov    0x8(%rsi),%r10d
  0x000000011044e864: shl    $0x3,%r10
  0x000000011044e868: cmp    %rax,%r10
  0x000000011044e86b: jne    0x00000001101e1e60  ;   {runtime_call}
  0x000000011044e871: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000011044e87c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011044e880: mov    %eax,-0x14000(%rsp)
  0x000000011044e887: push   %rbp
  0x000000011044e888: sub    $0x60,%rsp
  0x000000011044e88c: movabs $0x10d6c26f0,%rdi  ;   {metadata(method data for {method} {0x000000010d4d41a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011044e896: mov    0xdc(%rdi),%ebx
  0x000000011044e89c: add    
<writer thread='4099'/>
[Loaded sun.net.util.URLUtil from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='40963'/>
$0x8,%ebx
  0x000000011044e89f: mov    %ebx,0xdc(%rdi)
  0x000000011044e8a5: movabs $0x10d4d41a0,%rdi  ;   {metadata({method} {0x000000010d4d41a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011044e8af: and    $0x1ff8,%ebx
  0x000000011044e8b5: cmp    $0x0,%ebx
  0x000000011044e8b8: je     0x000000011044eb86  ;*aload_0
                                                ; - java.lang.String::&lt;init&gt;@0 (line 190)

  0x000000011044e8be: mov    %rsi,%rdi
  0x000000011044e8c1: movabs $0x10d6c26f0,%rbx  ;   {metadata(method data for {method} {0x000000010d4d41a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011044e8cb: addq   $0x1,0x108(%rbx)
  0x000000011044e8d3: movabs $0x10d648ee0,%rdi  ;   {metadata(method data for {method} {0x000000010d4d1480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011044e8dd: mov    0xdc(%rdi),%ebx
  0x000000011044e8e3: add    $0x8,%ebx
  0x000000011044e8e6: mov    %ebx,0xdc(%rdi)
  0x000000011044e8ec: movabs $0x10d4d1480,%rdi  ;   {metadata({method} {0x000000010d4d1480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011044e8f6: and    $0x7ffff8,%ebx
  0x000000011044e8fc: cmp    $0x0,%ebx
  0x000000011044e8ff: je     0x000000011044eb9d
  0x000000011044e905: cmp    $0x0,%ecx
  0x000000011044e908: movabs $0x10d6c26f0,%rdi  ;   {metadata(method data for {method} {0x000000010d4d41a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011044e912: movabs $0x118,%rbx
  0x000000011044e91c: jge    0x000000011044e92c
  0x000000011044e922: movabs $0x128,%rbx
  0x000000011044e92c: mov    (%rdi,%rbx,1),%rax
  0x000000011044e930: lea    0x1(%rax),%rax
  0x000000011044e934: mov    %rax,(%rdi,%rbx,1)
  0x000000011044e938: jl     0x000000011044eb46  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)

  0x000000011044e93e: cmp    $0x0,%r8d
  0x000000011044e942: movabs $0x10d6c26f0,%rdi  ;   {metadata(method data for {method} {0x000000010d4d41a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011044e94c: movabs $0x148,%rbx
  0x000000011044e956: jg     0x000000011044e966
  0x000000011044e95c: movabs $0x158,%rbx
  0x000000011044e966: mov    (%rdi,%rbx,1),%rax
  0x000000011044e96a: lea    0x1(%rax),%rax
  0x000000011044e96e: mov    %rax,(%rdi,%rbx,1)
  0x000000011044e972: jg     0x000000011044e9ed  ;*ifgt
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)

  0x000000011044e978: cmp    $0x0,%r8d
  0x000000011044e97c: movabs $0x10d6c26f0,%rdi  ;   {metadata(method data for {method} {0x000000010d4d41a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011044e986: movabs $0x168,%rbx
  0x000000011044e990: jge    0x000000011044e9a0
  0x000000011044e996: movabs $0x178,%rbx
  0x000000011044e9a0: mov    (%rdi,%rbx,1),%rax
  0x000000011044e9a4: lea    0x1(%rax),%rax
  0x000000011044e9a8: mov    %rax,(%rdi,%rbx,1)
  0x000000011044e9ac: jl     0x000000011044eb06  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@22 (line 195)

  0x000000011044e9b2: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; implicit exception: dispatches to 0x000000011044ebb4
  0x000000011044e9b5: cmp    %edi,%ecx
  0x000000011044e9b7: movabs $0x10d6c26f0,%rdi  ;   {metadata(method data for {method} {0x000000010d4d41a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011044e9c1: movabs $0x198,%rbx
  0x000000011044e9cb: jg     0x000000011044e9db
  0x000000011044e9d1: movabs $0x1a8,%rbx
  0x000000011044e9db: mov    (%rdi,%rbx,1),%rax
  0x000000011044e9df: lea    0x1(%rax),%rax
  0x000000011044e9e3: mov    %rax,(%rdi,%rbx,1)
  0x000000011044e9e7: jle    0x000000011044ea82  ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)

  0x000000011044e9ed: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; implicit exception: dispatches to 0x000000011044ebb9
  0x000000011044e9f0: sub    %r8d,%edi
  0x000000011044e9f3: cmp    %edi,%ecx
  0x000000011044e9f5: movabs $0x10d6c26f0,%rdi  ;   {metadata(method data for {method} {0x000000010d4d41a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011044e9ff: movabs $0x1b8,%rbx
  0x000000011044ea09: jle    0x000000011044ea19
  0x000000011044ea0f: movabs $0x1c8,%rbx
  0x000000011044ea19: mov    (%rdi,%rbx,1),%rax
  0x000000011044ea1d: lea    0x1(%rax),%rax
  0x000000011044ea21: mov    %rax,(%rdi,%rbx,1)
  0x000000011044ea25: jg     0x000000011044eabc  ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)

  0x000000011044ea2b: mov    %rsi,0x38(%rsp)
  0x000000011044ea30: movabs $0x10d6c26f0,%rdi  ;   {metadata(method data for {method} {0x000000010d4d41a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011044ea3a: addq   $0x1,0x1e8(%rdi)
  0x000000011044ea42: add    %ecx,%r8d
  0x000000011044ea45: mov    %rdx,%rsi
  0x000000011044ea48: mov    %rcx,%rdx
  0x000000011044ea4b: mov    %r8,%rcx           ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)

  0x000000011044ea4e: nop
  0x000000011044ea4f: callq  0x00000001101e2520  ; OopMap{[56]=Oop off=500}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ;   {static_call}
  0x000000011044ea54: mov    0x38(%rsp),%rsi
  0x000000011044ea59: mov    %rax,%r10
  0x000000011044ea5c: shr    $0x3,%r10
  0x000000011044ea60: mov    %r10d,0xc(%rsi)
  0x000000011044ea64: shr    $0x9,%rsi
  0x000000011044ea68: movabs $0x10097a000,%rdx
  0x000000011044ea72: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)

  0x000000011044ea76: add    $0x60,%rsp
  0x000000011044ea7a: pop    %rbp
  0x000000011044ea7b: test   %eax,-0xf96f981(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x000000011044ea81: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@81 (line 208)

  0x000000011044ea82: movabs $0x76ab0a688,%rdx  ;   {oop(&quot;&quot;)}
  0x000000011044ea8c: mov    0xc(%rdx),%edx     ; implicit exception: dispatches to 0x000000011044ebbe
  0x000000011044ea8f: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)

  0x000000011044ea93: mov    %rdx,%r10
  0x000000011044ea96: shr    $0x3,%r10
  0x000000011044ea9a: mov    %r10d,0xc(%rsi)
  0x000000011044ea9e: shr    $0x9,%rsi
  0x000000011044eaa2: movabs $0x10097a000,%rdx
  0x000000011044eaac: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)

  0x000000011044eab0: add    $0x60,%rsp
  0x000000011044eab4: pop    %rbp
  0x000000011044eab5: test   %eax,-0xf96f9bb(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x000000011044eabb: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@49 (line 200)

  0x000000011044eabc: nopl   0x0(%rax)
  0x000000011044eac0: jmpq   0x000000011044ebd2  ;   {no_reloc}
  0x000000011044eac5: add    %al,(%rax)
  0x000000011044eac7: add    %al,(%rax)
  0x000000011044eac9: add    %ch,%cl
  0x000000011044eacb: or     $0x48000001,%eax   ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)

  0x000000011044ead0: mov    %eax,%edx
  0x000000011044ead2: movabs $0x10d6c26f0,%rsi  ;   {metadata(method data for {method} {0x000000010d4d41a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011044eadc: addq   $0x1,0x1d8(%rsi)
  0x000000011044eae4: add    %ecx,%r8d
  0x000000011044eae7: mov    %r8,%rdx
  0x000000011044eaea: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)

  0x000000011044eaed: mov    %rax,0x40(%rsp)
  0x000000011044eaf2: nop
  0x000000011044eaf3: nop
  0x000000011044eaf4: nop
  0x000000011044eaf5: nop
  0x000000011044eaf6: nop
  0x000000011044eaf7: callq  0x00000001101e20a0  ; OopMap{[64]=Oop off=668}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)
                                                ;   {optimized virtual_call}
  0x000000011044eafc: mov    0x40(%rsp),%rax
  0x000000011044eb01: jmpq   0x000000011044ec60  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@68 (line 205)

  0x000000011044eb06: xchg   %ax,%ax
  0x000000011044eb08: jmpq   0x000000011044ebf8  ;   {no_reloc}
  0x000000011044eb0d: add    %al,(%rax)
  0x000000011044eb0f: add    %al,(%rax)
  0x000000011044eb11: add    %ch,%cl
  0x000000011044eb13: jmp    0x000000011044eb15
  0x000000011044eb15: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)

  0x000000011044eb17: mov    %rax,%rdx
  0x000000011044eb1a: movabs $0x10d6c26f0,%rsi  ;   {metadata(method data for {method} {0x000000010d4d41a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011044eb24: addq   $0x1,0x188(%rsi)
  0x000000011044eb2c: mov    %r8,%rdx
  0x000000011044eb2f: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)

  0x000000011044eb32: mov    %rax,0x48(%rsp)
  0x000000011044eb37: callq  0x00000001101e20a0  ; OopMap{[72]=Oop off=732}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)
                                                ;   {optimized virtual_call}
  0x000000011044eb3c: mov    0x48(%rsp),%rax
  0x000000011044eb41: jmpq   0x000000011044ec60  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@33 (line 196)

  0x000000011044eb46: xchg   %ax,%ax
  0x000000011044eb48: jmpq   0x000000011044ec1e  ;   {no_reloc}
  0x000000011044eb4d: add    %al,(%rax)
  0x000000011044eb4f: add    %al,(%rax)
  0x000000011044eb51: add    %ch,%cl
  0x000000011044eb53: roll   (%rax)
  0x000000011044eb55: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)

  0x000000011044eb57: mov    %rax,%rdx
  0x000000011044eb5a: movabs $0x10d6c26f0,%rsi  ;   {metadata(method data for {method} {0x000000010d4d41a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011044eb64: addq   $0x1,0x138(%rsi)
  0x000000011044eb6c: mov    %rcx,%rdx
  0x000000011044eb6f: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)

  0x000000011044eb72: mov    %rax,0x50(%rsp)
  0x000000011044eb77: callq  0x00000001101e20a0  ; OopMap{[80]=Oop off=796}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)
                                                ;   {optimized virtual_call}
  0x000000011044eb7c: mov    0x50(%rsp),%rax
  0x000000011044eb81: jmpq   0x000000011044ec60
  0x000000011044eb86: mov    %rdi,0x8(%rsp)
  0x000000011044eb8b: movq   $0xffffffffffffffff,(%rsp)
  0x000000011044eb93: callq  0x000000011043fba0  ; OopMap{rsi=Oop rdx=Oop off=824}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ;   {runtime_call}
  0x000000011044eb98: jmpq   0x000000011044e8be
  0x000000011044eb9d: mov    %rdi,0x8(%rsp)
  0x000000011044eba2: movq   $0xffffffffffffffff,(%rsp)
  0x000000011044ebaa: callq  0x000000011043fba0  ; OopMap{rsi=Oop rdx=Oop off=847}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ;   {runtime_call}
  0x000000011044ebaf: jmpq   0x000000011044e905
  0x000000011044ebb4: callq  0x000000011020a100  ; OopMap{rsi=Oop rdx=Oop off=857}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ;   {runtime_call}
  0x000000011044ebb9: callq  0x000000011020a100  ; OopMap{rsi=Oop rdx=Oop off=862}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ;   {runtime_call}
  0x000000011044ebbe: callq  0x000000011020a100  ; OopMap{rsi=Oop off=867}
                                                ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ;   {runtime_call}
  0x000000011044ebc3: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011044ebcd: mov    $0xa050f00,%eax
  0x000000011044ebd2: callq  0x0000000110440b60  ; OopMap{off=887}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x000000011044ebd7: jmpq   0x000000011044eac0
  0x000000011044ebdc: mov    %rdx,%rdx
  0x000000011044ebdf: callq  0x0000000110209be0  ; OopMap{off=900}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x000000011044ebe4: jmpq   0x000000011044eacf
  0x000000011044ebe9: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011044ebf3: mov    $0xa050f00,%eax
  0x000000011044ebf8: callq  0x0000000110440b60  ; OopMap{off=925}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x000000011044ebfd: jmpq   0x000000011044eb08
  0x000000011044ec02: mov    %rdx,%rdx
  0x000000011044ec05: callq  0x0000000110209be0  ; OopMap{off=938}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x000000011044ec0a: jmpq   0x000000011044eb17
  0x000000011044ec0f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011044ec19: mov    $0xa050f00,%eax
  0x000000011044ec1e: callq  0x0000000110440b60  ; OopMap{off=963}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x000000011044ec23: jmpq   0x000000011044eb48
  0x000000011044ec28: mov    %rdx,%rdx
  0x000000011044ec2b: callq  0x0000000110209be0  ; OopMap{off=976}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x000000011044ec30: jmpq   0x000000011044eb57
  0x000000011044ec35: nop
  0x000000011044ec36: nop
  0x000000011044ec37: mov    0x2a8(%r15),%rax
  0x000000011044ec3e: movabs $0x0,%r10
  0x000000011044ec48: mov    %r10,0x2a8(%r15)
  0x000000011044ec4f: movabs $0x0,%r10
  0x000000011044ec59: mov    %r10,0x2b0(%r15)
  0x000000011044ec60: add    $0x60,%rsp
  0x000000011044ec64: pop    %rbp
  0x000000011044ec65: jmpq   0x0000000110208e20  ;   {runtime_call}
  0x000000011044ec6a: hlt    
  0x000000011044ec6b: hlt    
  0x000000011044ec6c: hlt    
  0x000000011044ec6d: hlt    
  0x000000011044ec6e: hlt    
  0x000000011044ec6f: hlt    
  0x000000011044ec70: hlt    
  0x000000011044ec71: hlt    
  0x000000011044ec72: hlt    
  0x000000011044ec73: hlt    
  0x000000011044ec74: hlt    
  0x000000011044ec75: hlt    
  0x000000011044ec76: hlt    
  0x000000011044ec77: hlt    
  0x000000011044ec78: hlt    
  0x000000011044ec79: hlt    
  0x000000011044ec7a: hlt    
  0x000000011044ec7b: hlt    
  0x000000011044ec7c: hlt    
  0x000000011044ec7d: hlt    
  0x000000011044ec7e: hlt    
  0x000000011044ec7f: hlt    
[Stub Code]
  0x000000011044ec80: nop                       ;   {no_reloc}
  0x000000011044ec81: nop
  0x000000011044ec82: nop
  0x000000011044ec83: nop
  0x000000011044ec84: nop
  0x000000011044ec85: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011044ec8f: jmpq   0x000000011044ec8f  ;   {runtime_call}
  0x000000011044ec94: nop
  0x000000011044ec95: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011044ec9f: jmpq   0x000000011044ec9f  ;   {runtime_call}
  0x000000011044eca4: nop
  0x000000011044eca5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011044ecaf: jmpq   0x000000011044ecaf  ;   {runtime_call}
  0x000000011044ecb4: nop
  0x000000011044ecb5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011044ecbf: jmpq   0x000000011044ecbf  ;   {runtime_call}
[Exception Handler]
  0x000000011044ecc4: callq  0x0000000110297b20  ;   {runtime_call}
  0x000000011044ecc9: mov    %rsp,-0x28(%rsp)
  0x000000011044ecce: sub    $0x80,%rsp
  0x000000011044ecd5: mov    %rax,0x78(%rsp)
  0x000000011044ecda: mov    %rcx,0x70(%rsp)
  0x000000011044ecdf: mov    %rdx,0x68(%rsp)
  0x000000011044ece4: mov    %rbx,0x60(%rsp)
  0x000000011044ece9: mov    %rbp,0x50(%rsp)
  0x000000011044ecee: mov    %rsi,0x48(%rsp)
  0x000000011044ecf3: mov    %rdi,0x40(%rsp)
  0x000000011044ecf8: mov    %r8,0x38(%rsp)
  0x000000011044ecfd: mov    %r9,0x30(%rsp)
  0x000000011044ed02: mov    %r10,0x28(%rsp)
  0x000000011044ed07: mov    %r11,0x20(%rsp)
  0x000000011044ed0c: mov    %r12,0x18(%rsp)
  0x000000011044ed11: mov    %r13,0x10(%rsp)
  0x000000011044ed16: mov    %r14,0x8(%rsp)
  0x000000011044ed1b: mov    %r15,(%rsp)
  0x000000011044ed1f: movabs $0x1031df39c,%rdi  ;   {external_word}
  0x000000011044ed29: movabs $0x11044ecc9,%rsi  ;   {internal_word}
  0x000000011044ed33: mov    %rsp,%rdx
  0x000000011044ed36: and    $0xfffffffffffffff0,%rsp
  0x000000011044ed3a: callq  0x0000000103006f7a  ;   {runtime_call}
  0x000000011044ed3f: hlt    
[Deopt Handler Code]
  0x000000011044ed40: movabs $0x11044ed40,%r10  ;   {section_word}
  0x000000011044ed4a: push   %r10
  0x000000011044ed4c: jmpq   0x00000001101e3500  ;   {runtime_call}
  0x000000011044ed51: hlt    
  0x000000011044ed52: hlt    
  0x000000011044ed53: hlt    
  0x000000011044ed54: hlt    
  0x000000011044ed55: hlt    
  0x000000011044ed56: hlt    
  0x000000011044ed57: hlt    
<nmethod compile_id='5' compiler='C1' level='3' entry='0x000000011044e860' size='2704' address='0x000000011044e690' relocation_offset='296' insts_offset='464' stub_offset='1520' scopes_data_offset='1752' scopes_pcs_offset='2040' dependencies_offset='2664' nul_chk_table_offset='2672' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='267' iicount='267' stamp='0.091'/>
<writer thread='41475'/>
                              @ 57   java.lang.System::arraycopy (0 bytes)   intrinsic
<writer thread='4099'/>
<task_queued compile_id='11' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='256' iicount='256' level='3' stamp='0.091' comment='tiered' hot_count='256'/>
[Loaded sun.misc.URLClassPath$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='23555'/>
     90   11       3       java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                              @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                     
<writer thread='4099'/>
[Loaded sun.misc.URLClassPath$Loader from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='41475'/>
Decoding compiled method 0x000000011044f150:
Code:
<writer thread='23555'/>
         @ 20   java.util.Arrays::
<writer thread='41475'/>
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010d5eca90} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Ar
<writer thread='23555'/>
copyOf (19 bytes)
<writer thread='41475'/>
rays&apos;
  # parm0:    rsi:rsi   = &apos;[C&apos;
  # parm1:    rdx       
<writer thread='23555'/>
             
<writer thread='41475'/>
= int
  # parm2:    rcx       = 
<writer thread='23555'/>
                   @ 11   java.lang.Math::min (11 bytes)
<writer thread='41475'/>
int
  #           [sp+0xb0]  (sp of caller)
  0x000000011044f360: mov    %eax,-0x14000(%rsp)
  0x000000011044f367: push   %rbp
  0x000000011044f368: sub    $0xa0,%rsp
  0x000000011044f36f: mov    %rsi,%r8
  0x000000011044f372: mov    %rdx,%r9
  0x000000011044f375: movabs $0x10d6c2348,%rbx  ;   {metadata(method data for {method} {0x000000010d5eca90} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011044f37f: mov    0xdc(%rbx),%edx
  0x000000011044f385: add    $0x8,%edx
  0x000000011044f388: mov    %edx,0xdc(%rbx)
  0x000000011044f38e: movabs $0x10d5eca90,%rbx  ;   {metadata({method} {0x000000010d5eca90} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011044f398: and    $0x1ff8,%edx
  0x000000011044f39e: cmp    $0x0,%edx
  0x000000011044f3a1: je     0x000000011044fc01  ;*iload_2
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x000000011044f3a7: mov    %rcx,%r11
  0x000000011044f3aa: sub    %r9d,%r11d
  0x000000011044f3ad: cmp    $0x0,%r11d
  0x000000011044f3b1: movabs $0x10d6c2348,%rbx  ;   {metadata(method data for {method} {0x000000010d5eca90} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011044f3bb: movabs $0x108,%rdx
  0x000000011044f3c5: jge    0x000000011044f3d5
  0x000000011044f3cb: movabs $0x118,%rdx
  0x000000011044f3d5: mov    (%rbx,%rdx,1),%rsi
  0x000000011044f3d9: lea    0x1(%rsi),%rsi
  0x000000011044f3dd: mov    %rsi,(%rbx,%rdx,1)
  0x000000011044f3e1: jl     0x000000011044f5a4  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x000000011044f3e7: mov    %r11,%rbx
  0x000000011044f3ea: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000011044f3f4: movslq %ebx,%rbx
  0x000000011044f3f7: mov    %rbx,%rdi
  0x000000011044f3fa: cmp    $0xffffff,%rbx
  0x000000011044f401: ja     0x000000011044fc18
  0x000000011044f407: movabs $0x17,%rsi
  0x000000011044f411: lea    (%rsi,%rbx,2),%rsi
  0x000000011044f415: and    $0xfffffffffffffff8,%rsi
  0x000000011044f419: mov    0x60(%r15),%rax
  0x000000011044f41d: lea    (%rax,%rsi,1),%rsi
  0x000000011044f421: cmp    0x70(%r15),%rsi
  0x000000011044f425: ja     0x000000011044fc18
  0x000000011044f42b: mov    %rsi,0x60(%r15)
  0x000000011044f42f: sub    %rax,%rsi
  0x000000011044f432: movq   $0x1,(%rax)
  0x000000011044f439: mov    %rdx,%rcx
  0x000000011044f43c: shr    $0x3,%rcx
  0x000000011044f440: mov    %ecx,0x8(%rax)
  0x000000011044f443: mov    %ebx,0xc(%rax)
  0x000000011044f446: sub    $0x10,%rsi
  0x000000011044f44a: je     0x000000011044f461
  0x000000011044f450: xor    %rbx,%rbx
  0x000000011044f453: shr    $0x3,%rsi
  0x000000011044f457: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011044f45c: dec    %rsi
  0x000000011044f45f: jne    0x000000011044f457  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x000000011044f461: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x000000011044fc22
  0x000000011044f465: sub    %r9d,%esi
  0x000000011044f468: movabs $0x10d6c2348,%rdx  ;   {metadata(method data for {method} {0x000000010d5eca90} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011044f472: addq   $0x1,0x208(%rdx)
  0x000000011044f47a: movabs $0x10d69e000,%rdx  ;   {metadata(method data for {method} {0x000000010d5c7b80} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011044f484: mov    0xdc(%rdx),%ecx
  0x000000011044f48a: add    $0x8,%ecx
  0x000000011044f48d: mov    %ecx,0xdc(%rdx)
  0x000000011044f493: movabs $0x10d5c7b80,%rdx  ;   {metadata({method} {0x000000010d5c7b80} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011044f49d: and    $0x7ffff8,%ecx
  0x000000011044f4a3: cmp    $0x0,%ecx
  0x000000011044f4a6: je     0x000000011044fc27
  0x000000011044f4ac: cmp    %r11d,%esi
  0x000000011044f4af: movabs $0x10d69e000,%rdx  ;   {metadata(method data for {method} {0x000000010d5c7b80} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011044f4b9: movabs $0x108,%rcx
  0x000000011044f4c3: jg     0x000000011044f4d3
  0x000000011044f4c9: movabs $0x118,%rcx
  0x000000011044f4d3: mov    (%rdx,%rcx,1),%rdi
  0x000000011044f4d7: lea    0x1(%rdi),%rdi
  0x000000011044f4db: mov    %rdi,(%rdx,%rcx,1)
  0x000000011044f4df: jg     0x000000011044f4fd  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x000000011044f4e5: movabs $0x10d69e000,%rdx  ;   {metadata(method data for {method} {0x000000010d5c7b80} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011044f4ef: incl   0x128(%rdx)
  0x000000011044f4f5: mov    %rsi,%rdi
  0x000000011044f4f8: jmpq   0x000000011044f500  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x000000011044f4fd: mov    %r11,%rdi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x000000011044f500: movabs $0x10d6c2348,%rsi  ;   {metadata(method data for {method} {0x000000010d5eca90} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011044f50a: addq   $0x1,0x218(%rsi)
  0x000000011044f512: mov    %r8,%rsi
  0x000000011044f515: mov    %r9,%rdx
  0x000000011044f518: mov    %rax,%rcx
  0x000000011044f51b: mov    $0x0,%r8d
  0x000000011044f521: mov    %rdi,%r9
  0x000000011044f524: mov    %rax,0x70(%rsp)
  0x000000011044f529: test   %edx,%edx
  0x000000011044f52b: jl     0x000000011044fc3e
  0x000000011044f531: lea    (%rdx,%r9,1),%rdi
  0x000000011044f535: cmp    0xc(%rsi),%edi
  0x000000011044f538: ja     0x000000011044fc3e
  0x000000011044f53e: lea    (%r8,%r9,1),%rdi
  0x000000011044f542: cmp    0xc(%rcx),%edi
  0x000000011044f545: ja     0x000000011044fc3e
  0x000000011044f54b: test   %r9d,%r9d
  0x000000011044f54e: jl     0x000000011044fc3e
  0x000000011044f554: je     0x000000011044f590
  0x000000011044f55a: movslq %edx,%rdx
  0x000000011044f55d: movslq %r8d,%r8
  0x000000011044f560: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000011044f565: lea    0x10(%rcx,%r8,2),%rsi
  0x000000011044f56a: mov    %r9,%rdx
  0x000000011044f56d: test   $0xf,%esp
  0x000000011044f573: je     0x000000011044f58b
  0x000000011044f579: sub    $0x8,%rsp
  0x000000011044f57d: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000011044f582: add    $0x8,%rsp
  0x000000011044f586: jmpq   0x000000011044f590
  0x000000011044f58b: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {runtime_call}
  0x000000011044f590: mov    0x70(%rsp),%rax
  0x000000011044f595: add    $0xa0,%rsp
  0x000000011044f59c: pop    %rbp
  0x000000011044f59d: test   %eax,-0xf9704a3(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x000000011044f5a3: retq                      ;*areturn
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x000000011044f5a4: mov    %ecx,0x80(%rsp)
  0x000000011044f5ab: nopl   0x0(%rax,%rax,1)
  0x000000011044f5b0: jmpq   0x000000011044fc58  ;   {no_reloc}
  0x000000011044f5b5: add    %al,(%rax)
  0x000000011044f5b7: add    %al,(%rax)
  0x000000011044f5b9: add    %cl,-0x75(%rcx)
  0x000000011044f5bc: rex.RXB (bad) 
  0x000000011044f5be: lea    0x20(%rax),%rdi
  0x000000011044f5c2: cmp    0x70(%r15),%rdi
  0x000000011044f5c6: ja     0x000000011044fc62
  0x000000011044f5cc: mov    %rdi,0x60(%r15)
  0x000000011044f5d0: mov    0xa8(%rdx),%rcx
  0x000000011044f5d7: mov    %rcx,(%rax)
  0x000000011044f5da: mov    %rdx,%rcx
  0x000000011044f5dd: shr    $0x3,%rcx
  0x000000011044f5e1: mov    %ecx,0x8(%rax)
  0x000000011044f5e4: xor    %rcx,%rcx
  0x000000011044f5e7: mov    %ecx,0xc(%rax)
  0x000000011044f5ea: xor    %rcx,%rcx
  0x000000011044f5ed: mov    %rcx,0x10(%rax)
  0x000000011044f5f1: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x000000011044f5f5: data16 xchg %ax,%ax
  0x000000011044f5f8: jmpq   0x000000011044fc7e  ;   {no_reloc}
  0x000000011044f5fd: add    %al,(%rax)
  0x000000011044f5ff: add    %al,(%rax)
  0x000000011044f601: add    %cl,-0x77(%rax)
  0x000000011044f604: test   %ah,(%rax,%rcx,4)
  0x000000011044f607: add    %al,(%rax)
  0x000000011044f609: add    %cl,-0x75(%rcx)
  0x000000011044f60c: rex.RXB (bad) 
  0x000000011044f60e: lea    0x18(%rax),%rdi
  0x000000011044f612: cmp    0x70(%r15),%rdi
  0x000000011044f616: ja     0x000000011044fc88
  0x000000011044f61c: mov    %rdi,0x60(%r15)
  0x000000011044f620: mov    0xa8(%rdx),%rcx
  0x000000011044f627: mov    %rcx,(%rax)
  0x000000011044f62a: mov    %rdx,%rcx
  0x000000011044f62d: shr    $0x3,%rcx
  0x000000011044f631: mov    %ecx,0x8(%rax)
  0x000000011044f634: xor    %rcx,%rcx
  0x000000011044f637: mov    %ecx,0xc(%rax)
  0x000000011044f63a: xor    %rcx,%rcx
  0x000000011044f63d: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x000000011044f641: mov    %rax,%rbx
  0x000000011044f644: movabs $0x10d6c2348,%rdx  ;   {metadata(method data for {method} {0x000000010d5eca90} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011044f64e: addq   $0x1,0x128(%rdx)
  0x000000011044f656: movabs $0x10d6c25c0,%rbx  ;   {metadata(method data for {method} {0x000000010d54a060} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011044f660: mov    0xdc(%rbx),%edx
  0x000000011044f666: add    $0x8,%edx
  0x000000011044f669: mov    %edx,0xdc(%rbx)
  0x000000011044f66f: movabs $0x10d54a060,%rbx  ;   {metadata({method} {0x000000010d54a060} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011044f679: and    $0x7ffff8,%edx
  0x000000011044f67f: cmp    $0x0,%edx
  0x000000011044f682: je     0x000000011044fc95
  0x000000011044f688: mov    %rax,%rbx
  0x000000011044f68b: movabs $0x10d6c25c0,%rdx  ;   {metadata(method data for {method} {0x000000010d54a060} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011044f695: addq   $0x1,0x108(%rdx)
  0x000000011044f69d: movabs $0x10d6c2940,%rbx  ;   {metadata(method data for {method} {0x000000010d546390} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011044f6a7: mov    0xdc(%rbx),%edx
  0x000000011044f6ad: add    $0x8,%edx
  0x000000011044f6b0: mov    %edx,0xdc(%rbx)
  0x000000011044f6b6: movabs $0x10d546390,%rbx  ;   {metadata({method} {0x000000010d546390} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011044f6c0: and    $0x7ffff8,%edx
  0x000000011044f6c6: cmp    $0x0,%edx
  0x000000011044f6c9: je     0x000000011044fcac
  0x000000011044f6cf: mov    %rax,%rbx
  0x000000011044f6d2: movabs $0x10d6c2940,%rdx  ;   {metadata(method data for {method} {0x000000010d546390} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011044f6dc: addq   $0x1,0x108(%rdx)
  0x000000011044f6e4: movabs $0x10d648ee0,%rbx  ;   {metadata(method data for {method} {0x000000010d4d1480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011044f6ee: mov    0xdc(%rbx),%edx
  0x000000011044f6f4: add    $0x8,%edx
  0x000000011044f6f7: mov    %edx,0xdc(%rbx)
  0x000000011044f6fd: movabs $0x10d4d1480,%rbx  ;   {metadata({method} {0x000000010d4d1480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011044f707: and    $0x7ffff8,%edx
  0x000000011044f70d: cmp    $0x0,%edx
  0x000000011044f710: je     0x000000011044fcc3
  0x000000011044f716: mov    $0x10,%ebx
  0x000000011044f71b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000011044f725: mov    %rax,%r13
  0x000000011044f728: movslq %ebx,%rbx
  0x000000011044f72b: mov    %rbx,%rdi
  0x000000011044f72e: cmp    $0xffffff,%rbx
  0x000000011044f735: ja     0x000000011044fcda
  0x000000011044f73b: movabs $0x17,%rsi
  0x000000011044f745: lea    (%rsi,%rbx,2),%rsi
  0x000000011044f749: and    $0xfffffffffffffff8,%rsi
  0x000000011044f74d: mov    0x60(%r15),%rax
  0x000000011044f751: lea    (%rax,%rsi,1),%rsi
  0x000000011044f755: cmp    0x70(%r15),%rsi
  0x000000011044f759: ja     0x000000011044fcda
  0x000000011044f75f: mov    %rsi,0x60(%r15)
  0x000000011044f763: sub    %rax,%rsi
  0x000000011044f766: movq   $0x1,(%rax)
  0x000000011044f76d: mov    %rdx,%rcx
  0x000000011044f770: shr    $0x3,%rcx
  0x000000011044f774: mov    %ecx,0x8(%rax)
  0x000000011044f777: mov    %ebx,0xc(%rax)
  0x000000011044f77a: sub    $0x10,%rsi
  0x000000011044f77e: je     0x000000011044f795
  0x000000011044f784: xor    %rbx,%rbx
  0x000000011044f787: shr    $0x3,%rsi
  0x000000011044f78b: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011044f790: dec    %rsi
  0x000000011044f793: jne    0x000000011044f78b  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x000000011044f795: mov    %rax,%r10
  0x000000011044f798: shr    $0x3,%r10
  0x000000011044f79c: mov    %r10d,0x10(%r13)
  0x000000011044f7a0: mov    %r13,%rax
  0x000000011044f7a3: shr    $0x9,%rax
  0x000000011044f7a7: movabs $0x10097a000,%rdx
  0x000000011044f7b1: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x000000011044f7b5: mov    %r13,%rax
  0x000000011044f7b8: movabs $0x10d6c2348,%rdx  ;   {metadata(method data for {method} {0x000000010d5eca90} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011044f7c2: mov    0x8(%rax),%eax
  0x000000011044f7c5: shl    $0x3,%rax
  0x000000011044f7c9: cmp    0x140(%rdx),%rax
  0x000000011044f7d0: jne    0x000000011044f7df
  0x000000011044f7d2: addq   $0x1,0x148(%rdx)
  0x000000011044f7da: jmpq   0x000000011044f845
  0x000000011044f7df: cmp    0x150(%rdx),%rax
  0x000000011044f7e6: jne    0x000000011044f7f5
  0x000000011044f7e8: addq   $0x1,0x158(%rdx)
  0x000000011044f7f0: jmpq   0x000000011044f845
  0x000000011044f7f5: cmpq   $0x0,0x140(%rdx)
  0x000000011044f800: jne    0x000000011044f819
  0x000000011044f802: mov    %rax,0x140(%rdx)
  0x000000011044f809: movq   $0x1,0x148(%rdx)
  0x000000011044f814: jmpq   0x000000011044f845
  0x000000011044f819: cmpq   $0x0,0x150(%rdx)
  0x000000011044f824: jne    0x000000011044f83d
  0x000000011044f826: mov    %rax,0x150(%rdx)
  0x000000011044f82d: movq   $0x1,0x158(%rdx)
  0x000000011044f838: jmpq   0x000000011044f845
  0x000000011044f83d: addq   $0x1,0x138(%rdx)
  0x000000011044f845: movabs $0x10d6c2fa8,%rdx  ;   {metadata(method data for {method} {0x000000010d54a838} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011044f84f: mov    0xdc(%rdx),%esi
  0x000000011044f855: add    $0x8,%esi
  0x000000011044f858: mov    %esi,0xdc(%rdx)
  0x000000011044f85e: movabs $0x10d54a838,%rdx  ;   {metadata({method} {0x000000010d54a838} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011044f868: and    $0x7ffff8,%esi
  0x000000011044f86e: cmp    $0x0,%esi
  0x000000011044f871: je     0x000000011044fce4
  0x000000011044f877: mov    %r13,%rax
  0x000000011044f87a: movabs $0x10d6c2fa8,%rdx  ;   {metadata(method data for {method} {0x000000010d54a838} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011044f884: addq   $0x1,0x108(%rdx)
  0x000000011044f88c: mov    %r9,%rdx
  0x000000011044f88f: mov    %r13,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x000000011044f892: mov    %r13,0x78(%rsp)
  0x000000011044f897: callq  0x00000001101e20a0  ; OopMap{[120]=Oop [136]=Oop off=1340}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000011044f89c: mov    0x78(%rsp),%rax
  0x000000011044f8a1: movabs $0x10d6c2348,%rdx  ;   {metadata(method data for {method} {0x000000010d5eca90} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011044f8ab: mov    0x8(%rax),%eax
  0x000000011044f8ae: shl    $0x3,%rax
  0x000000011044f8b2: cmp    0x170(%rdx),%rax
  0x000000011044f8b9: jne    0x000000011044f8c8
  0x000000011044f8bb: addq   $0x1,0x178(%rdx)
  0x000000011044f8c3: jmpq   0x000000011044f92e
  0x000000011044f8c8: cmp    0x180(%rdx),%rax
  0x000000011044f8cf: jne    0x000000011044f8de
  0x000000011044f8d1: addq   $0x1,0x188(%rdx)
  0x000000011044f8d9: jmpq   0x000000011044f92e
  0x000000011044f8de: cmpq   $0x0,0x170(%rdx)
  0x000000011044f8e9: jne    0x000000011044f902
  0x000000011044f8eb: mov    %rax,0x170(%rdx)
  0x000000011044f8f2: movq   $0x1,0x178(%rdx)
  0x000000011044f8fd: jmpq   0x000000011044f92e
  0x000000011044f902: cmpq   $0x0,0x180(%rdx)
  0x000000011044f90d: jne    0x000000011044f926
  0x000000011044f90f: mov    %rax,0x180(%rdx)
  0x000000011044f916: movq   $0x1,0x188(%rdx)
  0x000000011044f921: jmpq   0x000000011044f92e
  0x000000011044f926: addq   $0x1,0x168(%rdx)
  0x000000011044f92e: movabs $0x10d6c3548,%rdx  ;   {metadata(method data for {method} {0x000000010d54a378} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011044f938: mov    0xdc(%rdx),%esi
  0x000000011044f93e: add    $0x8,%esi
  0x000000011044f941: mov    %esi,0xdc(%rdx)
  0x000000011044f947: movabs $0x10d54a378,%rdx  ;   {metadata({method} {0x000000010d54a378} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011044f951: and    $0x7ffff8,%esi
  0x000000011044f957: cmp    $0x0,%esi
  0x000000011044f95a: je     0x000000011044fcfb
  0x000000011044f960: mov    0x78(%rsp),%rax
  0x000000011044f965: movabs $0x10d6c3548,%rdx  ;   {metadata(method data for {method} {0x000000010d54a378} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011044f96f: addq   $0x1,0x108(%rdx)
  0x000000011044f977: movabs $0x76ac47af0,%rdx  ;   {oop(&quot; &gt; &quot;)}
  0x000000011044f981: mov    0x78(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x000000011044f986: nop
  0x000000011044f987: callq  0x00000001101e20a0  ; OopMap{[120]=Oop [136]=Oop off=1580}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000011044f98c: mov    0x78(%rsp),%rax
  0x000000011044f991: movabs $0x10d6c2348,%rdx  ;   {metadata(method data for {method} {0x000000010d5eca90} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011044f99b: mov    0x8(%rax),%eax
  0x000000011044f99e: shl    $0x3,%rax
  0x000000011044f9a2: cmp    0x1a0(%rdx),%rax
  0x000000011044f9a9: jne    0x000000011044f9b8
  0x000000011044f9ab: addq   $0x1,0x1a8(%rdx)
  0x000000011044f9b3: jmpq   0x000000011044fa1e
  0x000000011044f9b8: cmp    0x1b0(%rdx),%rax
  0x000000011044f9bf: jne    0x000000011044f9ce
  0x000000011044f9c1: addq   $0x1,0x1b8(%rdx)
  0x000000011044f9c9: jmpq   0x000000011044fa1e
  0x000000011044f9ce: cmpq   $0x0,0x1a0(%rdx)
  0x000000011044f9d9: jne    0x000000011044f9f2
  0x000000011044f9db: mov    %rax,0x1a0(%rdx)
  0x000000011044f9e2: movq   $0x1,0x1a8(%rdx)
  0x000000011044f9ed: jmpq   0x000000011044fa1e
  0x000000011044f9f2: cmpq   $0x0,0x1b0(%rdx)
  0x000000011044f9fd: jne    0x000000011044fa16
  0x000000011044f9ff: mov    %rax,0x1b0(%rdx)
  0x000000011044fa06: movq   $0x1,0x1b8(%rdx)
  0x000000011044fa11: jmpq   0x000000011044fa1e
  0x000000011044fa16: addq   $0x1,0x198(%rdx)
  0x000000011044fa1e: movabs $0x10d6c2fa8,%rdx  ;   {metadata(method data for {method} {0x000000010d54a838} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011044fa28: mov    0xdc(%rdx),%esi
  0x000000011044fa2e: add    $0x8,%esi
  0x000000011044fa31: mov    %esi,0xdc(%rdx)
  0x000000011044fa37: movabs $0x10d54a838,%rdx  ;   {metadata({method} {0x000000010d54a838} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011044fa41: and    $0x7ffff8,%esi
  0x000000011044fa47: cmp    $0x0,%esi
  0x000000011044fa4a: je     0x000000011044fd12
  0x000000011044fa50: mov    0x78(%rsp),%rax
  0x000000011044fa55: movabs $0x10d6c2fa8,%rdx  ;   {metadata(method data for {method} {0x000000010d54a838} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011044fa5f: addq   $0x1,0x108(%rdx)
  0x000000011044fa67: mov    0x80(%rsp),%edx
  0x000000011044fa6e: mov    0x78(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x000000011044fa73: nop
  0x000000011044fa74: nop
  0x000000011044fa75: nop
  0x000000011044fa76: nop
  0x000000011044fa77: callq  0x00000001101e20a0  ; OopMap{[120]=Oop [136]=Oop off=1820}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000011044fa7c: mov    0x78(%rsp),%rax
  0x000000011044fa81: movabs $0x10d6c2348,%rdx  ;   {metadata(method data for {method} {0x000000010d5eca90} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011044fa8b: mov    0x8(%rax),%eax
  0x000000011044fa8e: shl    $0x3,%rax
  0x000000011044fa92: cmp    0x1d0(%rdx),%rax
  0x000000011044fa99: jne    0x000000011044faa8
  0x000000011044fa9b: addq   $0x1,0x1d8(%rdx)
  0x000000011044faa3: jmpq   0x000000011044fb0e
  0x000000011044faa8: cmp    0x1e0(%rdx),%rax
  0x000000011044faaf: jne    0x000000011044fabe
  0x000000011044fab1: addq   $0x1,0x1e8(%rdx)
  0x000000011044fab9: jmpq   0x000000011044fb0e
  0x000000011044fabe: cmpq   $0x0,0x1d0(%rdx)
  0x000000011044fac9: jne    0x000000011044fae2
  0x000000011044facb: mov    %rax,0x1d0(%rdx)
  0x000000011044fad2: movq   $0x1,0x1d8(%rdx)
  0x000000011044fadd: jmpq   0x000000011044fb0e
  0x000000011044fae2: cmpq   $0x0,0x1e0(%rdx)
  0x000000011044faed: jne    0x000000011044fb06
  0x000000011044faef: mov    %rax,0x1e0(%rdx)
  0x000000011044faf6: movq   $0x1,0x1e8(%rdx)
  0x000000011044fb01: jmpq   0x000000011044fb0e
  0x000000011044fb06: addq   $0x1,0x1c8(%rdx)
  0x000000011044fb0e: movabs $0x10d6c7a60,%rdx  ;   {metadata(method data for {method} {0x000000010d54b728} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011044fb18: mov    0xdc(%rdx),%esi
  0x000000011044fb1e: add    $0x8,%esi
  0x000000011044fb21: mov    %esi,0xdc(%rdx)
  0x000000011044fb27: movabs $0x10d54b728,%rdx  ;   {metadata({method} {0x000000010d54b728} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011044fb31: and    $0x7ffff8,%esi
  0x000000011044fb37: cmp    $0x0,%esi
  0x000000011044fb3a: je     0x000000011044fd29
  0x000000011044fb40: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000011044fb4a: mov    0x60(%r15),%rax
  0x000000011044fb4e: lea    0x18(%rax),%rdi
  0x000000011044fb52: cmp    0x70(%r15),%rdi
  0x000000011044fb56: ja     0x000000011044fd40
  0x000000011044fb5c: mov    %rdi,0x60(%r15)
  0x000000011044fb60: mov    0xa8(%rdx),%rcx
  0x000000011044fb67: mov    %rcx,(%rax)
  0x000000011044fb6a: mov    %rdx,%rcx
  0x000000011044fb6d: shr    $0x3,%rcx
  0x000000011044fb71: mov    %ecx,0x8(%rax)
  0x000000011044fb74: xor    %rcx,%rcx
  0x000000011044fb77: mov    %ecx,0xc(%rax)
  0x000000011044fb7a: xor    %rcx,%rcx
  0x000000011044fb7d: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000011044fb81: mov    0x78(%rsp),%rdx
  0x000000011044fb86: mov    0x10(%rdx),%ecx
  0x000000011044fb89: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000011044fb8d: mov    0xc(%rdx),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000011044fb91: mov    %rax,%rdx
  0x000000011044fb94: movabs $0x10d6c7a60,%rsi  ;   {metadata(method data for {method} {0x000000010d54b728} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011044fb9e: addq   $0x1,0x108(%rsi)
  0x000000011044fba6: mov    %rcx,%rdx
  0x000000011044fba9: mov    $0x0,%ecx
  0x000000011044fbae: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000011044fbb1: mov    %rax,0x90(%rsp)
  0x000000011044fbb9: nop
  0x000000011044fbba: nop
  0x000000011044fbbb: nop
  0x000000011044fbbc: nop
  0x000000011044fbbd: nop
  0x000000011044fbbe: nop
  0x000000011044fbbf: callq  0x00000001101e20a0  ; OopMap{[136]=Oop [144]=Oop off=2148}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000011044fbc4: mov    0x88(%rsp),%rax
  0x000000011044fbcc: movabs $0x10d6c2348,%rdx  ;   {metadata(method data for {method} {0x000000010d5eca90} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011044fbd6: addq   $0x1,0x1f8(%rdx)
  0x000000011044fbde: mov    0x90(%rsp),%rdx
  0x000000011044fbe6: mov    0x88(%rsp),%rsi    ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x000000011044fbee: nop
  0x000000011044fbef: callq  0x00000001101e20a0  ; OopMap{[136]=Oop off=2196}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000011044fbf4: mov    0x88(%rsp),%rax
  0x000000011044fbfc: jmpq   0x000000011044fd78
  0x000000011044fc01: mov    %rbx,0x8(%rsp)
  0x000000011044fc06: movq   $0xffffffffffffffff,(%rsp)
  0x000000011044fc0e: callq  0x000000011043fba0  ; OopMap{r8=Oop off=2227}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x000000011044fc13: jmpq   0x000000011044f3a7
  0x000000011044fc18: callq  0x00000001102987e0  ; OopMap{r8=Oop off=2237}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x000000011044fc1d: jmpq   0x000000011044f461
  0x000000011044fc22: callq  0x000000011020a100  ; OopMap{r8=Oop rax=Oop off=2247}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x000000011044fc27: mov    %rdx,0x8(%rsp)
  0x000000011044fc2c: movq   $0xffffffffffffffff,(%rsp)
  0x000000011044fc34: callq  0x000000011043fba0  ; OopMap{r8=Oop rax=Oop off=2265}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x000000011044fc39: jmpq   0x000000011044f4ac
  0x000000011044fc3e: nop
  0x000000011044fc3f: callq  0x00000001101e2520  ; OopMap{[112]=Oop off=2276}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x000000011044fc44: jmpq   0x000000011044f590
  0x000000011044fc49: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011044fc53: mov    $0xa050f00,%eax
  0x000000011044fc58: callq  0x0000000110440b60  ; OopMap{off=2301}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x000000011044fc5d: jmpq   0x000000011044f5b0
  0x000000011044fc62: mov    %rdx,%rdx
  0x000000011044fc65: callq  0x00000001102097a0  ; OopMap{off=2314}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x000000011044fc6a: jmpq   0x000000011044f5f5
  0x000000011044fc6f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011044fc79: mov    $0xa050f00,%eax
  0x000000011044fc7e: callq  0x0000000110440b60  ; OopMap{rax=Oop off=2339}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x000000011044fc83: jmpq   0x000000011044f5f8
  0x000000011044fc88: mov    %rdx,%rdx
  0x000000011044fc8b: callq  0x00000001102097a0  ; OopMap{[136]=Oop off=2352}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x000000011044fc90: jmpq   0x000000011044f641
  0x000000011044fc95: mov    %rbx,0x8(%rsp)
  0x000000011044fc9a: movq   $0xffffffffffffffff,(%rsp)
  0x000000011044fca2: callq  0x000000011043fba0  ; OopMap{[136]=Oop rax=Oop off=2375}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000011044fca7: jmpq   0x000000011044f688
  0x000000011044fcac: mov    %rbx,0x8(%rsp)
  0x000000011044fcb1: movq   $0xffffffffffffffff,(%rsp)
  0x000000011044fcb9: callq  0x000000011043fba0  ; OopMap{[136]=Oop rax=Oop off=2398}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000011044fcbe: jmpq   0x000000011044f6cf
  0x000000011044fcc3: mov    %rbx,0x8(%rsp)
  0x000000011044fcc8: movq   $0xffffffffffffffff,(%rsp)
  0x000000011044fcd0: callq  0x000000011043fba0  ; OopMap{[136]=Oop rax=Oop off=2421}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000011044fcd5: jmpq   0x000000011044f716
  0x000000011044fcda: callq  0x00000001102987e0  ; OopMap{[136]=Oop r13=Oop off=2431}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000011044fcdf: jmpq   0x000000011044f795
  0x000000011044fce4: mov    %rdx,0x8(%rsp)
  0x000000011044fce9: movq   $0xffffffffffffffff,(%rsp)
  0x000000011044fcf1: callq  0x000000011043fba0  ; OopMap{[136]=Oop r13=Oop off=2454}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x000000011044fcf6: jmpq   0x000000011044f877
  0x000000011044fcfb: mov    %rdx,0x8(%rsp)
  0x000000011044fd00: movq   $0xffffffffffffffff,(%rsp)
  0x000000011044fd08: callq  0x000000011043fba0  ; OopMap{[120]=Oop [136]=Oop off=2477}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x000000011044fd0d: jmpq   0x000000011044f960
  0x000000011044fd12: mov    %rdx,0x8(%rsp)
  0x000000011044fd17: movq   $0xffffffffffffffff,(%rsp)
  0x000000011044fd1f: callq  0x000000011043fba0  ; OopMap{[120]=Oop [136]=Oop off=2500}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x000000011044fd24: jmpq   0x000000011044fa50
  0x000000011044fd29: mov    %rdx,0x8(%rsp)
  0x000000011044fd2e: movq   $0xffffffffffffffff,(%rsp)
  0x000000011044fd36: callq  0x000000011043fba0  ; OopMap{[120]=Oop [136]=Oop off=2523}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x000000011044fd3b: jmpq   0x000000011044fb40
  0x000000011044fd40: mov    %rdx,%rdx
  0x000000011044fd43: callq  0x00000001102097a0  ; OopMap{[120]=Oop [136]=Oop off=2536}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x000000011044fd48: jmpq   0x000000011044fb81
  0x000000011044fd4d: nop
  0x000000011044fd4e: nop
  0x000000011044fd4f: mov    0x2a8(%r15),%rax
  0x000000011044fd56: movabs $0x0,%r10
  0x000000011044fd60: mov    %r10,0x2a8(%r15)
  0x000000011044fd67: movabs $0x0,%r10
  0x000000011044fd71: mov    %r10,0x2b0(%r15)
  0x000000011044fd78: add    $0xa0,%rsp
  0x000000011044fd7f: pop    %rbp
  0x000000011044fd80: jmpq   0x0000000110208e20  ;   {runtime_call}
  0x000000011044fd85: hlt    
  0x000000011044fd86: hlt    
  0x000000011044fd87: hlt    
  0x000000011044fd88: hlt    
  0x000000011044fd89: hlt    
  0x000000011044fd8a: hlt    
  0x000000011044fd8b: hlt    
  0x000000011044fd8c: hlt    
  0x000000011044fd8d: hlt    
  0x000000011044fd8e: hlt    
  0x000000011044fd8f: hlt    
  0x000000011044fd90: hlt    
  0x000000011044fd91: hlt    
  0x000000011044fd92: hlt    
  0x000000011044fd93: hlt    
  0x000000011044fd94: hlt    
  0x000000011044fd95: hlt    
  0x000000011044fd96: hlt    
  0x000000011044fd97: hlt    
  0x000000011044fd98: hlt    
  0x000000011044fd99: hlt    
  0x000000011044fd9a: hlt    
  0x000000011044fd9b: hlt    
  0x000000011044fd9c: hlt    
  0x000000011044fd9d: hlt    
  0x000000011044fd9e: hlt    
  0x000000011044fd9f: hlt    
[Stub Code]
  0x000000011044fda0: nop                       ;   {no_reloc}
  0x000000011044fda1: nop
  0x000000011044fda2: nop
  0x000000011044fda3: nop
  0x000000011044fda4: nop
  0x000000011044fda5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011044fdaf: jmpq   0x000000011044fdaf  ;   {runtime_call}
  0x000000011044fdb4: nop
  0x000000011044fdb5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011044fdbf: jmpq   0x000000011044fdbf  ;   {runtime_call}
  0x000000011044fdc4: nop
  0x000000011044fdc5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011044fdcf: jmpq   0x000000011044fdcf  ;   {runtime_call}
  0x000000011044fdd4: nop
  0x000000011044fdd5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011044fddf: jmpq   0x000000011044fddf  ;   {runtime_call}
  0x000000011044fde4: nop
  0x000000011044fde5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011044fdef: jmpq   0x000000011044fdef  ;   {runtime_call}
  0x000000011044fdf4: nop
  0x000000011044fdf5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011044fdff: jmpq   0x000000011044fdff  ;   {runtime_call}
[Exception Handler]
  0x000000011044fe04: callq  0x0000000110297b20  ;   {runtime_call}
  0x000000011044fe09: mov    %rsp,-0x28(%rsp)
  0x000000011044fe0e: sub    $0x80,%rsp
  0x000000011044fe15: mov    %rax,0x78(%rsp)
  0x000000011044fe1a: mov    %rcx,0x70(%rsp)
  0x000000011044fe1f: mov    %rdx,0x68(%rsp)
  0x000000011044fe24: mov    %rbx,0x60(%rsp)
  0x000000011044fe29: mov    %rbp,0x50(%rsp)
  0x000000011044fe2e: mov    %rsi,0x48(%rsp)
  0x000000011044fe33: mov    %rdi,0x40(%rsp)
  0x000000011044fe38: mov    %r8,0x38(%rsp)
  0x000000011044fe3d: mov    %r9,0x30(%rsp)
  0x000000011044fe42: mov    %r10,0x28(%rsp)
  0x000000011044fe47: mov    %r11,0x20(%rsp)
  0x000000011044fe4c: mov    %r12,0x18(%rsp)
  0x000000011044fe51: mov    %r13,0x10(%rsp)
  0x000000011044fe56: mov    %r14,0x8(%rsp)
  0x000000011044fe5b: mov    %r15,(%rsp)
  0x000000011044fe5f: movabs $0x1031df39c,%rdi  ;   {external_word}
  0x000000011044fe69: movabs $0x11044fe09,%rsi  ;   {internal_word}
  0x000000011044fe73: mov    %rsp,%rdx
  0x000000011044fe76: and    $0xfffffffffffffff0,%rsp
  0x000000011044fe7a: callq  0x0000000103006f7a  ;   {runtime_call}
  0x000000011044fe7f: hlt    
[Deopt Handler Code]
  0x000000011044fe80: movabs $0x11044fe80,%r10  ;   {section_word}
  0x000000011044fe8a: push   %r10
  0x000000011044fe8c: jmpq   0x00000001101e3500  ;   {runtime_call}
  0x000000011044fe91: hlt    
  0x000000011044fe92: hlt    
  0x000000011044fe93: hlt    
  0x000000011044fe94: hlt    
  0x000000011044fe95: hlt    
  0x000000011044fe96: hlt    
  0x000000011044fe97: hlt    
<nmethod compile_id='6' compiler='C1' level='3' entry='0x000000011044f360' size='4856' address='0x000000011044f150' relocation_offset='296' insts_offset='528' stub_offset='3152' scopes_data_offset='3472' scopes_pcs_offset='4096' dependencies_offset='4832' nul_chk_table_offset='4840' oops_offset='3400' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='268' iicount='268' stamp='0.100'/>
<writer thread='23555'/>
                                @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
<writer thread='4099'/>
[Loaded sun.misc.URLClassPath$JarLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipConstants from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='23555'/>
Decoding compiled method 0x0000000110450490:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010d546610} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx       = int
  #           [sp+0xb0]  (sp of caller)
  0x0000000110450620: mov    0x8(%rsi),%r10d
  0x0000000110450624: shl    $0x3,%r10
  0x0000000110450628: cmp    %rax,%r10
  0x000000011045062b: jne    0x00000001101e1e60  ;   {runtime_call}
  0x0000000110450631: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000011045063c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110450640: mov    %eax,-0x14000(%rsp)
  0x0000000110450647: push   %rbp
  0x0000000110450648: sub    $0xa0,%rsp
  0x000000011045064f: movabs $0x10d6cc080,%rdi  ;   {metadata(method data for {method} {0x000000010d546610} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000110450659: mov    0xdc(%rdi),%ebx
  0x000000011045065f: add    $0x8,%ebx
  0x0000000110450662: mov    %ebx,0xdc(%rdi)
  0x0000000110450668: movabs $0x10d546610,%rdi  ;   {metadata({method} {0x000000010d546610} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000110450672: and    $0x1ff8,%ebx
  0x0000000110450678: cmp    $0x0,%ebx
  0x000000011045067b: je     0x000000011045092f  ;*iload_1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@0 (line 123)

  0x0000000110450681: mov    0x10(%rsi),%edi
  0x0000000110450684: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x0000000110450688: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; implicit exception: dispatches to 0x0000000110450946
  0x000000011045068b: mov    %rdx,%rax
  0x000000011045068e: sub    %ebx,%eax
  0x0000000110450690: cmp    $0x0,%eax
  0x0000000110450693: movabs $0x10d6cc080,%rax  ;   {metadata(method data for {method} {0x000000010d546610} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011045069d: movabs $0x108,%rcx
  0x00000001104506a7: jle    0x00000001104506b7
  0x00000001104506ad: movabs $0x118,%rcx
  0x00000001104506b7: mov    (%rax,%rcx,1),%r8
  0x00000001104506bb: lea    0x1(%r8),%r8
  0x00000001104506bf: mov    %r8,(%rax,%rcx,1)
  0x00000001104506c3: jle    0x0000000110450920  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)

  0x00000001104506c9: mov    %ebx,0x78(%rsp)
  0x00000001104506cd: mov    %rdi,0x80(%rsp)
  0x00000001104506d5: mov    %rsi,%rax
  0x00000001104506d8: movabs $0x10d6cc080,%rcx  ;   {metadata(method data for {method} {0x000000010d546610} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000001104506e2: addq   $0x1,0x128(%rcx)
  0x00000001104506ea: mov    %rsi,%rax
  0x00000001104506ed: mov    %rax,%rsi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00000001104506f0: mov    %rax,0x88(%rsp)
  0x00000001104506f8: nop
  0x00000001104506f9: nop
  0x00000001104506fa: nop
  0x00000001104506fb: nop
  0x00000001104506fc: nop
  0x00000001104506fd: nop
  0x00000001104506fe: nop
  0x00000001104506ff: callq  0x00000001101e20a0  ; OopMap{[128]=Oop [136]=Oop off=228}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {optimized virtual_call}
  0x0000000110450704: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000110450707: movabs $0x10d6cc080,%rbx  ;   {metadata(method data for {method} {0x000000010d546610} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000110450711: addq   $0x1,0x138(%rbx)
  0x0000000110450719: movabs $0x10d6ce9c0,%rbx  ;   {metadata(method data for {method} {0x000000010d5ec2c8} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000110450723: mov    0xdc(%rbx),%edx
  0x0000000110450729: add    $0x8,%edx
  0x000000011045072c: mov    %edx,0xdc(%rbx)
  0x0000000110450732: movabs $0x10d5ec2c8,%rbx  ;   {metadata({method} {0x000000010d5ec2c8} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011045073c: and    $0x7ffff8,%edx
  0x0000000110450742: cmp    $0x0,%edx
  0x0000000110450745: je     0x000000011045094b
  0x000000011045074b: mov    %r8,%rbx
  0x000000011045074e: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000110450758: movslq %ebx,%rbx
  0x000000011045075b: mov    %rbx,%rdi
  0x000000011045075e: cmp    $0xffffff,%rbx
  0x0000000110450765: ja     0x0000000110450962
  0x000000011045076b: movabs $0x17,%rsi
  0x0000000110450775: lea    (%rsi,%rbx,2),%rsi
  0x0000000110450779: and    $0xfffffffffffffff8,%rsi
  0x000000011045077d: mov    0x60(%r15),%rax
  0x0000000110450781: lea    (%rax,%rsi,1),%rsi
  0x0000000110450785: cmp    0x70(%r15),%rsi
  0x0000000110450789: ja     0x0000000110450962
  0x000000011045078f: mov    %rsi,0x60(%r15)
  0x0000000110450793: sub    %rax,%rsi
  0x0000000110450796: movq   $0x1,(%rax)
  0x000000011045079d: mov    %rdx,%rcx
  0x00000001104507a0: shr    $0x3,%rcx
  0x00000001104507a4: mov    %ecx,0x8(%rax)
  0x00000001104507a7: mov    %ebx,0xc(%rax)
  0x00000001104507aa: sub    $0x10,%rsi
  0x00000001104507ae: je     0x00000001104507c5
  0x00000001104507b4: xor    %rbx,%rbx
  0x00000001104507b7: shr    $0x3,%rsi
  0x00000001104507bb: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000001104507c0: dec    %rsi
  0x00000001104507c3: jne    0x00000001104507bb  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000001104507c5: movabs $0x10d6ce9c0,%rsi  ;   {metadata(method data for {method} {0x000000010d5ec2c8} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000001104507cf: addq   $0x1,0x108(%rsi)
  0x00000001104507d7: movabs $0x10d69e000,%rsi  ;   {metadata(method data for {method} {0x000000010d5c7b80} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000001104507e1: mov    0xdc(%rsi),%edx
  0x00000001104507e7: add    $0x8,%edx
  0x00000001104507ea: mov    %edx,0xdc(%rsi)
  0x00000001104507f0: movabs $0x10d5c7b80,%rsi  ;   {metadata({method} {0x000000010d5c7b80} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000001104507fa: and    $0x7ffff8,%edx
  0x0000000110450800: cmp    $0x0,%edx
  0x0000000110450803: je     0x000000011045096c
  0x0000000110450809: mov    0x78(%rsp),%ebx
  0x000000011045080d: cmp    %r8d,%ebx
  0x0000000110450810: movabs $0x10d69e000,%rsi  ;   {metadata(method data for {method} {0x000000010d5c7b80} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011045081a: movabs $0x108,%rdx
  0x0000000110450824: jg     0x0000000110450834
  0x000000011045082a: movabs $0x118,%rdx
  0x0000000110450834: mov    (%rsi,%rdx,1),%rcx
  0x0000000110450838: lea    0x1(%rcx),%rcx
  0x000000011045083c: mov    %rcx,(%rsi,%rdx,1)
  0x0000000110450840: jg     0x000000011045085b  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000110450846: movabs $0x10d69e000,%rsi  ;   {metadata(method data for {method} {0x000000010d5c7b80} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000110450850: incl   0x128(%rsi)
  0x0000000110450856: jmpq   0x000000011045085e  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000011045085b: mov    %r8,%rbx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000011045085e: mov    0x80(%rsp),%rdi
  0x0000000110450866: movabs $0x10d6ce9c0,%rsi  ;   {metadata(method data for {method} {0x000000010d5ec2c8} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000110450870: addq   $0x1,0x118(%rsi)
  0x0000000110450878: mov    %rdi,%rsi
  0x000000011045087b: mov    $0x0,%edx
  0x0000000110450880: mov    %rax,%rcx
  0x0000000110450883: mov    $0x0,%r8d
  0x0000000110450889: mov    %rbx,%r9
  0x000000011045088c: mov    %rax,0x90(%rsp)
  0x0000000110450894: lea    (%rdx,%r9,1),%rdi
  0x0000000110450898: cmp    0xc(%rsi),%edi
  0x000000011045089b: ja     0x0000000110450983
  0x00000001104508a1: lea    (%r8,%r9,1),%rdi
  0x00000001104508a5: cmp    0xc(%rcx),%edi
  0x00000001104508a8: ja     0x0000000110450983
  0x00000001104508ae: test   %r9d,%r9d
  0x00000001104508b1: jl     0x0000000110450983
  0x00000001104508b7: je     0x00000001104508f3
  0x00000001104508bd: movslq %edx,%rdx
  0x00000001104508c0: movslq %r8d,%r8
  0x00000001104508c3: lea    0x10(%rsi,%rdx,2),%rdi
  0x00000001104508c8: lea    0x10(%rcx,%r8,2),%rsi
  0x00000001104508cd: mov    %r9,%rdx
  0x00000001104508d0: test   $0xf,%esp
  0x00000001104508d6: je     0x00000001104508ee
  0x00000001104508dc: sub    $0x8,%rsp
  0x00000001104508e0: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000001104508e5: add    $0x8,%rsp
  0x00000001104508e9: jmpq   0x00000001104508f3
  0x00000001104508ee: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00000001104508f3: mov    0x90(%rsp),%rax
  0x00000001104508fb: mov    0x88(%rsp),%rsi
  0x0000000110450903: mov    %rax,%r10
  0x0000000110450906: shr    $0x3,%r10
  0x000000011045090a: mov    %r10d,0x10(%rsi)
  0x000000011045090e: shr    $0x9,%rsi
  0x0000000110450912: movabs $0x10097a000,%rdi
  0x000000011045091c: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)

  0x0000000110450920: add    $0xa0,%rsp
  0x0000000110450927: pop    %rbp
  0x0000000110450928: test   %eax,-0xf97182e(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x000000011045092e: retq   
  0x000000011045092f: mov    %rdi,0x8(%rsp)
  0x0000000110450934: movq   $0xffffffffffffffff,(%rsp)
  0x000000011045093c: callq  0x000000011043fba0  ; OopMap{rsi=Oop off=801}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ;   {runtime_call}
  0x0000000110450941: jmpq   0x0000000110450681
  0x0000000110450946: callq  0x000000011020a100  ; OopMap{rsi=Oop rdi=Oop off=811}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x000000011045094b: mov    %rbx,0x8(%rsp)
  0x0000000110450950: movq   $0xffffffffffffffff,(%rsp)
  0x0000000110450958: callq  0x000000011043fba0  ; OopMap{[128]=Oop [136]=Oop off=829}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000011045095d: jmpq   0x000000011045074b
  0x0000000110450962: callq  0x00000001102987e0  ; OopMap{[128]=Oop [136]=Oop off=839}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x0000000110450967: jmpq   0x00000001104507c5
  0x000000011045096c: mov    %rsi,0x8(%rsp)
  0x0000000110450971: movq   $0xffffffffffffffff,(%rsp)
  0x0000000110450979: callq  0x000000011043fba0  ; OopMap{[128]=Oop [136]=Oop rax=Oop off=862}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000011045097e: jmpq   0x0000000110450809
  0x0000000110450983: nop
  0x0000000110450984: nop
  0x0000000110450985: nop
  0x0000000110450986: nop
  0x0000000110450987: callq  0x00000001101e2520  ; OopMap{[136]=Oop [144]=Oop off=876}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {static_call}
  0x000000011045098c: jmpq   0x00000001104508f3
  0x0000000110450991: nop
  0x0000000110450992: nop
  0x0000000110450993: mov    0x2a8(%r15),%rax
  0x000000011045099a: movabs $0x0,%r10
  0x00000001104509a4: mov    %r10,0x2a8(%r15)
  0x00000001104509ab: movabs $0x0,%r10
  0x00000001104509b5: mov    %r10,0x2b0(%r15)
  0x00000001104509bc: add    $0xa0,%rsp
  0x00000001104509c3: pop    %rbp
  0x00000001104509c4: jmpq   0x0000000110208e20  ;   {runtime_call}
  0x00000001104509c9: hlt    
  0x00000001104509ca: hlt    
  0x00000001104509cb: hlt    
  0x00000001104509cc: hlt    
  0x00000001104509cd: hlt    
  0x00000001104509ce: hlt    
  0x00000001104509cf: hlt    
  0x00000001104509d0: hlt    
  0x00000001104509d1: hlt    
  0x00000001104509d2: hlt    
  0x00000001104509d3: hlt    
  0x00000001104509d4: hlt    
  0x00000001104509d5: hlt    
  0x00000001104509d6: hlt    
  0x00000001104509d7: hlt    
  0x00000001104509d8: hlt    
  0x00000001104509d9: hlt    
  0x00000001104509da: hlt    
  0x00000001104509db: hlt    
  0x00000001104509dc: hlt    
  0x00000001104509dd: hlt    
  0x00000001104509de: hlt    
  0x00000001104509df: hlt    
[Stub Code]
  0x00000001104509e0: nop                       ;   {no_reloc}
  0x00000001104509e1: nop
  0x00000001104509e2: nop
  0x00000001104509e3: nop
  0x00000001104509e4: nop
  0x00000001104509e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001104509ef: jmpq   0x00000001104509ef  ;   {runtime_call}
  0x00000001104509f4: nop
  0x00000001104509f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001104509ff: jmpq   0x00000001104509ff  ;   {runtime_call}
[Exception Handler]
  0x0000000110450a04: callq  0x0000000110297b20  ;   {runtime_call}
  0x0000000110450a09: mov    %rsp,-0x28(%rsp)
  0x0000000110450a0e: sub    $0x80,%rsp
  0x0000000110450a15: mov    %rax,0x78(%rsp)
  0x0000000110450a1a: mov    %rcx,0x70(%rsp)
  0x0000000110450a1f: mov    %rdx,0x68(%rsp)
  0x0000000110450a24: mov    %rbx,0x60(%rsp)
  0x0000000110450a29: mov    %rbp,0x50(%rsp)
  0x0000000110450a2e: mov    %rsi,0x48(%rsp)
  0x0000000110450a33: mov    %rdi,0x40(%rsp)
  0x0000000110450a38: mov    %r8,0x38(%rsp)
  0x0000000110450a3d: mov    %r9,0x30(%rsp)
  0x0000000110450a42: mov    %r10,0x28(%rsp)
  0x0000000110450a47: mov    %r11,0x20(%rsp)
  0x0000000110450a4c: mov    %r12,0x18(%rsp)
  0x0000000110450a51: mov    %r13,0x10(%rsp)
  0x0000000110450a56: mov    %r14,0x8(%rsp)
  0x0000000110450a5b: mov    %r15,(%rsp)
  0x0000000110450a5f: movabs $0x1031df39c,%rdi  ;   {external_word}
  0x0000000110450a69: movabs $0x110450a09,%rsi  ;   {internal_word}
  0x0000000110450a73: mov    %rsp,%rdx
  0x0000000110450a76: and    $0xfffffffffffffff0,%rsp
  0x0000000110450a7a: callq  0x0000000103006f7a  ;   {runtime_call}
  0x0000000110450a7f: hlt    
[Deopt Handler Code]
  0x0000000110450a80: movabs $0x110450a80,%r10  ;   {section_word}
  0x0000000110450a8a: push   %r10
  0x0000000110450a8c: jmpq   0x00000001101e3500  ;   {runtime_call}
  0x0000000110450a91: hlt    
  0x0000000110450a92: hlt    
  0x0000000110450a93: hlt    
  0x0000000110450a94: hlt    
  0x0000000110450a95: hlt    
  0x0000000110450a96: hlt    
  0x0000000110450a97: hlt    
<nmethod compile_id='11' compiler='C1' level='3' entry='0x0000000110450620' size='2128' address='0x0000000110450490' relocation_offset='296' insts_offset='400' stub_offset='1360' scopes_data_offset='1568' scopes_pcs_offset='1768' dependencies_offset='2104' nul_chk_table_offset='2112' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='257' iicount='257' stamp='0.103'/>
<writer thread='4099'/>
[Loaded java.util.zip.ZipFile from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaUtilZipFileAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<task_queued compile_id='12' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='256' iicount='256' level='1' stamp='0.104' comment='tiered' hot_count='256'/>
<writer thread='40195'/>
    104   12       1       java.lang.ref.Reference::get (5 bytes)
Decoding compiled method 0x0000000110451110:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010d4f95b8} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ref/Reference&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000110451260: mov    0x8(%rsi),%r10d
  0x0000000110451264: shl    $0x3,%r10
  0x0000000110451268: cmp    %rax,%r10
  0x000000011045126b: jne    0x00000001101e1e60  ;   {runtime_call}
  0x0000000110451271: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000011045127c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110451280: mov    %eax,-0x14000(%rsp)
  0x0000000110451287: push   %rbp
  0x0000000110451288: sub    $0x30,%rsp
  0x000000011045128c: mov    0xc(%rsi),%eax
  0x000000011045128f: shl    $0x3,%rax          ;*aload_0
                                                ; - java.lang.ref.Reference::get@0 (line 254)

  0x0000000110451293: add    $0x30,%rsp
  0x0000000110451297: pop    %rbp
  0x0000000110451298: test   %eax,-0xf97219e(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x000000011045129e: retq   
  0x000000011045129f: nop
  0x00000001104512a0: nop
  0x00000001104512a1: mov    0x2a8(%r15),%rax
  0x00000001104512a8: movabs $0x0,%r10
  0x00000001104512b2: mov    %r10,0x2a8(%r15)
  0x00000001104512b9: movabs $0x0,%r10
  0x00000001104512c3: mov    %r10,0x2b0(%r15)
  0x00000001104512ca: add    $0x30,%rsp
  0x00000001104512ce: pop    %rbp
  0x00000001104512cf: jmpq   0x0000000110208e20  ;   {runtime_call}
  0x00000001104512d4: hlt    
  0x00000001104512d5: hlt    
  0x00000001104512d6: hlt    
  0x00000001104512d7: hlt    
  0x00000001104512d8: hlt    
  0x00000001104512d9: hlt    
  0x00000001104512da: hlt    
  0x00000001104512db: hlt    
  0x00000001104512dc: hlt    
  0x00000001104512dd: hlt    
  0x00000001104512de: hlt    
  0x00000001104512df: hlt    
[Exception Handler]
[Stub Code]
  0x00000001104512e0: callq  0x0000000110297b20  ;   {no_reloc}
  0x00000001104512e5: mov    %rsp,-0x28(%rsp)
  0x00000001104512ea: sub    $0x80,%rsp
  0x00000001104512f1: mov    %rax,0x78(%rsp)
  0x00000001104512f6: mov    %rcx,0x70(%rsp)
  0x00000001104512fb: mov    %rdx,0x68(%rsp)
  0x0000000110451300: mov    %rbx,0x60(%rsp)
  0x0000000110451305: mov    %rbp,0x50(%rsp)
  0x000000011045130a: mov    %rsi,0x48(%rsp)
  0x000000011045130f: mov    %rdi,0x40(%rsp)
  0x0000000110451314: mov    %r8,0x38(%rsp)
  0x0000000110451319: mov    %r9,0x30(%rsp)
  0x000000011045131e: mov    %r10,0x28(%rsp)
  0x0000000110451323: mov    %r11,0x20(%rsp)
  0x0000000110451328: mov    %r12,0x18(%rsp)
  0x000000011045132d: mov    %r13,0x10(%rsp)
  0x0000000110451332: mov    %r14,0x8(%rsp)
  0x0000000110451337: mov    %r15,(%rsp)
  0x000000011045133b: movabs $0x1031df39c,%rdi  ;   {external_word}
  0x0000000110451345: movabs $0x1104512e5,%rsi  ;   {internal_word}
  0x000000011045134f: mov    %rsp,%rdx
  0x0000000110451352: and    $0xfffffffffffffff0,%rsp
  0x0000000110451356: callq  0x0000000103006f7a  ;   {runtime_call}
  0x000000011045135b: hlt    
[Deopt Handler Code]
  0x000000011045135c: movabs $0x11045135c,%r10  ;   {section_word}
  0x0000000110451366: push   %r10
  0x0000000110451368: jmpq   0x00000001101e3500  ;   {runtime_call}
  0x000000011045136d: hlt    
  0x000000011045136e: hlt    
  0x000000011045136f: hlt    
<nmethod compile_id='12' compiler='C1' level='1' entry='0x0000000110451260' size='680' address='0x0000000110451110' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='624' dependencies_offset='672' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='264' iicount='264' stamp='0.106'/>
<writer thread='4099'/>
<task_queued compile_id='13' method='java/lang/String getChars (II[CI)V' bytes='62' count='256' iicount='256' level='3' stamp='0.106' comment='tiered' hot_count='256'/>
<writer thread='40963'/>
    105   13       3       java.lang.String::getChars (62 bytes)
<writer thread='4099'/>
<task_queued compile_id='14' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='256' iicount='256' level='3' stamp='0.106' comment='tiered' hot_count='256'/>
<writer thread='40963'/>
                              @ 9  java/lang/StringIndexOutOfBoundsException::&lt;init&gt;
<writer thread='40195'/>
    105   14       3       java.lang.System::getSecurityManager (4 bytes)
<writer thread='40963'/>
 (not loaded)
<writer thread='4099'/>
[Loaded sun.misc.URLClassPath$JarLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='40963'/>
   not inlineable
                              @ 27  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)
<writer thread='4099'/>
[Loaded sun.misc.FileURLMapper from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='40195'/>
Decoding compiled method 0x00000001104513d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010d4ea6b0}
<writer thread='40963'/>
   not inlineable
<writer thread='40195'/>
 &apos;
<writer thread='40963'/>
                              
<writer thread='40195'/>
get
<writer thread='40963'/>
@ 43  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='40195'/>
Secur
<writer thread='40963'/>

<writer thread='40195'/>
ityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000110451520: mov    %eax,-0x14000(%rsp)
  0x0000000110451527: push   %rbp
  0x0000000110451528: sub    $0x30,%rsp
  0x000000011045152c: movabs $0x10d6d6fa8,%rax  ;   {metadata(method data for {method} {0x000000010d4ea6b0} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x0000000110451536: mov    0xdc(%rax),%esi
  0x000000011045153c: add    $0x8,%esi
  0x000000011045153f: mov    %esi,0xdc(%rax)
  0x0000000110451545: movabs $0x10d4ea6b0,%rax  ;   {metadata({method} {0x000000010d4ea6b0} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x000000011045154f: and    $0x1ff8,%esi
  0x0000000110451555: cmp    $0x0,%esi
  0x0000000110451558: je     0x000000011045157b
  0x000000011045155e: movabs $0x76ab00c78,%rax  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x0000000110451568: mov    0x74(%rax),%eax
  0x000000011045156b: shl    $0x3,%rax          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)

  0x000000011045156f: add    $0x30,%rsp
  0x0000000110451573: pop    %rbp
  0x0000000110451574: test   %eax,-0xf97247a(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x000000011045157a: retq   
  0x000000011045157b: mov    %rax,0x8(%rsp)
  0x0000000110451580: movq   $0xffffffffffffffff,(%rsp)
  0x0000000110451588: callq  0x000000011043fba0  ; OopMap{off=109}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ;   {runtime_call}
  0x000000011045158d: jmp    0x000000011045155e
  0x000000011045158f: nop
  0x0000000110451590: nop
  0x0000000110451591: mov    0x2a8(%r15),%rax
  0x0000000110451598: movabs $0x0,%r10
  0x00000001104515a2: mov    %r10,0x2a8(%r15)
  0x00000001104515a9: movabs $0x0,%r10
  0x00000001104515b3: mov    %r10,0x2b0(%r15)
  0x00000001104515ba: add    $0x30,%rsp
  0x00000001104515be: pop    %rbp
  0x00000001104515bf: jmpq   0x0000000110208e20  ;   {runtime_call}
  0x00000001104515c4: hlt    
  0x00000001104515c5: hlt    
  0x00000001104515c6: hlt    
  0x00000001104515c7: hlt    
  0x00000001104515c8: hlt    
  0x00000001104515c9: hlt    
  0x00000001104515ca: hlt    
  0x00000001104515cb: hlt    
  0x00000001104515cc: hlt    
  0x00000001104515cd: hlt    
  0x00000001104515ce: hlt    
  0x00000001104515cf: hlt    
  0x00000001104515d0: hlt    
  0x00000001104515d1: hlt    
  0x00000001104515d2: hlt    
  0x00000001104515d3: hlt    
  0x00000001104515d4: hlt    
  0x00000001104515d5: hlt    
  0x00000001104515d6: hlt    
  0x00000001104515d7: hlt    
  0x00000001104515d8: hlt    
  0x00000001104515d9: hlt    
  0x00000001104515da: hlt    
  0x00000001104515db: hlt    
  0x00000001104515dc: hlt    
  0x00000001104515dd: hlt    
  0x00000001104515de: hlt    
  0x00000001104515df: hlt    
[Exception Handler]
[Stub Code]
  0x00000001104515e0: callq  0x0000000110297b20  ;   {no_reloc}
  0x00000001104515e5: mov    %rsp,-0x28(%rsp)
  0x00000001104515ea: sub    $0x80,%rsp
  0x00000001104515f1: mov    %rax,0x78(%rsp)
  0x00000001104515f6: mov    %rcx,0x70(%rsp)
  0x00000001104515fb: mov    %rdx,0x68(%rsp)
  0x0000000110451600: mov    %rbx,0x60(%rsp)
  0x0000000110451605: mov    %rbp,0x50(%rsp)
  0x000000011045160a: mov    %rsi,0x48(%rsp)
  0x000000011045160f: mov    %rdi,0x40(%rsp)
  0x0000000110451614: mov    %r8,0x38(%rsp)
  0x0000000110451619: mov    %r9,0x30(%rsp)
  0x000000011045161e: mov    %r10,0x28(%rsp)
  0x0000000110451623: mov    %r11,0x20(%rsp)
  0x0000000110451628: mov    %r12,0x18(%rsp)
  0x000000011045162d: mov    %r13,0x10(%rsp)
  0x0000000110451632: mov    %r14,0x8(%rsp)
  0x0000000110451637: mov    %r15,(%rsp)
  0x000000011045163b: movabs $0x1031df39c,%rdi  ;   {external_word}
  0x0000000110451645: movabs $0x1104515e5,%rsi  ;   {internal_word}
  0x000000011045164f: mov    %rsp,%rdx
  0x0000000110451652: and    $0xfffffffffffffff0,%rsp
  0x0000000110451656: callq  0x0000000103006f7a  ;   {runtime_call}
  0x000000011045165b: hlt    
[Deopt Handler Code]
  0x000000011045165c: movabs $0x11045165c,%r10  ;   {section_word}
  0x0000000110451666: push   %r10
  0x0000000110451668: jmpq   0x00000001101e3500  ;   {runtime_call}
  0x000000011045166d: hlt    
  0x000000011045166e: hlt    
  0x000000011045166f: hlt    
<nmethod compile_id='14' compiler='C1' level='3' entry='0x0000000110451520' size='768' address='0x00000001104513d0' relocation_offset='296' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='696' dependencies_offset='760' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='256' iicount='256' stamp='0.107'/>
<writer thread='40963'/>
                              @ 58   java.lang.System::arraycopy (0 bytes)   intrinsic
<writer thread='4099'/>
<task_queued compile_id='15' method='java/lang/String indexOf (I)I' bytes='7' count='256' iicount='256' level='3' stamp='0.108' comment='tiered' hot_count='256'/>
<task_queued compile_id='16' method='java/lang/ThreadLocal access$400 (Ljava/lang/ThreadLocal;)I' bytes='5' count='128' iicount='128' level='1' stamp='0.108' comment='tiered' hot_count='128'/>
<writer thread='41475'/>
    107   15       3       java.lang.String::indexOf (7 bytes)
<writer thread='40963'/>
Decoding compiled method 0x0000000110451710:
Code:
<writer thread='23555'/>
    107   16       1       java.lang.ThreadLocal::access$400 (5 bytes)
<writer thread='4099'/>
[Loaded java.util.jar.JarFile from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='40963'/>
[Entry Point]
[Constants]
  # {method} {0x000000010d4d5208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  # parm2:    r8:r8     = &apos;[C&apos;
  # parm3:    r9        = int
  #           [sp+0x70]  (sp of caller)
  0x00000001104518c0: mov    0x8(%rsi),%r10d
  0x00000001104518c4: shl    $0x3,%r10
  0x00000001104518c8: cmp    %rax,%r10
  0x00000001104518cb: jne    0x00000001101e1e60  ;   {runtime_call}
  0x00000001104518d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000001104518dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000001104518e0: mov    %eax,-0x14000(%rsp)
  0x00000001104518e7: push   %rbp
  0x00000001104518e8: sub    $0x60,%rsp
  0x00000001104518ec: mov    %rdx,%rdi
  0x00000001104518ef: movabs $0x10d6d64e8,%rdx  ;   {metadata(method data for {method} {0x000000010d4d5208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000001104518f9: mov    0xdc(%rdx),%ebx
  0x00000001104518ff: add    $0x8,%ebx
  0x0000000110451902: mov    %ebx,0xdc(%rdx)
  0x0000000110451908: movabs $0x10d4d5208,%rdx  ;   {metadata({method} {0x000000010d4d5208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000110451912: and    $0x1ff8,%ebx
  0x0000000110451918: cmp    $0x0,%ebx
  0x000000011045191b: je     0x0000000110451b46  ;*iload_1
                                                ; - java.lang.String::getChars@0 (line 817)

  0x0000000110451921: cmp    $0x0,%edi
  0x0000000110451924: movabs $0x10d6d64e8,%rdx  ;   {metadata(method data for {method} {0x000000010d4d5208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011045192e: movabs $0x108,%rbx
  0x0000000110451938: jge    0x0000000110451948
  0x000000011045193e: movabs $0x118,%rbx
  0x0000000110451948: mov    (%rdx,%rbx,1),%rax
  0x000000011045194c: lea    0x1(%rax),%rax
  0x0000000110451950: mov    %rax,(%rdx,%rbx,1)
  0x0000000110451954: jl     0x0000000110451b06  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)

  0x000000011045195a: mov    0xc(%rsi),%esi
  0x000000011045195d: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)

  0x0000000110451961: mov    0xc(%rsi),%edx     ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; implicit exception: dispatches to 0x0000000110451b5d
  0x0000000110451964: cmp    %edx,%ecx
  0x0000000110451966: movabs $0x10d6d64e8,%rdx  ;   {metadata(method data for {method} {0x000000010d4d5208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000110451970: movabs $0x138,%rbx
  0x000000011045197a: jle    0x000000011045198a
  0x0000000110451980: movabs $0x148,%rbx
  0x000000011045198a: mov    (%rdx,%rbx,1),%rax
  0x000000011045198e: lea    0x1(%rax),%rax
  0x0000000110451992: mov    %rax,(%rdx,%rbx,1)
  0x0000000110451996: jg     0x0000000110451ac6  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)

  0x000000011045199c: cmp    %ecx,%edi
  0x000000011045199e: movabs $0x10d6d64e8,%rdx  ;   {metadata(method data for {method} {0x000000010d4d5208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000001104519a8: movabs $0x168,%rbx
  0x00000001104519b2: jle    0x00000001104519c2
  0x00000001104519b8: movabs $0x178,%rbx
  0x00000001104519c2: mov    (%rdx,%rbx,1),%rax
  0x00000001104519c6: lea    0x1(%rax),%rax
  0x00000001104519ca: mov    %rax,(%rdx,%rbx,1)
  0x00000001104519ce: jg     0x0000000110451a7c  ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 823)

  0x00000001104519d4: movabs $0x10d6d64e8,%rdx  ;   {metadata(method data for {method} {0x000000010d4d5208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000001104519de: addq   $0x1,0x198(%rdx)
  0x00000001104519e6: mov    %rcx,%rbx
  0x00000001104519e9: sub    %edi,%ebx
  0x00000001104519eb: mov    %rdi,%rdx
  0x00000001104519ee: mov    %r8,%rcx
  0x00000001104519f1: mov    %r9,%r8
  0x00000001104519f4: mov    %rbx,%r9
  0x00000001104519f7: test   %rcx,%rcx
  0x00000001104519fa: je     0x0000000110451b62
  0x0000000110451a00: test   %edx,%edx
  0x0000000110451a02: jl     0x0000000110451b62
  0x0000000110451a08: test   %r8d,%r8d
  0x0000000110451a0b: jl     0x0000000110451b62
  0x0000000110451a11: lea    (%rdx,%r9,1),%rdi
  0x0000000110451a15: cmp    0xc(%rsi),%edi
  0x0000000110451a18: ja     0x0000000110451b62
  0x0000000110451a1e: lea    (%r8,%r9,1),%rdi
  0x0000000110451a22: cmp    0xc(%rcx),%edi
  0x0000000110451a25: ja     0x0000000110451b62
  0x0000000110451a2b: test   %r9d,%r9d
  0x0000000110451a2e: jl     0x0000000110451b62
  0x0000000110451a34: je     0x0000000110451a70
  0x0000000110451a3a: movslq %edx,%rdx
  0x0000000110451a3d: movslq %r8d,%r8
  0x0000000110451a40: lea    0x10(%rsi,%rdx,2),%rdi
  0x0000000110451a45: lea    0x10(%rcx,%r8,2),%rsi
  0x0000000110451a4a: mov    %r9,%rdx
  0x0000000110451a4d: test   $0xf,%esp
  0x0000000110451a53: je     0x0000000110451a6b
  0x0000000110451a59: sub    $0x8,%rsp
  0x0000000110451a5d: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x0000000110451a62: add    $0x8,%rsp
  0x0000000110451a66: jmpq   0x0000000110451a70
  0x0000000110451a6b: callq  Stub::jshort_arraycopy  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {runtime_call}
  0x0000000110451a70: add    $0x60,%rsp
  0x0000000110451a74: pop    %rbp
  0x0000000110451a75: test   %eax,-0xf97297b(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x0000000110451a7b: retq                      ;*return
                                                ; - java.lang.String::getChars@61 (line 827)

  0x0000000110451a7c: nopl   0x0(%rax)
  0x0000000110451a80: jmpq   0x0000000110451b80  ;   {no_reloc}
  0x0000000110451a85: add    %al,(%rax)
  0x0000000110451a87: add    %al,(%rax)
  0x0000000110451a89: add    %ch,%cl
  0x0000000110451a8b: sti    
  0x0000000110451a8c: add    %al,(%rax)
  0x0000000110451a8e: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::getChars@36 (line 824)

  0x0000000110451a91: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000000010d4d5208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000110451a94: callq  0x00000001115287fd
  0x0000000110451a99: add    %al,(%rax)
  0x0000000110451a9b: add    %cl,-0x7d(%rax)
  0x0000000110451a9e: xchg   %cl,0x1000001(%rax)
  0x0000000110451aa4: sub    %edi,%ecx
  0x0000000110451aa6: mov    %rcx,%rdx
  0x0000000110451aa9: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)

  0x0000000110451aac: mov    %rax,0x38(%rsp)
  0x0000000110451ab1: nop
  0x0000000110451ab2: nop
  0x0000000110451ab3: nop
  0x0000000110451ab4: nop
  0x0000000110451ab5: nop
  0x0000000110451ab6: nop
  0x0000000110451ab7: callq  0x00000001101e20a0  ; OopMap{[56]=Oop off=508}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)
                                                ;   {optimized virtual_call}
  0x0000000110451abc: mov    0x38(%rsp),%rax
  0x0000000110451ac1: jmpq   0x0000000110451c0e  ;*athrow
                                                ; - java.lang.String::getChars@46 (line 824)

  0x0000000110451ac6: xchg   %ax,%ax
  0x0000000110451ac8: jmpq   0x0000000110451ba6  ;   {no_reloc}
  0x0000000110451acd: add    %al,(%rax)
  0x0000000110451acf: add    %al,(%rax)
  0x0000000110451ad1: add    %ch,%cl
  0x0000000110451ad3: flds   (%rax)
  0x0000000110451ad5: add    %al,(%rax)         ;*new  ; - java.lang.String::getChars@22 (line 821)

  0x0000000110451ad7: mov    %rax,%rdx
  0x0000000110451ada: movabs $0x10d6d64e8,%rsi  ;   {metadata(method data for {method} {0x000000010d4d5208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000110451ae4: addq   $0x1,0x158(%rsi)
  0x0000000110451aec: mov    %rcx,%rdx
  0x0000000110451aef: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)

  0x0000000110451af2: mov    %rax,0x40(%rsp)
  0x0000000110451af7: callq  0x00000001101e20a0  ; OopMap{[64]=Oop off=572}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)
                                                ;   {optimized virtual_call}
  0x0000000110451afc: mov    0x40(%rsp),%rax
  0x0000000110451b01: jmpq   0x0000000110451c0e  ;*athrow
                                                ; - java.lang.String::getChars@30 (line 821)

  0x0000000110451b06: xchg   %ax,%ax
  0x0000000110451b08: jmpq   0x0000000110451bcc  ;   {no_reloc}
  0x0000000110451b0d: add    %al,(%rax)
  0x0000000110451b0f: add    %al,(%rax)
  0x0000000110451b11: add    %ch,%cl
  0x0000000110451b13: mov    $0x48000000,%edi   ;*new  ; - java.lang.String::getChars@4 (line 818)

  0x0000000110451b18: mov    %eax,%edx
  0x0000000110451b1a: movabs $0x10d6d64e8,%rsi  ;   {metadata(method data for {method} {0x000000010d4d5208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000110451b24: addq   $0x1,0x128(%rsi)
  0x0000000110451b2c: mov    %rdi,%rdx
  0x0000000110451b2f: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)

  0x0000000110451b32: mov    %rax,0x48(%rsp)
  0x0000000110451b37: callq  0x00000001101e20a0  ; OopMap{[72]=Oop off=636}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)
                                                ;   {optimized virtual_call}
  0x0000000110451b3c: mov    0x48(%rsp),%rax
  0x0000000110451b41: jmpq   0x0000000110451c0e
  0x0000000110451b46: mov    %rdx,0x8(%rsp)
  0x0000000110451b4b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000110451b53: callq  0x000000011043fba0  ; OopMap{rsi=Oop r8=Oop off=664}
                                                ;*synchronization entry
                                                ; - java.lang.String::getChars@-1 (line 817)
                                                ;   {runtime_call}
  0x0000000110451b58: jmpq   0x0000000110451921
  0x0000000110451b5d: callq  0x000000011020a100  ; OopMap{r8=Oop rsi=Oop off=674}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ;   {runtime_call}
  0x0000000110451b62: nop
  0x0000000110451b63: nop
  0x0000000110451b64: nop
  0x0000000110451b65: nop
  0x0000000110451b66: nop
  0x0000000110451b67: callq  0x00000001101e2520  ; OopMap{off=684}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {static_call}
  0x0000000110451b6c: jmpq   0x0000000110451a70
  0x0000000110451b71: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000110451b7b: mov    $0xa050f00,%eax
  0x0000000110451b80: callq  0x0000000110440b60  ; OopMap{off=709}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x0000000110451b85: jmpq   0x0000000110451a80
  0x0000000110451b8a: mov    %rdx,%rdx
  0x0000000110451b8d: callq  0x0000000110209be0  ; OopMap{off=722}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x0000000110451b92: jmpq   0x0000000110451a8f
  0x0000000110451b97: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000110451ba1: mov    $0xa050f00,%eax
  0x0000000110451ba6: callq  0x0000000110440b60  ; OopMap{off=747}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x0000000110451bab: jmpq   0x0000000110451ac8
  0x0000000110451bb0: mov    %rdx,%rdx
  0x0000000110451bb3: callq  0x0000000110209be0  ; OopMap{off=760}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x0000000110451bb8: jmpq   0x0000000110451ad7
  0x0000000110451bbd: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000110451bc7: mov    $0xa050f00,%eax
  0x0000000110451bcc: callq  0x0000000110440b60  ; OopMap{off=785}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x0000000110451bd1: jmpq   0x0000000110451b08
  0x0000000110451bd6: mov    %rdx,%rdx
  0x0000000110451bd9: callq  0x0000000110209be0  ; OopMap{off=798}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x0000000110451bde: jmpq   0x0000000110451b17
  0x0000000110451be3: nop
  0x0000000110451be4: nop
  0x0000000110451be5: mov    0x2a8(%r15),%rax
  0x0000000110451bec: movabs $0x0,%r10
  0x0000000110451bf6: mov    %r10,0x2a8(%r15)
  0x0000000110451bfd: movabs $0x0,%r10
  0x0000000110451c07: mov    %r10,0x2b0(%r15)
  0x0000000110451c0e: add    $0x60,%rsp
  0x0000000110451c12: pop    %rbp
  0x0000000110451c13: jmpq   0x0000000110208e20  ;   {runtime_call}
  0x0000000110451c18: hlt    
  0x0000000110451c19: hlt    
  0x0000000110451c1a: hlt    
  0x0000000110451c1b: hlt    
  0x0000000110451c1c: hlt    
  0x0000000110451c1d: hlt    
  0x0000000110451c1e: hlt    
  0x0000000110451c1f: hlt    
[Stub Code]
  0x0000000110451c20: nop                       ;   {no_reloc}
  0x0000000110451c21: nop
  0x0000000110451c22: nop
  0x0000000110451c23: nop
  0x0000000110451c24: nop
  0x0000000110451c25: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110451c2f: jmpq   0x0000000110451c2f  ;   {runtime_call}
  0x0000000110451c34: nop
  0x0000000110451c35: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110451c3f: jmpq   0x0000000110451c3f  ;   {runtime_call}
  0x0000000110451c44: nop
  0x0000000110451c45: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110451c4f: jmpq   0x0000000110451c4f  ;   {runtime_call}
  0x0000000110451c54: nop
  0x0000000110451c55: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110451c5f: jmpq   0x0000000110451c5f  ;   {runtime_call}
[Exception Handler]
  0x0000000110451c64: callq  0x0000000110297b20  ;   {runtime_call}
  0x0000000110451c69: mov    %rsp,-0x28(%rsp)
  0x0000000110451c6e: sub    $0x80,%rsp
  0x0000000110451c75: mov    %rax,0x78(%rsp)
  0x0000000110451c7a: mov    %rcx,0x70(%rsp)
  0x0000000110451c7f: mov    %rdx,0x68(%rsp)
  0x0000000110451c84: mov    %rbx,0x60(%rsp)
  0x0000000110451c89: mov    %rbp,0x50(%rsp)
  0x0000000110451c8e: mov    %rsi,0x48(%rsp)
  0x0000000110451c93: mov    %rdi,0x40(%rsp)
  0x0000000110451c98: mov    %r8,0x38(%rsp)
  0x0000000110451c9d: mov    %r9,0x30(%rsp)
  0x0000000110451ca2: mov    %r10,0x28(%rsp)
  0x0000000110451ca7: mov    %r11,0x20(%rsp)
  0x0000000110451cac: mov    %r12,0x18(%rsp)
  0x0000000110451cb1: mov    %r13,0x10(%rsp)
  0x0000000110451cb6: mov    %r14,0x8(%rsp)
  0x0000000110451cbb: mov    %r15,(%rsp)
  0x0000000110451cbf: movabs $0x1031df39c,%rdi  ;   {external_word}
  0x0000000110451cc9: movabs $0x110451c69,%rsi  ;   {internal_word}
  0x0000000110451cd3: mov    %rsp,%rdx
  0x0000000110451cd6: and    $0xfffffffffffffff0,%rsp
  0x0000000110451cda: callq  0x0000000103006f7a  ;   {runtime_call}
  0x0000000110451cdf: hlt    
[Deopt Handler Code]
  0x0000000110451ce0: movabs $0x110451ce0,%r10  ;   {section_word}
  0x0000000110451cea: push   %r10
  0x0000000110451cec: jmpq   0x00000001101e3500  ;   {runtime_call}
  0x0000000110451cf1: hlt    
  0x0000000110451cf2: hlt    
  0x0000000110451cf3: hlt    
  0x0000000110451cf4: hlt    
  0x0000000110451cf5: hlt    
  0x0000000110451cf6: hlt    
  0x0000000110451cf7: hlt    
<nmethod compile_id='13' compiler='C1' level='3' entry='0x00000001104518c0' size='2256' address='0x0000000110451710' relocation_offset='296' insts_offset='432' stub_offset='1296' scopes_data_offset='1520' scopes_pcs_offset='1752' dependencies_offset='2232' nul_chk_table_offset='2240' method='java/lang/String getChars (II[CI)V' bytes='62' count='270' iicount='270' stamp='0.112'/>
<writer thread='41475'/>
                              @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
<writer thread='4099'/>
[Loaded sun.misc.JavaUtilJarAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='23555'/>
Decoding compiled method 0x0000000110452010:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010d5d6ae8} &apos;access$400&apos; &apos;(Ljava/lang/ThreadLocal;)I&apos; in &apos;java/lang/ThreadLocal&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/ThreadLocal&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000110452160: mov    %eax,-0x14000(%rsp)
  0x0000000110452167: push   %rbp
  0x0000000110452168: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.ThreadLocal::access$400@0 (line 74)

  0x000000011045216c: mov    0xc(%rsi),%eax     ;*getfield threadLocalHashCode
                                                ; - java.lang.ThreadLocal::access$400@1 (line 74)
                                                ; implicit exception: dispatches to 0x000000011045217b
  0x000000011045216f: add    $0x30,%rsp
  0x0000000110452173: pop    %rbp
  0x0000000110452174: test   %eax,-0xf97307a(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x000000011045217a: retq   
  0x000000011045217b: callq  0x000000011020a100  ; OopMap{off=32}
                                                ;*getfield threadLocalHashCode
                                                ; - java.lang.ThreadLocal::access$400@1 (line 74)
                                                ;   {runtime_call}
  0x0000000110452180: nop
  0x0000000110452181: nop
  0x0000000110452182: mov    0x2a8(%r15),%rax
  0x0000000110452189: movabs $0x0,%r10
  0x0000000110452193: mov    %r10,0x2a8(%r15)
  0x000000011045219a: movabs $0x0,%r10
  0x00000001104521a4: mov    %r10,0x2b0(%r15)
  0x00000001104521ab: add    $0x30,%rsp
  0x00000001104521af: pop    %rbp
  0x00000001104521b0: jmpq   0x0000000110208e20  ;   {runtime_call}
  0x00000001104521b5: hlt    
  0x00000001104521b6: hlt    
  0x00000001104521b7: hlt    
  0x00000001104521b8: hlt    
  0x00000001104521b9: hlt    
  0x00000001104521ba: hlt    
  0x00000001104521bb: hlt    
  0x00000001104521bc: hlt    
  0x00000001104521bd: hlt    
  0x00000001104521be: hlt    
  0x00000001104521bf: hlt    
[Exception Handler]
[Stub Code]
  0x00000001104521c0: callq  0x0000000110297b20  ;   {no_reloc}
  0x00000001104521c5: mov    %rsp,-0x28(%rsp)
  0x00000001104521ca: sub    $0x80,%rsp
  0x00000001104521d1: mov    %rax,0x78(%rsp)
  0x00000001104521d6: mov    %rcx,0x70(%rsp)
  0x00000001104521db: mov    %rdx,0x68(%rsp)
  0x00000001104521e0: mov    %rbx,0x60(%rsp)
  0x00000001104521e5: mov    %rbp,0x50(%rsp)
  0x00000001104521ea: mov    %rsi,0x48(%rsp)
  0x00000001104521ef: mov    %rdi,0x40(%rsp)
  0x00000001104521f4: mov    %r8,0x38(%rsp)
  0x00000001104521f9: mov    %r9,0x30(%rsp)
  0x00000001104521fe: mov    %r10,0x28(%rsp)
  0x0000000110452203: mov    %r11,0x20(%rsp)
  0x0000000110452208: mov    %r12,0x18(%rsp)
  0x000000011045220d: mov    %r13,0x10(%rsp)
  0x0000000110452212: mov    %r14,0x8(%rsp)
  0x0000000110452217: mov    %r15,(%rsp)
  0x000000011045221b: movabs $0x1031df39c,%rdi  ;   {external_word}
  0x0000000110452225: movabs $0x1104521c5,%rsi  ;   {internal_word}
  0x000000011045222f: mov    %rsp,%rdx
  0x0000000110452232: and    $0xfffffffffffffff0,%rsp
  0x0000000110452236: callq  0x0000000103006f7a  ;   {runtime_call}
  0x000000011045223b: hlt    
[Deopt Handler Code]
  0x000000011045223c: movabs $0x11045223c,%r10  ;   {section_word}
  0x0000000110452246: push   %r10
  0x0000000110452248: jmpq   0x00000001101e3500  ;   {runtime_call}
  0x000000011045224d: hlt    
  0x000000011045224e: hlt    
  0x000000011045224f: hlt    
<nmethod compile_id='16' compiler='C1' level='1' entry='0x0000000110452160' size='712' address='0x0000000110452010' relocation_offset='296' insts_offset='336' stub_offset='432' scopes_data_offset='584' scopes_pcs_offset='608' dependencies_offset='688' nul_chk_table_offset='696' method='java/lang/ThreadLocal access$400 (Ljava/lang/ThreadLocal;)I' bytes='5' count='128' iicount='128' stamp='0.113'/>
<writer thread='4099'/>
[Loaded java.util.jar.JavaUtilJarAccessImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='41475'/>
Decoding compiled method 0x0000000110452310:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010d4d6098} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000110452480: mov    0x8(%rsi),%r10d
  0x0000000110452484: shl    $0x3,%r10
  0x0000000110452488: cmp    %rax,%r10
  0x000000011045248b: jne    0x00000001101e1e60  ;   {runtime_call}
  0x0000000110452491: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000011045249c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000001104524a0: mov    %eax,-0x14000(%rsp)
  0x00000001104524a7: push   %rbp
  0x00000001104524a8: sub    $0x30,%rsp
  0x00000001104524ac: movabs $0x10d6db6a0,%rcx  ;   {metadata(method data for {method} {0x000000010d4d6098} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00000001104524b6: mov    0xdc(%rcx),%edi
  0x00000001104524bc: add    $0x8,%edi
  0x00000001104524bf: mov    %edi,0xdc(%rcx)
  0x00000001104524c5: movabs $0x10d4d6098,%rcx  ;   {metadata({method} {0x000000010d4d6098} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00000001104524cf: and    $0x1ff8,%edi
  0x00000001104524d5: cmp    $0x0,%edi
  0x00000001104524d8: je     0x0000000110452588  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1503)

  0x00000001104524de: mov    %rsi,%rcx
  0x00000001104524e1: movabs $0x10d6db6a0,%rdi  ;   {metadata(method data for {method} {0x000000010d4d6098} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00000001104524eb: mov    0x8(%rcx),%ecx
  0x00000001104524ee: shl    $0x3,%rcx
  0x00000001104524f2: cmp    0x110(%rdi),%rcx
  0x00000001104524f9: jne    0x0000000110452508
  0x00000001104524fb: addq   $0x1,0x118(%rdi)
  0x0000000110452503: jmpq   0x000000011045256e
  0x0000000110452508: cmp    0x120(%rdi),%rcx
  0x000000011045250f: jne    0x000000011045251e
  0x0000000110452511: addq   $0x1,0x128(%rdi)
  0x0000000110452519: jmpq   0x000000011045256e
  0x000000011045251e: cmpq   $0x0,0x110(%rdi)
  0x0000000110452529: jne    0x0000000110452542
  0x000000011045252b: mov    %rcx,0x110(%rdi)
  0x0000000110452532: movq   $0x1,0x118(%rdi)
  0x000000011045253d: jmpq   0x000000011045256e
  0x0000000110452542: cmpq   $0x0,0x120(%rdi)
  0x000000011045254d: jne    0x0000000110452566
  0x000000011045254f: mov    %rcx,0x120(%rdi)
  0x0000000110452556: movq   $0x1,0x128(%rdi)
  0x0000000110452561: jmpq   0x000000011045256e
  0x0000000110452566: addq   $0x1,0x108(%rdi)
  0x000000011045256e: mov    $0x0,%ecx          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)

  0x0000000110452573: nop
  0x0000000110452574: nop
  0x0000000110452575: nop
  0x0000000110452576: nop
  0x0000000110452577: callq  0x00000001101e20a0  ; OopMap{off=252}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ;   {optimized virtual_call}
  0x000000011045257c: add    $0x30,%rsp
  0x0000000110452580: pop    %rbp
  0x0000000110452581: test   %eax,-0xf973487(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x0000000110452587: retq   
  0x0000000110452588: mov    %rcx,0x8(%rsp)
  0x000000011045258d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000110452595: callq  0x000000011043fba0  ; OopMap{rsi=Oop off=282}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ;   {runtime_call}
  0x000000011045259a: jmpq   0x00000001104524de
  0x000000011045259f: nop
  0x00000001104525a0: nop
  0x00000001104525a1: mov    0x2a8(%r15),%rax
  0x00000001104525a8: movabs $0x0,%r10
  0x00000001104525b2: mov    %r10,0x2a8(%r15)
  0x00000001104525b9: movabs $0x0,%r10
  0x00000001104525c3: mov    %r10,0x2b0(%r15)
  0x00000001104525ca: add    $0x30,%rsp
  0x00000001104525ce: pop    %rbp
  0x00000001104525cf: jmpq   0x0000000110208e20  ;   {runtime_call}
  0x00000001104525d4: hlt    
  0x00000001104525d5: hlt    
  0x00000001104525d6: hlt    
  0x00000001104525d7: hlt    
  0x00000001104525d8: hlt    
  0x00000001104525d9: hlt    
  0x00000001104525da: hlt    
  0x00000001104525db: hlt    
  0x00000001104525dc: hlt    
  0x00000001104525dd: hlt    
  0x00000001104525de: hlt    
  0x00000001104525df: hlt    
[Stub Code]
  0x00000001104525e0: nop                       ;   {no_reloc}
  0x00000001104525e1: nop
  0x00000001104525e2: nop
  0x00000001104525e3: nop
  0x00000001104525e4: nop
  0x00000001104525e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001104525ef: jmpq   0x00000001104525ef  ;   {runtime_call}
[Exception Handler]
  0x00000001104525f4: callq  0x0000000110297b20  ;   {runtime_call}
  0x00000001104525f9: mov    %rsp,-0x28(%rsp)
  0x00000001104525fe: sub    $0x80,%rsp
  0x0000000110452605: mov    %rax,0x78(%rsp)
  0x000000011045260a: mov    %rcx,0x70(%rsp)
  0x000000011045260f: mov    %rdx,0x68(%rsp)
  0x0000000110452614: mov    %rbx,0x60(%rsp)
  0x0000000110452619: mov    %rbp,0x50(%rsp)
  0x000000011045261e: mov    %rsi,0x48(%rsp)
  0x0000000110452623: mov    %rdi,0x40(%rsp)
  0x0000000110452628: mov    %r8,0x38(%rsp)
  0x000000011045262d: mov    %r9,0x30(%rsp)
  0x0000000110452632: mov    %r10,0x28(%rsp)
  0x0000000110452637: mov    %r11,0x20(%rsp)
  0x000000011045263c: mov    %r12,0x18(%rsp)
  0x0000000110452641: mov    %r13,0x10(%rsp)
  0x0000000110452646: mov    %r14,0x8(%rsp)
  0x000000011045264b: mov    %r15,(%rsp)
  0x000000011045264f: movabs $0x1031df39c,%rdi  ;   {external_word}
  0x0000000110452659: movabs $0x1104525f9,%rsi  ;   {internal_word}
  0x0000000110452663: mov    %rsp,%rdx
  0x0000000110452666: and    $0xfffffffffffffff0,%rsp
  0x000000011045266a: callq  0x0000000103006f7a  ;   {runtime_call}
  0x000000011045266f: hlt    
[Deopt Handler Code]
  0x0000000110452670: movabs $0x110452670,%r10  ;   {section_word}
  0x000000011045267a: push   %r10
  0x000000011045267c: jmpq   0x00000001101e3500  ;   {runtime_call}
  0x0000000110452681: hlt    
  0x0000000110452682: hlt    
  0x0000000110452683: hlt    
  0x0000000110452684: hlt    
  0x0000000110452685: hlt    
  0x0000000110452686: hlt    
  0x0000000110452687: hlt    
<nmethod compile_id='15' compiler='C1' level='3' entry='0x0000000110452480' size='1040' address='0x0000000110452310' relocation_offset='296' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String indexOf (I)I' bytes='7' count='257' iicount='257' stamp='0.114'/>
<writer thread='4099'/>
[Loaded java.nio.charset.StandardCharsets from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.US_ASCII from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.ISO_8859_1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_16BE from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_16LE from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_16 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Queue from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Deque from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.ArrayDeque from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipCoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.PerfCounter from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Perf$GetPerfAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Perf from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.PerfCounter$CoreCounters from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.ch.DirectBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.MappedByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.DirectByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.LongBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.DirectLongBufferU from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JarIndex from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JarEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JarFile$JarFileEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<task_queued compile_id='17' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='256' iicount='256' level='3' stamp='0.118' comment='tiered' hot_count='256'/>
<task_queued compile_id='18' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='256' iicount='256' level='3' stamp='0.118' comment='tiered' hot_count='256'/>
[Loaded java.util.zip.ZipFile$ZipFileInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='40195'/>
    118   17       3       java.lang.CharacterData::of (120 bytes)
<writer thread='40963'/>
    118   18       3       java.lang.CharacterDataLatin1::getProperties (11 bytes)
<writer thread='4099'/>
[Loaded java.util.zip.Inflater from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='40963'/>
Decoding compiled method 0x0000000110453350:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010d697268} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rsi:rsi   = &apos;java/lang/CharacterDataLatin1&apos;
<writer thread='4099'/>
[Loaded java.util.zip.ZStreamRef from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='40963'/>
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00000001104534c0: mov    0x8(%rsi),%r10d
  0x00000001104534c4: shl    $0x3,%r10
  0x00000001104534c8: cmp    %rax,%r10
  0x00000001104534cb: jne    0x00000001101e1e60  ;   {runtime_call}
  0x00000001104534d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000001104534dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000001104534e0: mov    %eax,-0x14000(%rsp)
  0x00000001104534e7: push   %rbp
  0x00000001104534e8: sub    $0x30,%rsp
  0x00000001104534ec: movabs $0x10d6fc920,%rax  ;   {metadata(method data for {method} {0x000000010d697268} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000001104534f6: mov    0xdc(%rax),%edi
  0x00000001104534fc: add    $0x8,%edi
  0x00000001104534ff: mov    %edi,0xdc(%rax)
  0x0000000110453505: movabs $0x10d697268,%rax  ;   {metadata({method} {0x000000010d697268} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000011045350f: and    $0x1ff8,%edi
  0x0000000110453515: cmp    $0x0,%edi
  0x0000000110453518: je     0x000000011045354a  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::getProperties@0 (line 71)

  0x000000011045351e: and    $0xffff,%edx
  0x0000000110453524: movabs $0x76ab474f0,%rax  ;   {oop([I)}
  0x000000011045352e: movslq %edx,%rsi
  0x0000000110453531: cmp    0xc(%rax),%edx     ; implicit exception: dispatches to 0x000000011045355e
  0x0000000110453534: jae    0x0000000110453568
  0x000000011045353a: mov    0x10(%rax,%rsi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x000000011045353e: add    $0x30,%rsp
  0x0000000110453542: pop    %rbp
  0x0000000110453543: test   %eax,-0xf974449(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x0000000110453549: retq   
  0x000000011045354a: mov    %rax,0x8(%rsp)
  0x000000011045354f: movq   $0xffffffffffffffff,(%rsp)
  0x0000000110453557: callq  0x000000011043fba0  ; OopMap{rsi=Oop off=156}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ;   {runtime_call}
  0x000000011045355c: jmp    0x000000011045351e
  0x000000011045355e: callq  0x000000011020a100  ; OopMap{rax=Oop off=163}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x0000000110453563: callq  0x000000011020a100  ; OopMap{rax=Oop off=168}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x0000000110453568: mov    %rdx,(%rsp)
  0x000000011045356c: callq  0x0000000110208980  ; OopMap{rax=Oop off=177}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x0000000110453571: nop
  0x0000000110453572: nop
  0x0000000110453573: mov    0x2a8(%r15),%rax
  0x000000011045357a: movabs $0x0,%r10
  0x0000000110453584: mov    %r10,0x2a8(%r15)
  0x000000011045358b: movabs $0x0,%r10
  0x0000000110453595: mov    %r10,0x2b0(%r15)
  0x000000011045359c: add    $0x30,%rsp
  0x00000001104535a0: pop    %rbp
  0x00000001104535a1: jmpq   0x0000000110208e20  ;   {runtime_call}
  0x00000001104535a6: hlt    
  0x00000001104535a7: hlt    
  0x00000001104535a8: hlt    
  0x00000001104535a9: hlt    
  0x00000001104535aa: hlt    
  0x00000001104535ab: hlt    
  0x00000001104535ac: hlt    
  0x00000001104535ad: hlt    
  0x00000001104535ae: hlt    
  0x00000001104535af: hlt    
  0x00000001104535b0: hlt    
  0x00000001104535b1: hlt    
  0x00000001104535b2: hlt    
  0x00000001104535b3: hlt    
  0x00000001104535b4: hlt    
  0x00000001104535b5: hlt    
  0x00000001104535b6: hlt    
  0x00000001104535b7: hlt    
  0x00000001104535b8: hlt    
  0x00000001104535b9: hlt    
  0x00000001104535ba: hlt    
  0x00000001104535bb: hlt    
  0x00000001104535bc: hlt    
  0x00000001104535bd: hlt    
  0x00000001104535be: hlt    
  0x00000001104535bf: hlt    
[Exception Handler]
[Stub Code]
  0x00000001104535c0: callq  0x0000000110297b20  ;   {no_reloc}
  0x00000001104535c5: mov    %rsp,-0x28(%rsp)
  0x00000001104535ca: sub    $0x80,%rsp
  0x00000001104535d1: mov    %rax,0x78(%rsp)
  0x00000001104535d6: mov    %rcx,0x70(%rsp)
  0x00000001104535db: mov    %rdx,0x68(%rsp)
  0x00000001104535e0: mov    %rbx,0x60(%rsp)
  0x00000001104535e5: mov    %rbp,0x50(%rsp)
  0x00000001104535ea: mov    %rsi,0x48(%rsp)
  0x00000001104535ef: mov    %rdi,0x40(%rsp)
  0x00000001104535f4: mov    %r8,0x38(%rsp)
  0x00000001104535f9: mov    %r9,0x30(%rsp)
  0x00000001104535fe: mov    %r10,0x28(%rsp)
  0x0000000110453603: mov    %r11,0x20(%rsp)
  0x0000000110453608: mov    %r12,0x18(%rsp)
  0x000000011045360d: mov    %r13,0x10(%rsp)
  0x0000000110453612: mov    %r14,0x8(%rsp)
  0x0000000110453617: mov    %r15,(%rsp)
  0x000000011045361b: movabs $0x1031df39c,%rdi  ;   {external_word}
  0x0000000110453625: movabs $0x1104535c5,%rsi  ;   {internal_word}
  0x000000011045362f: mov    %rsp,%rdx
  0x0000000110453632: and    $0xfffffffffffffff0,%rsp
  0x0000000110453636: callq  0x0000000103006f7a  ;   {runtime_call}
  0x000000011045363b: hlt    
[Deopt Handler Code]
  0x000000011045363c: movabs $0x11045363c,%r10  ;   {section_word}
  0x0000000110453646: push   %r10
  0x0000000110453648: jmpq   0x00000001101e3500  ;   {runtime_call}
  0x000000011045364d: hlt    
  0x000000011045364e: hlt    
  0x000000011045364f: hlt    
<nmethod compile_id='18' compiler='C1' level='3' entry='0x00000001104534c0' size='984' address='0x0000000110453350' relocation_offset='296' insts_offset='368' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='824' dependencies_offset='952' nul_chk_table_offset='960' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='283' iicount='283' stamp='0.120'/>
<writer thread='40195'/>
Decoding compiled method 0x0000000110453750:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010d696b90} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000110453900: mov    %eax,-0x14000(%rsp)
  0x0000000110453907: push   %rbp
  0x0000000110453908: sub    $0x30,%rsp
  0x000000011045390c: movabs $0x10d6fafe8,%rax  ;   {metadata(method data for {method} {0x000000010d696b90} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x0000000110453916: mov    
<writer thread='4099'/>
[Loaded java.util.zip.InflaterInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='40195'/>
0xdc(%rax),%edi
  0x000000011045391c: add    $0x8,%edi
  0x000000011045391f: mov    %edi,0xdc(%rax)
  0x0000000110453925: movabs $0x10d696b90,%rax  ;   {metadata({method} {0x000000010d696b90} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x000000011045392f: and    $0x1ff8,%edi
  0x0000000110453935: cmp    $0x0,%edi
  0x0000000110453938: je     0x0000000110453abc  ;*iload_0
                                                ; - java.lang.CharacterData::of@0 (line 77)

  0x000000011045393e: mov    %rsi,%rax
  0x0000000110453941: shr    $0x8,%eax
  0x0000000110453944: cmp    $0x0,%eax
  0x0000000110453947: movabs $0x10d6fafe8,%rax  ;   {metadata(method data for {method} {0x000000010d696b90} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x0000000110453951: movabs $0x108,%rdi
  0x000000011045395b: jne    0x000000011045396b
  0x0000000110453961: movabs $0x118,%rdi
  0x000000011045396b: mov    (%rax,%rdi,1),%rbx
  0x000000011045396f: lea    0x1(%rbx),%rbx
  0x0000000110453973: mov    %rbx,(%rax,%rdi,1)
  0x0000000110453977: je     0x0000000110453aa6  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x000000011045397d: shr    $0x10,%esi
  0x0000000110453980: cmp    $0x0,%esi
  0x0000000110453983: je     0x0000000110453a7e
  0x0000000110453989: cmp    $0x1,%esi
  0x000000011045398c: je     0x0000000110453a56
  0x0000000110453992: cmp    $0x2,%esi
  0x0000000110453995: je     0x0000000110453a2e
  0x000000011045399b: cmp    $0xe,%esi
  0x000000011045399e: je     0x0000000110453a06
  0x00000001104539a4: cmp    $0xf,%esi
  0x00000001104539a7: je     0x00000001104539b6
  0x00000001104539ad: cmp    $0x10,%esi
  0x00000001104539b0: jne    0x00000001104539de  ;*tableswitch
                                                ; - java.lang.CharacterData::of@15 (line 80)

  0x00000001104539b6: xchg   %ax,%ax
  0x00000001104539b8: jmpq   0x0000000110453b30  ;   {no_reloc}
  0x00000001104539bd: add    %al,(%rax)
  0x00000001104539bf: add    %al,(%rax)
  0x00000001104539c1: add    %ah,0xf(%rsi)
  0x00000001104539c4: (bad)  
  0x00000001104539c5: add    %r8b,(%rax)
  0x00000001104539c8: jmpq   0x0000000110453b4a  ; implicit exception: dispatches to 0x0000000110453b3a
  0x00000001104539cd: nop
  0x00000001104539ce: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)

  0x00000001104539d2: add    $0x30,%rsp
  0x00000001104539d6: pop    %rbp
  0x00000001104539d7: test   %eax,-0xf9748dd(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x00000001104539dd: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@115 (line 91)

  0x00000001104539de: xchg   %ax,%ax
  0x00000001104539e0: jmpq   0x0000000110453bb1  ;   {no_reloc}
  0x00000001104539e5: add    %al,(%rax)
  0x00000001104539e7: add    %al,(%rax)
  0x00000001104539e9: add    %ah,0xf(%rsi)
  0x00000001104539ec: (bad)  
  0x00000001104539ed: add    %r8b,(%rax)
  0x00000001104539f0: jmpq   0x0000000110453bcb  ; implicit exception: dispatches to 0x0000000110453bbb
  0x00000001104539f5: nop
  0x00000001104539f6: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)

  0x00000001104539fa: add    $0x30,%rsp
  0x00000001104539fe: pop    %rbp
  0x00000001104539ff: test   %eax,-0xf974905(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x0000000110453a05: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@119 (line 93)

  0x0000000110453a06: xchg   %ax,%ax
  0x0000000110453a08: jmpq   0x0000000110453c32  ;   {no_reloc}
  0x0000000110453a0d: add    %al,(%rax)
  0x0000000110453a0f: add    %al,(%rax)
  0x0000000110453a11: add    %ah,0xf(%rsi)
  0x0000000110453a14: (bad)  
  0x0000000110453a15: add    %r8b,(%rax)
  0x0000000110453a18: jmpq   0x0000000110453c4c  ; implicit exception: dispatches to 0x0000000110453c3c
  0x0000000110453a1d: nop
  0x0000000110453a1e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)

  0x0000000110453a22: add    $0x30,%rsp
  0x0000000110453a26: pop    %rbp
  0x0000000110453a27: test   %eax,-0xf97492d(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x0000000110453a2d: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@111 (line 88)

  0x0000000110453a2e: xchg   %ax,%ax
  0x0000000110453a30: jmpq   0x0000000110453cb3  ;   {no_reloc}
  0x0000000110453a35: add    %al,(%rax)
  0x0000000110453a37: add    %al,(%rax)
  0x0000000110453a39: add    %ah,0xf(%rsi)
  0x0000000110453a3c: (bad)  
  0x0000000110453a3d: add    %r8b,(%rax)
  0x0000000110453a40: jmpq   0x0000000110453ccd  ; implicit exception: dispatches to 0x0000000110453cbd
  0x0000000110453a45: nop
  0x0000000110453a46: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)

  0x0000000110453a4a: add    $0x30,%rsp
  0x0000000110453a4e: pop    %rbp
  0x0000000110453a4f: test   %eax,-0xf974955(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x0000000110453a55: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@107 (line 86)

  0x0000000110453a56: xchg   %ax,%ax
  0x0000000110453a58: jmpq   0x0000000110453d34  ;   {no_reloc}
  0x0000000110453a5d: add    %al,(%rax)
  0x0000000110453a5f: add    %al,(%rax)
  0x0000000110453a61: add    %ah,0xf(%rsi)
  0x0000000110453a64: (bad)  
  0x0000000110453a65: add    %r8b,(%rax)
  0x0000000110453a68: jmpq   0x0000000110453d4e  ; implicit exception: dispatches to 0x0000000110453d3e
  0x0000000110453a6d: nop
  0x0000000110453a6e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)

  0x0000000110453a72: add    $0x30,%rsp
  0x0000000110453a76: pop    %rbp
  0x0000000110453a77: test   %eax,-0xf97497d(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x0000000110453a7d: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@103 (line 84)

  0x0000000110453a7e: xchg   %ax,%ax
  0x0000000110453a80: jmpq   0x0000000110453db5  ;   {no_reloc}
  0x0000000110453a85: add    %al,(%rax)
  0x0000000110453a87: add    %al,(%rax)
  0x0000000110453a89: add    %ah,0xf(%rsi)
  0x0000000110453a8c: (bad)  
  0x0000000110453a8d: add    %r8b,(%rax)
  0x0000000110453a90: jmpq   0x0000000110453dcf  ; implicit exception: dispatches to 0x0000000110453dbf
  0x0000000110453a95: nop
  0x0000000110453a96: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)

  0x0000000110453a9a: add    $0x30,%rsp
  0x0000000110453a9e: pop    %rbp
  0x0000000110453a9f: test   %eax,-0xf9749a5(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x0000000110453aa5: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@99 (line 82)

  0x0000000110453aa6: movabs $0x76ab474e0,%rax  ;   {oop(a &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000110453ab0: add    $0x30,%rsp
  0x0000000110453ab4: pop    %rbp
  0x0000000110453ab5: test   %eax,-0xf9749bb(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x0000000110453abb: retq   
  0x0000000110453abc: mov    %rax,0x8(%rsp)
  0x0000000110453ac1: movq   $0xffffffffffffffff,(%rsp)
  0x0000000110453ac9: callq  0x000000011043fba0  ; OopMap{off=462}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1 (line 77)
                                                ;   {runtime_call}
  0x0000000110453ace: jmpq   0x000000011045393e
  0x0000000110453ad3: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000110453add: push   %rax
  0x0000000110453ade: push   %rbx
  0x0000000110453adf: mov    0x48(%rax),%rbx
  0x0000000110453ae3: push   %rdi
  0x0000000110453ae4: push   %rsi
  0x0000000110453ae5: push   %rdx
  0x0000000110453ae6: push   %rcx
  0x0000000110453ae7: push   %r8
  0x0000000110453ae9: push   %r9
  0x0000000110453aeb: push   %r10
  0x0000000110453aed: mov    %rsp,%r10
  0x0000000110453af0: and    $0xfffffffffffffff0,%rsp
  0x0000000110453af4: push   %r10
  0x0000000110453af6: push   %r11
  0x0000000110453af8: mov    $0x10c,%edi
  0x0000000110453afd: movabs $0x7fff67a698a5,%r10  ;   {runtime_call}
  0x0000000110453b07: callq  *%r10
  0x0000000110453b0a: pop    %r11
  0x0000000110453b0c: pop    %rsp
  0x0000000110453b0d: pop    %r10
  0x0000000110453b0f: pop    %r9
  0x0000000110453b11: pop    %r8
  0x0000000110453b13: pop    %rcx
  0x0000000110453b14: pop    %rdx
  0x0000000110453b15: pop    %rsi
  0x0000000110453b16: pop    %rdi
  0x0000000110453b17: cmp    0x118(%rbx),%rax
  0x0000000110453b1e: pop    %rbx
  0x0000000110453b1f: pop    %rax
  0x0000000110453b20: jne    0x0000000110453b30
  0x0000000110453b26: jmpq   0x00000001104539c2
  0x0000000110453b2b: mov    $0xa535d00,%eax
  0x0000000110453b30: callq  0x0000000110440760  ; OopMap{off=565}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000110453b35: jmpq   0x00000001104539b8
  0x0000000110453b3a: callq  0x000000011020a100  ; OopMap{rax=Oop off=575}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000110453b3f: mov    0x0(%rax),%eax
  0x0000000110453b45: mov    $0x6050b00,%eax
  0x0000000110453b4a: callq  0x0000000110440f60  ; OopMap{rax=Oop off=591}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000110453b4f: jmpq   0x00000001104539c8
  0x0000000110453b54: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000110453b5e: push   %rax
  0x0000000110453b5f: push   %rbx
  0x0000000110453b60: mov    0x48(%rax),%rbx
  0x0000000110453b64: push   %rdi
  0x0000000110453b65: push   %rsi
  0x0000000110453b66: push   %rdx
  0x0000000110453b67: push   %rcx
  0x0000000110453b68: push   %r8
  0x0000000110453b6a: push   %r9
  0x0000000110453b6c: push   %r10
  0x0000000110453b6e: mov    %rsp,%r10
  0x0000000110453b71: and    $0xfffffffffffffff0,%rsp
  0x0000000110453b75: push   %r10
  0x0000000110453b77: push   %r11
  0x0000000110453b79: mov    $0x10c,%edi
  0x0000000110453b7e: movabs $0x7fff67a698a5,%r10  ;   {runtime_call}
  0x0000000110453b88: callq  *%r10
  0x0000000110453b8b: pop    %r11
  0x0000000110453b8d: pop    %rsp
  0x0000000110453b8e: pop    %r10
  0x0000000110453b90: pop    %r9
  0x0000000110453b92: pop    %r8
  0x0000000110453b94: pop    %rcx
  0x0000000110453b95: pop    %rdx
  0x0000000110453b96: pop    %rsi
  0x0000000110453b97: pop    %rdi
  0x0000000110453b98: cmp    0x118(%rbx),%rax
  0x0000000110453b9f: pop    %rbx
  0x0000000110453ba0: pop    %rax
  0x0000000110453ba1: jne    0x0000000110453bb1
  0x0000000110453ba7: jmpq   0x00000001104539ea
  0x0000000110453bac: mov    $0xa535d00,%eax
  0x0000000110453bb1: callq  0x0000000110440760  ; OopMap{off=694}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000110453bb6: jmpq   0x00000001104539e0
  0x0000000110453bbb: callq  0x000000011020a100  ; OopMap{rax=Oop off=704}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000110453bc0: mov    0x0(%rax),%eax
  0x0000000110453bc6: mov    $0x6050b00,%eax
  0x0000000110453bcb: callq  0x0000000110440f60  ; OopMap{rax=Oop off=720}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000110453bd0: jmpq   0x00000001104539f0
  0x0000000110453bd5: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000110453bdf: push   %rax
  0x0000000110453be0: push   %rbx
  0x0000000110453be1: mov    0x48(%rax),%rbx
  0x0000000110453be5: push   %rdi
  0x0000000110453be6: push   %rsi
  0x0000000110453be7: push   %rdx
  0x0000000110453be8: push   %rcx
  0x0000000110453be9: push   %r8
  0x0000000110453beb: push   %r9
  0x0000000110453bed: push   %r10
  0x0000000110453bef: mov    %rsp,%r10
  0x0000000110453bf2: and    $0xfffffffffffffff0,%rsp
  0x0000000110453bf6: push   %r10
  0x0000000110453bf8: push   %r11
  0x0000000110453bfa: mov    $0x10c,%edi
  0x0000000110453bff: movabs $0x7fff67a698a5,%r10  ;   {runtime_call}
  0x0000000110453c09: callq  *%r10
  0x0000000110453c0c: pop    %r11
  0x0000000110453c0e: pop    %rsp
  0x0000000110453c0f: pop    %r10
  0x0000000110453c11: pop    %r9
  0x0000000110453c13: pop    %r8
  0x0000000110453c15: pop    %rcx
  0x0000000110453c16: pop    %rdx
  0x0000000110453c17: pop    %rsi
  0x0000000110453c18: pop    %rdi
  0x0000000110453c19: cmp    0x118(%rbx),%rax
  0x0000000110453c20: pop    %rbx
  0x0000000110453c21: pop    %rax
  0x0000000110453c22: jne    0x0000000110453c32
  0x0000000110453c28: jmpq   0x0000000110453a12
  0x0000000110453c2d: mov    $0xa535d00,%eax
  0x0000000110453c32: callq  0x0000000110440760  ; OopMap{off=823}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000110453c37: jmpq   0x0000000110453a08
  0x0000000110453c3c: callq  0x000000011020a100  ; OopMap{rax=Oop off=833}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000110453c41: mov    0x0(%rax),%eax
  0x0000000110453c47: mov    $0x6050b00,%eax
  0x0000000110453c4c: callq  0x0000000110440f60  ; OopMap{rax=Oop off=849}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000110453c51: jmpq   0x0000000110453a18
  0x0000000110453c56: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000110453c60: push   %rax
  0x0000000110453c61: push   %rbx
  0x0000000110453c62: mov    0x48(%rax),%rbx
  0x0000000110453c66: push   %rdi
  0x0000000110453c67: push   %rsi
  0x0000000110453c68: push   %rdx
  0x0000000110453c69: push   %rcx
  0x0000000110453c6a: push   %r8
  0x0000000110453c6c: push   %r9
  0x0000000110453c6e: push   %r10
  0x0000000110453c70: mov    %rsp,%r10
  0x0000000110453c73: and    $0xfffffffffffffff0,%rsp
  0x0000000110453c77: push   %r10
  0x0000000110453c79: push   %r11
  0x0000000110453c7b: mov    $0x10c,%edi
  0x0000000110453c80: movabs $0x7fff67a698a5,%r10  ;   {runtime_call}
  0x0000000110453c8a: callq  *%r10
  0x0000000110453c8d: pop    %r11
  0x0000000110453c8f: pop    %rsp
  0x0000000110453c90: pop    %r10
  0x0000000110453c92: pop    %r9
  0x0000000110453c94: pop    %r8
  0x0000000110453c96: pop    %rcx
  0x0000000110453c97: pop    %rdx
  0x0000000110453c98: pop    %rsi
  0x0000000110453c99: pop    %rdi
  0x0000000110453c9a: cmp    0x118(%rbx),%rax
  0x0000000110453ca1: pop    %rbx
  0x0000000110453ca2: pop    %rax
  0x0000000110453ca3: jne    0x0000000110453cb3
  0x0000000110453ca9: jmpq   0x0000000110453a3a
  0x0000000110453cae: mov    $0xa535d00,%eax
  0x0000000110453cb3: callq  0x0000000110440760  ; OopMap{off=952}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000110453cb8: jmpq   0x0000000110453a30
  0x0000000110453cbd: callq  0x000000011020a100  ; OopMap{rax=Oop off=962}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000110453cc2: mov    0x0(%rax),%eax
  0x0000000110453cc8: mov    $0x6050b00,%eax
  0x0000000110453ccd: callq  0x0000000110440f60  ; OopMap{rax=Oop off=978}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000110453cd2: jmpq   0x0000000110453a40
  0x0000000110453cd7: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000110453ce1: push   %rax
  0x0000000110453ce2: push   %rbx
  0x0000000110453ce3: mov    0x48(%rax),%rbx
  0x0000000110453ce7: push   %rdi
  0x0000000110453ce8: push   %rsi
  0x0000000110453ce9: push   %rdx
  0x0000000110453cea: push   %rcx
  0x0000000110453ceb: push   %r8
  0x0000000110453ced: push   %r9
  0x0000000110453cef: push   %r10
  0x0000000110453cf1: mov    %rsp,%r10
  0x0000000110453cf4: and    $0xfffffffffffffff0,%rsp
  0x0000000110453cf8: push   %r10
  0x0000000110453cfa: push   %r11
  0x0000000110453cfc: mov    $0x10c,%edi
  0x0000000110453d01: movabs $0x7fff67a698a5,%r10  ;   {runtime_call}
  0x0000000110453d0b: callq  *%r10
  0x0000000110453d0e: pop    %r11
  0x0000000110453d10: pop    %rsp
  0x0000000110453d11: pop    %r10
  0x0000000110453d13: pop    %r9
  0x0000000110453d15: pop    %r8
  0x0000000110453d17: pop    %rcx
  0x0000000110453d18: pop    %rdx
  0x0000000110453d19: pop    %rsi
  0x0000000110453d1a: pop    %rdi
  0x0000000110453d1b: cmp    0x118(%rbx),%rax
  0x0000000110453d22: pop    %rbx
  0x0000000110453d23: pop    %rax
  0x0000000110453d24: jne    0x0000000110453d34
  0x0000000110453d2a: jmpq   0x0000000110453a62
  0x0000000110453d2f: mov    $0xa535d00,%eax
  0x0000000110453d34: callq  0x0000000110440760  ; OopMap{off=1081}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000110453d39: jmpq   0x0000000110453a58
  0x0000000110453d3e: callq  0x000000011020a100  ; OopMap{rax=Oop off=1091}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000110453d43: mov    0x0(%rax),%eax
  0x0000000110453d49: mov    $0x6050b00,%eax
  0x0000000110453d4e: callq  0x0000000110440f60  ; OopMap{rax=Oop off=1107}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000110453d53: jmpq   0x0000000110453a68
  0x0000000110453d58: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000110453d62: push   %rax
  0x0000000110453d63: push   %rbx
  0x0000000110453d64: mov    0x48(%rax),%rbx
  0x0000000110453d68: push   %rdi
  0x0000000110453d69: push   %rsi
  0x0000000110453d6a: push   %rdx
  0x0000000110453d6b: push   %rcx
  0x0000000110453d6c: push   %r8
  0x0000000110453d6e: push   %r9
  0x0000000110453d70: push   %r10
  0x0000000110453d72: mov    %rsp,%r10
  0x0000000110453d75: and    $0xfffffffffffffff0,%rsp
  0x0000000110453d79: push   %r10
  0x0000000110453d7b: push   %r11
  0x0000000110453d7d: mov    $0x10c,%edi
  0x0000000110453d82: movabs $0x7fff67a698a5,%r10  ;   {runtime_call}
  0x0000000110453d8c: callq  *%r10
  0x0000000110453d8f: pop    %r11
  0x0000000110453d91: pop    %rsp
  0x0000000110453d92: pop    %r10
  0x0000000110453d94: pop    %r9
  0x0000000110453d96: pop    %r8
  0x0000000110453d98: pop    %rcx
  0x0000000110453d99: pop    %rdx
  0x0000000110453d9a: pop    %rsi
  0x0000000110453d9b: pop    %rdi
  0x0000000110453d9c: cmp    0x118(%rbx),%rax
  0x0000000110453da3: pop    %rbx
  0x0000000110453da4: pop    %rax
  0x0000000110453da5: jne    0x0000000110453db5
  0x0000000110453dab: jmpq   0x0000000110453a8a
  0x0000000110453db0: mov    $0xa535d00,%eax
  0x0000000110453db5: callq  0x0000000110440760  ; OopMap{off=1210}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000110453dba: jmpq   0x0000000110453a80
  0x0000000110453dbf: callq  0x000000011020a100  ; OopMap{rax=Oop off=1220}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000110453dc4: mov    0x0(%rax),%eax
  0x0000000110453dca: mov    $0x6050b00,%eax
  0x0000000110453dcf: callq  0x0000000110440f60  ; OopMap{rax=Oop off=1236}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000110453dd4: jmpq   0x0000000110453a90
  0x0000000110453dd9: nop
  0x0000000110453dda: nop
  0x0000000110453ddb: mov    0x2a8(%r15),%rax
  0x0000000110453de2: movabs $0x0,%r10
  0x0000000110453dec: mov    %r10,0x2a8(%r15)
  0x0000000110453df3: movabs $0x0,%r10
  0x0000000110453dfd: mov    %r10,0x2b0(%r15)
  0x0000000110453e04: add    $0x30,%rsp
  0x0000000110453e08: pop    %rbp
  0x0000000110453e09: jmpq   0x0000000110208e20  ;   {runtime_call}
  0x0000000110453e0e: hlt    
  0x0000000110453e0f: hlt    
  0x0000000110453e10: hlt    
  0x0000000110453e11: hlt    
  0x0000000110453e12: hlt    
  0x0000000110453e13: hlt    
  0x0000000110453e14: hlt    
  0x0000000110453e15: hlt    
  0x0000000110453e16: hlt    
  0x0000000110453e17: hlt    
  0x0000000110453e18: hlt    
  0x0000000110453e19: hlt    
  0x0000000110453e1a: hlt    
  0x0000000110453e1b: hlt    
  0x0000000110453e1c: hlt    
  0x0000000110453e1d: hlt    
  0x0000000110453e1e: hlt    
  0x0000000110453e1f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110453e20: callq  0x0000000110297b20  ;   {no_reloc}
  0x0000000110453e25: mov    %rsp,-0x28(%rsp)
  0x0000000110453e2a: sub    $0x80,%rsp
  0x0000000110453e31: mov    %rax,0x78(%rsp)
  0x0000000110453e36: mov    %rcx,0x70(%rsp)
  0x0000000110453e3b: mov    %rdx,0x68(%rsp)
  0x0000000110453e40: mov    %rbx,0x60(%rsp)
  0x0000000110453e45: mov    %rbp,0x50(%rsp)
  0x0000000110453e4a: mov    %rsi,0x48(%rsp)
  0x0000000110453e4f: mov    %rdi,0x40(%rsp)
  0x0000000110453e54: mov    %r8,0x38(%rsp)
  0x0000000110453e59: mov    %r9,0x30(%rsp)
  0x0000000110453e5e: mov    %r10,0x28(%rsp)
  0x0000000110453e63: mov    %r11,0x20(%rsp)
  0x0000000110453e68: mov    %r12,0x18(%rsp)
  0x0000000110453e6d: mov    %r13,0x10(%rsp)
  0x0000000110453e72: mov    %r14,0x8(%rsp)
  0x0000000110453e77: mov    %r15,(%rsp)
  0x0000000110453e7b: movabs $0x1031df39c,%rdi  ;   {external_word}
  0x0000000110453e85: movabs $0x110453e25,%rsi  ;   {internal_word}
  0x0000000110453e8f: mov    %rsp,%rdx
  0x0000000110453e92: and    $0xfffffffffffffff0,%rsp
  0x0000000110453e96: callq  0x0000000103006f7a  ;   {runtime_call}
  0x0000000110453e9b: hlt    
[Deopt Handler Code]
  0x0000000110453e9c: movabs $0x110453e9c,%r10  ;   {section_word}
  0x0000000110453ea6: push   %r10
  0x0000000110453ea8: jmpq   0x00000001101e3500  ;   {runtime_call}
  0x0000000110453ead: hlt    
  0x0000000110453eae: hlt    
  0x0000000110453eaf: hlt    
<nmethod compile_id='17' compiler='C1' level='3' entry='0x0000000110453900' size='2680' address='0x0000000110453750' relocation_offset='296' insts_offset='432' stub_offset='1744' scopes_data_offset='1896' scopes_pcs_offset='2040' dependencies_offset='2616' nul_chk_table_offset='2624' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='283' iicount='283' stamp='0.125'/>
<writer thread='4099'/>
[Loaded java.util.zip.ZipFile$ZipFileInflaterInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractSequentialList from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedList from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedList$Node from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$FileLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<task_queued compile_id='19' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='296' iicount='296' level='3' stamp='0.127' comment='tiered' hot_count='296'/>
<writer thread='23555'/>
    127   19       3       java.lang.AbstractStringBuilder::append (50 bytes)
<writer thread='4099'/>
[Loaded sun.misc.Resource from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$FileLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='23555'/>
                              @ 5   java.lang.AbstractStringBuilder::appendNull (56 bytes)   callee is too large
                              @ 10   java.lang.String::length (6 bytes)
                              @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
<writer thread='4099'/>
[Loaded java.lang.Package from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='23555'/>
                                @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                @ 20   java.util.Arrays::copyOf (19 bytes)
                                  @ 11   java.lang.Math::min (11 bytes)
<writer thread='4099'/>
[Loaded sun.nio.ByteBuffered from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='23555'/>
                                  @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 35   java.lang.String::getChars (62 bytes)   callee is too large
<writer thread='4099'/>
[Loaded java.security.PermissionCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Permissions from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='23555'/>
Decoding compiled method 0x0000000110454210:
Code:
[Entry Point]
[Constants]
  # {method}
<writer thread='4099'/>
[Loaded java.net.URLConnection from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='23555'/>
 {0x000000010d546f68} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0xf0]  (sp of caller)
  0x00000001104543e0: mov    0x8(%rsi),%r10d
  0x00000001104543e4: shl    $0x3,%r10
  0x00000001104543e8: cmp    %rax,%r10
  0x00000001104543eb: jne    0x00000001101e1e60  ;   {runtime_call}
  0x00000001104543f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000001104543fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000110454400: mov    %eax,-0x14000(%rsp)
  0x0000000110454407: push   %rbp
  0x0000000110454408: sub    $0xe0,%rsp
  0x000000011045440f: mov    %rsi,0xb8(%rsp)
  0x0000000110454417: movabs $0x10d6c3a80,%rdi  ;   {metadata(method data for {method} {0x000000010d546f68} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000110454421: mov    0xdc(%rdi),%ebx
  0x0000000110454427: add    $0x8,%ebx
  0x000000011045442a: mov    %ebx,0xdc(%rdi)
  0x0000000110454430: movabs $0x10d546f68,%rdi  ;   {metadata({method} {0x000000010d546f68} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011045443a: and    $0x1ff8,%ebx
  0x0000000110454440: cmp    $0x0,%ebx
  0x0000000110454443: je     0x0000000110454973  ;*aload_1
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 445)

  0x0000000110454449: cmp    $0x0,%rdx
  0x000000011045444d: movabs $0x10d6c3a80,%rdi  ;   {metadata(method data for {method} {0x000000010d546f68} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000110454457: movabs $0x108,%rbx
  0x0000000110454461: jne    0x0000000110454471
  0x0000000110454467: movabs $0x118,%rbx
  0x0000000110454471: mov    (%rdi,%rbx,1),%rax
  0x0000000110454475: lea    0x1(%rax),%rax
  0x0000000110454479: mov    %rax,(%rdi,%rbx,1)
  0x000000011045447d: je     0x0000000110454943  ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)

  0x0000000110454483: cmp    (%rdx),%rax        ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x000000011045498a
  0x0000000110454486: mov    %rdx,%rdi
  0x0000000110454489: movabs $0x10d6c3a80,%rbx  ;   {metadata(method data for {method} {0x000000010d546f68} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000110454493: mov    0x8(%rdi),%edi
  0x0000000110454496: shl    $0x3,%rdi
  0x000000011045449a: cmp    0x140(%rbx),%rdi
  0x00000001104544a1: jne    0x00000001104544b0
  0x00000001104544a3: addq   $0x1,0x148(%rbx)
  0x00000001104544ab: jmpq   0x0000000110454516
  0x00000001104544b0: cmp    0x150(%rbx),%rdi
  0x00000001104544b7: jne    0x00000001104544c6
  0x00000001104544b9: addq   $0x1,0x158(%rbx)
  0x00000001104544c1: jmpq   0x0000000110454516
  0x00000001104544c6: cmpq   $0x0,0x140(%rbx)
  0x00000001104544d1: jne    0x00000001104544ea
  0x00000001104544d3: mov    %rdi,0x140(%rbx)
  0x00000001104544da: movq   $0x1,0x148(%rbx)
  0x00000001104544e5: jmpq   0x0000000110454516
  0x00000001104544ea: cmpq   $0x0,0x150(%rbx)
  0x00000001104544f5: jne    0x000000011045450e
  0x00000001104544f7: mov    %rdi,0x150(%rbx)
  0x00000001104544fe: movq   $0x1,0x158(%rbx)
  0x0000000110454509: jmpq   0x0000000110454516
  0x000000011045450e: addq   $0x1,0x138(%rbx)
  0x0000000110454516: movabs $0x10d6c3920,%rdi  ;   {metadata(method data for {method} {0x000000010d4d4c60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000110454520: mov    0xdc(%rdi),%ebx
  0x0000000110454526: add    $0x8,%ebx
  0x0000000110454529: mov    %ebx,0xdc(%rdi)
  0x000000011045452f: movabs $0x10d4d4c60,%rdi  ;   {metadata({method} {0x000000010d4d4c60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000110454539: and    $0x7ffff8,%ebx
  0x000000011045453f: cmp    $0x0,%ebx
  0x0000000110454542: je     0x000000011045498f
  0x0000000110454548: mov    0xc(%rdx),%edi
  0x000000011045454b: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)

  0x000000011045454f: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x00000001104549a6
  0x0000000110454552: mov    %edi,0xac(%rsp)
  0x0000000110454559: mov    0xc(%rsi),%ebx     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)

  0x000000011045455c: add    %edi,%ebx
  0x000000011045455e: mov    %rsi,%rax
  0x0000000110454561: movabs $0x10d6c3a80,%rcx  ;   {metadata(method data for {method} {0x000000010d546f68} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011045456b: addq   $0x1,0x168(%rcx)
  0x0000000110454573: movabs $0x10d6cc080,%rax  ;   {metadata(method data for {method} {0x000000010d546610} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011045457d: mov    0xdc(%rax),%ecx
  0x0000000110454583: add    $0x8,%ecx
  0x0000000110454586: mov    %ecx,0xdc(%rax)
  0x000000011045458c: movabs $0x10d546610,%rax  ;   {metadata({method} {0x000000010d546610} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000110454596: and    $0x7ffff8,%ecx
  0x000000011045459c: cmp    $0x0,%ecx
  0x000000011045459f: je     0x00000001104549ab
  0x00000001104545a5: mov    0x10(%rsi),%eax
  0x00000001104545a8: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000001104545ac: mov    0xc(%rax),%ecx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; implicit exception: dispatches to 0x00000001104549c2
  0x00000001104545af: mov    %rbx,%r8
  0x00000001104545b2: sub    %ecx,%r8d
  0x00000001104545b5: cmp    $0x0,%r8d
  0x00000001104545b9: movabs $0x10d6cc080,%r8   ;   {metadata(method data for {method} {0x000000010d546610} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000001104545c3: movabs $0x108,%r9
  0x00000001104545cd: jle    0x00000001104545dd
  0x00000001104545d3: movabs $0x118,%r9
  0x00000001104545dd: mov    (%r8,%r9,1),%r11
  0x00000001104545e1: lea    0x1(%r11),%r11
  0x00000001104545e5: mov    %r11,(%r8,%r9,1)
  0x00000001104545e9: jg     0x00000001104545fc  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000001104545ef: mov    %rdx,0xc0(%rsp)
  0x00000001104545f7: jmpq   0x000000011045485b  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000001104545fc: mov    %ecx,0xa8(%rsp)
  0x0000000110454603: mov    %rax,0xb0(%rsp)
  0x000000011045460b: mov    %rdx,0xc0(%rsp)
  0x0000000110454613: mov    %rsi,%r8
  0x0000000110454616: movabs $0x10d6cc080,%r9   ;   {metadata(method data for {method} {0x000000010d546610} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000110454620: addq   $0x1,0x128(%r9)
  0x0000000110454628: mov    %rbx,%rdx
  0x000000011045462b: mov    %rsi,%rbx
  0x000000011045462e: mov    %rbx,%rsi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000110454631: nop
  0x0000000110454632: nop
  0x0000000110454633: nop
  0x0000000110454634: nop
  0x0000000110454635: nop
  0x0000000110454636: nop
  0x0000000110454637: callq  0x00000001101e20a0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=604}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {optimized virtual_call}
  0x000000011045463c: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000011045463f: movabs $0x10d6cc080,%rbx  ;   {metadata(method data for {method} {0x000000010d546610} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000110454649: addq   $0x1,0x138(%rbx)
  0x0000000110454651: movabs $0x10d6ce9c0,%rbx  ;   {metadata(method data for {method} {0x000000010d5ec2c8} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011045465b: mov    0xdc(%rbx),%edx
  0x0000000110454661: add    $0x8,%edx
  0x0000000110454664: mov    %edx,0xdc(%rbx)
  0x000000011045466a: movabs $0x10d5ec2c8,%rbx  ;   {metadata({method} {0x000000010d5ec2c8} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000110454674: and    $0x7ffff8,%edx
  0x000000011045467a: cmp    $0x0,%edx
  0x000000011045467d: je     0x00000001104549c7
  0x0000000110454683: mov    %r8,%rbx
  0x0000000110454686: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000110454690: movslq %ebx,%rbx
  0x0000000110454693: mov    %rbx,%rdi
  0x0000000110454696: cmp    $0xffffff,%rbx
  0x000000011045469d: ja     0x00000001104549de
  0x00000001104546a3: movabs $0x17,%rsi
  0x00000001104546ad: lea    (%rsi,%rbx,2),%rsi
  0x00000001104546b1: and    $0xfffffffffffffff8,%rsi
  0x00000001104546b5: mov    0x60(%r15),%rax
  0x00000001104546b9: lea    (%rax,%rsi,1),%rsi
  0x00000001104546bd: cmp    0x70(%r15),%rsi
  0x00000001104546c1: ja     0x00000001104549de
  0x00000001104546c7: mov    %rsi,0x60(%r15)
  0x00000001104546cb: sub    %rax,%rsi
  0x00000001104546ce: movq   $0x1,(%rax)
  0x00000001104546d5: mov    %rdx,%rcx
  0x00000001104546d8: shr    $0x3,%rcx
  0x00000001104546dc: mov    %ecx,0x8(%rax)
  0x00000001104546df: mov    %ebx,0xc(%rax)
  0x00000001104546e2: sub    $0x10,%rsi
  0x00000001104546e6: je     0x00000001104546fd
  0x00000001104546ec: xor    %rbx,%rbx
  0x00000001104546ef: shr    $0x3,%rsi
  0x00000001104546f3: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000001104546f8: dec    %rsi
  0x00000001104546fb: jne    0x00000001104546f3  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000001104546fd: movabs $0x10d6ce9c0,%rsi  ;   {metadata(method data for {method} {0x000000010d5ec2c8} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000110454707: addq   $0x1,0x108(%rsi)
  0x000000011045470f: movabs $0x10d69e000,%rsi  ;   {metadata(method data for {method} {0x000000010d5c7b80} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000110454719: mov    0xdc(%rsi),%edx
  0x000000011045471f: add    $0x8,%edx
  0x0000000110454722: mov    %edx,0xdc(%rsi)
  0x0000000110454728: movabs $0x10d5c7b80,%rsi  ;   {metadata({method} {0x000000010d5c7b80} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000110454732: and    $0x7ffff8,%edx
  0x0000000110454738: cmp    $0x0,%edx
  0x000000011045473b: je     0x00000001104549e8
  0x0000000110454741: mov    0xa8(%rsp),%ecx
  0x0000000110454748: cmp    %r8d,%ecx
  0x000000011045474b: movabs $0x10d69e000,%rsi  ;   {metadata(method data for {method} {0x000000010d5c7b80} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000110454755: movabs $0x108,%rdx
  0x000000011045475f: jg     0x000000011045476f
  0x0000000110454765: movabs $0x118,%rdx
  0x000000011045476f: mov    (%rsi,%rdx,1),%r9
  0x0000000110454773: lea    0x1(%r9),%r9
  0x0000000110454777: mov    %r9,(%rsi,%rdx,1)
  0x000000011045477b: jg     0x0000000110454799  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000110454781: movabs $0x10d69e000,%rsi  ;   {metadata(method data for {method} {0x000000010d5c7b80} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011045478b: incl   0x128(%rsi)
  0x0000000110454791: mov    %rcx,%r9
  0x0000000110454794: jmpq   0x000000011045479c  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000110454799: mov    %r8,%r9            ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000011045479c: mov    0xb0(%rsp),%rsi
  0x00000001104547a4: movabs $0x10d6ce9c0,%rdx  ;   {metadata(method data for {method} {0x000000010d5ec2c8} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000001104547ae: addq   $0x1,0x118(%rdx)
  0x00000001104547b6: mov    $0x0,%edx
  0x00000001104547bb: mov    %rax,%rcx
  0x00000001104547be: mov    $0x0,%r8d
  0x00000001104547c4: mov    %rax,0xc8(%rsp)
  0x00000001104547cc: lea    (%rdx,%r9,1),%rdi
  0x00000001104547d0: cmp    0xc(%rsi),%edi
  0x00000001104547d3: ja     0x00000001104549ff
  0x00000001104547d9: lea    (%r8,%r9,1),%rdi
  0x00000001104547dd: cmp    0xc(%rcx),%edi
  0x00000001104547e0: ja     0x00000001104549ff
  0x00000001104547e6: test   %r9d,%r9d
  0x00000001104547e9: jl     0x00000001104549ff
  0x00000001104547ef: je     0x000000011045482b
  0x00000001104547f5: movslq %edx,%rdx
  0x00000001104547f8: movslq %r8d,%r8
  0x00000001104547fb: lea    0x10(%rsi,%rdx,2),%rdi
  0x0000000110454800: lea    0x10(%rcx,%r8,2),%rsi
  0x0000000110454805: mov    %r9,%rdx
  0x0000000110454808: test   $0xf,%esp
  0x000000011045480e: je     0x0000000110454826
  0x0000000110454814: sub    $0x8,%rsp
  0x0000000110454818: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000011045481d: add    $0x8,%rsp
  0x0000000110454821: jmpq   0x000000011045482b
  0x0000000110454826: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000011045482b: mov    0xc8(%rsp),%rax
  0x0000000110454833: mov    0xb8(%rsp),%rsi
  0x000000011045483b: mov    %rax,%r10
  0x000000011045483e: shr    $0x3,%r10
  0x0000000110454842: mov    %r10d,0x10(%rsi)
  0x0000000110454846: mov    %rsi,%rdx
  0x0000000110454849: shr    $0x9,%rdx
  0x000000011045484d: movabs $0x10097a000,%rcx
  0x0000000110454857: movb   $0x0,(%rdx,%rcx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000011045485b: mov    0xac(%rsp),%ebx
  0x0000000110454862: mov    0xc0(%rsp),%rdi
  0x000000011045486a: mov    0x10(%rsi),%r8d
  0x000000011045486e: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)

  0x0000000110454872: mov    0xc(%rsi),%r9d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)

  0x0000000110454876: mov    %rdi,%rdx
  0x0000000110454879: movabs $0x10d6c3a80,%rcx  ;   {metadata(method data for {method} {0x000000010d546f68} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000110454883: mov    0x8(%rdx),%edx
  0x0000000110454886: shl    $0x3,%rdx
  0x000000011045488a: cmp    0x180(%rcx),%rdx
  0x0000000110454891: jne    0x00000001104548a0
  0x0000000110454893: addq   $0x1,0x188(%rcx)
  0x000000011045489b: jmpq   0x0000000110454906
  0x00000001104548a0: cmp    0x190(%rcx),%rdx
  0x00000001104548a7: jne    0x00000001104548b6
  0x00000001104548a9: addq   $0x1,0x198(%rcx)
  0x00000001104548b1: jmpq   0x0000000110454906
  0x00000001104548b6: cmpq   $0x0,0x180(%rcx)
  0x00000001104548c1: jne    0x00000001104548da
  0x00000001104548c3: mov    %rdx,0x180(%rcx)
  0x00000001104548ca: movq   $0x1,0x188(%rcx)
  0x00000001104548d5: jmpq   0x0000000110454906
  0x00000001104548da: cmpq   $0x0,0x190(%rcx)
  0x00000001104548e5: jne    0x00000001104548fe
  0x00000001104548e7: mov    %rdx,0x190(%rcx)
  0x00000001104548ee: movq   $0x1,0x198(%rcx)
  0x00000001104548f9: jmpq   0x0000000110454906
  0x00000001104548fe: addq   $0x1,0x178(%rcx)
  0x0000000110454906: mov    $0x0,%edx
  0x000000011045490b: mov    %rbx,%rcx
  0x000000011045490e: mov    %rdi,%rsi          ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x0000000110454911: nop
  0x0000000110454912: nop
  0x0000000110454913: nop
  0x0000000110454914: nop
  0x0000000110454915: nop
  0x0000000110454916: nop
  0x0000000110454917: callq  0x00000001101e20a0  ; OopMap{[184]=Oop off=1340}
                                                ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {optimized virtual_call}
  0x000000011045491c: mov    0xb8(%rsp),%rsi
  0x0000000110454924: mov    0xc(%rsi),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)

  0x0000000110454927: add    0xac(%rsp),%eax
  0x000000011045492e: mov    %eax,0xc(%rsi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@45 (line 450)

  0x0000000110454931: mov    %rsi,%rax
  0x0000000110454934: add    $0xe0,%rsp
  0x000000011045493b: pop    %rbp
  0x000000011045493c: test   %eax,-0xf975842(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x0000000110454942: retq                      ;*areturn
                                                ; - java.lang.AbstractStringBuilder::append@49 (line 451)

  0x0000000110454943: mov    %rsi,%rdi
  0x0000000110454946: movabs $0x10d6c3a80,%rbx  ;   {metadata(method data for {method} {0x000000010d546f68} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000110454950: addq   $0x1,0x128(%rbx)
  0x0000000110454958: nop
  0x0000000110454959: nop
  0x000000011045495a: nop
  0x000000011045495b: nop
  0x000000011045495c: nop
  0x000000011045495d: nop
  0x000000011045495e: nop
  0x000000011045495f: callq  0x00000001101e20a0  ; OopMap{off=1412}
                                                ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 446)
                                                ;   {optimized virtual_call}
  0x0000000110454964: add    $0xe0,%rsp
  0x000000011045496b: pop    %rbp
  0x000000011045496c: test   %eax,-0xf975872(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x0000000110454972: retq   
  0x0000000110454973: mov    %rdi,0x8(%rsp)
  0x0000000110454978: movq   $0xffffffffffffffff,(%rsp)
  0x0000000110454980: callq  0x000000011043fba0  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1445}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ;   {runtime_call}
  0x0000000110454985: jmpq   0x0000000110454449
  0x000000011045498a: callq  0x000000011020a100  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1455}
                                                ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x000000011045498f: mov    %rdi,0x8(%rsp)
  0x0000000110454994: movq   $0xffffffffffffffff,(%rsp)
  0x000000011045499c: callq  0x000000011043fba0  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1473}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00000001104549a1: jmpq   0x0000000110454548
  0x00000001104549a6: callq  0x000000011020a100  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1483}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00000001104549ab: mov    %rax,0x8(%rsp)
  0x00000001104549b0: movq   $0xffffffffffffffff,(%rsp)
  0x00000001104549b8: callq  0x000000011043fba0  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1501}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000001104549bd: jmpq   0x00000001104545a5
  0x00000001104549c2: callq  0x000000011020a100  ; OopMap{rsi=Oop [184]=Oop rdx=Oop rax=Oop off=1511}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000001104549c7: mov    %rbx,0x8(%rsp)
  0x00000001104549cc: movq   $0xffffffffffffffff,(%rsp)
  0x00000001104549d4: callq  0x000000011043fba0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1529}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000001104549d9: jmpq   0x0000000110454683
  0x00000001104549de: callq  0x00000001102987e0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1539}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000001104549e3: jmpq   0x00000001104546fd
  0x00000001104549e8: mov    %rsi,0x8(%rsp)
  0x00000001104549ed: movq   $0xffffffffffffffff,(%rsp)
  0x00000001104549f5: callq  0x000000011043fba0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop rax=Oop off=1562}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000001104549fa: jmpq   0x0000000110454741
  0x00000001104549ff: callq  0x00000001101e2520  ; OopMap{[184]=Oop [192]=Oop [200]=Oop off=1572}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {static_call}
  0x0000000110454a04: jmpq   0x000000011045482b
  0x0000000110454a09: nop
  0x0000000110454a0a: nop
  0x0000000110454a0b: mov    0x2a8(%r15),%rax
  0x0000000110454a12: movabs $0x0,%r10
  0x0000000110454a1c: mov    %r10,0x2a8(%r15)
  0x0000000110454a23: movabs $0x0,%r10
  0x0000000110454a2d: mov    %r10,0x2b0(%r15)
  0x0000000110454a34: add    $0xe0,%rsp
  0x0000000110454a3b: pop    %rbp
  0x0000000110454a3c: jmpq   0x0000000110208e20  ;   {runtime_call}
  0x0000000110454a41: hlt    
  0x0000000110454a42: hlt    
  0x0000000110454a43: hlt    
  0x0000000110454a44: hlt    
  0x0000000110454a45: hlt    
  0x0000000110454a46: hlt    
  0x0000000110454a47: hlt    
  0x0000000110454a48: hlt    
  0x0000000110454a49: hlt    
  0x0000000110454a4a: hlt    
  0x0000000110454a4b: hlt    
  0x0000000110454a4c: hlt    
  0x0000000110454a4d: hlt    
  0x0000000110454a4e: hlt    
  0x0000000110454a4f: hlt    
  0x0000000110454a50: hlt    
  0x0000000110454a51: hlt    
  0x0000000110454a52: hlt    
  0x0000000110454a53: hlt    
  0x0000000110454a54: hlt    
  0x0000000110454a55: hlt    
  0x0000000110454a56: hlt    
  0x0000000110454a57: hlt    
  0x0000000110454a58: hlt    
  0x0000000110454a59: hlt    
  0x0000000110454a5a: hlt    
  0x0000000110454a5b: hlt    
  0x0000000110454a5c: hlt    
  0x0000000110454a5d: hlt    
  0x0000000110454a5e: hlt    
  0x0000000110454a5f: hlt    
[Stub Code]
  0x0000000110454a60: nop                       ;   {no_reloc}
  0x0000000110454a61: nop
  0x0000000110454a62: nop
  0x0000000110454a63: nop
  0x0000000110454a64: nop
  0x0000000110454a65: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110454a6f: jmpq   0x0000000110454a6f  ;   {runtime_call}
  0x0000000110454a74: nop
  0x0000000110454a75: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110454a7f: jmpq   0x0000000110454a7f  ;   {runtime_call}
  0x0000000110454a84: nop
  0x0000000110454a85: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110454a8f: jmpq   0x0000000110454a8f  ;   {runtime_call}
  0x0000000110454a94: nop
  0x0000000110454a95: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000110454a9f: jmpq   0x0000000110454a9f  ;   {runtime_call}
[Exception Handler]
  0x0000000110454aa4: callq  0x0000000110297b20  ;   {runtime_call}
  0x0000000110454aa9: mov    %rsp,-0x28(%rsp)
  0x0000000110454aae: sub    $0x80,%rsp
  0x0000000110454ab5: mov    %rax,0x78(%rsp)
  0x0000000110454aba: mov    %rcx,0x70(%rsp)
  0x0000000110454abf: mov    %rdx,0x68(%rsp)
  0x0000000110454ac4: mov    %rbx,0x60(%rsp)
  0x0000000110454ac9: mov    %rbp,0x50(%rsp)
  0x0000000110454ace: mov    %rsi,0x48(%rsp)
  0x0000000110454ad3: mov    %rdi,0x40(%rsp)
  0x0000000110454ad8: mov    %r8,0x38(%rsp)
  0x0000000110454add: mov    %r9,0x30(%rsp)
  0x0000000110454ae2: mov    %r10,0x28(%rsp)
  0x0000000110454ae7: mov    %r11,0x20(%rsp)
  0x0000000110454aec: mov    %r12,0x18(%rsp)
  0x0000000110454af1: mov    %r13,0x10(%rsp)
  0x0000000110454af6: mov    %r14,0x8(%rsp)
  0x0000000110454afb: mov    %r15,(%rsp)
  0x0000000110454aff: movabs $0x1031df39c,%rdi  ;   {external_word}
  0x0000000110454b09: movabs $0x110454aa9,%rsi  ;   {internal_word}
  0x0000000110454b13: mov    %rsp,%rdx
  0x0000000110454b16: and    $0xfffffffffffffff0,%rsp
  0x0000000110454b1a: callq  0x0000000103006f7a  ;   {runtime_call}
  0x0000000110454b1f: hlt    
[Deopt Handler Code]
  0x0000000110454b20: movabs $0x110454b20,%r10  ;   {section_word}
  0x0000000110454b2a: push   %r10
  0x0000000110454b2c: jmpq   0x00000001101e3500  ;   {runtime_call}
  0x0000000110454b31: hlt    
  0x0000000110454b32: hlt    
  0x0000000110454b33: hlt    
  0x0000000110454b34: hlt    
  0x0000000110454b35: hlt    
  0x0000000110454b36: hlt    
  0x0000000110454b37: hlt    
<nmethod compile_id='19' compiler='C1' level='3' entry='0x00000001104543e0' size='3456' address='0x0000000110454210' relocation_offset='296' insts_offset='464' stub_offset='2128' scopes_data_offset='2384' scopes_pcs_offset='2792' dependencies_offset='3416' nul_chk_table_offset='3424' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='307' iicount='307' stamp='0.135'/>
<writer thread='4099'/>
[Loaded sun.net.www.URLConnection from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.file.FileURLConnection from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.MessageHeader from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilePermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilePermission$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilePermissionCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.AllPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.UnresolvedPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.BasicPermissionCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded com.liukai.jvmaction.ch_11.JITCompilerTest from file:/Users/liukai/IdeaProjects/myproject/jvm-action/build/classes/java/main/]
[Loaded sun.launcher.LauncherHelper$FXHelper from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$MethodArray from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Void from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<task_queued compile_id='20' compile_kind='osr' method='com/liukai/jvmaction/ch_11/JITCompilerTest doubleValue (I)I' bytes='19' count='7' backedge_count='60416' iicount='7' osr_bci='2' level='3' stamp='0.137' comment='tiered' hot_count='60416'/>
<writer thread='41475'/>
    137   20 %     3       com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue @ 2 (19 bytes)
Decoding compiled method 0x0000000110454fd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010d8d1318} &apos;doubleValue&apos; &apos;(I)I&apos; in &apos;com/liukai/jvmaction/ch_11/JITCompilerTest&apos;
  0x0000000110455140: mov    %eax,-0x14000(%rsp)
  0x0000000110455147: push   %rbp
  0x0000000110455148: sub    $0x30,%rsp
  0x000000011045514c: movabs $0x10d8d1610,%rdi  ;   {metadata(method data for {method} {0x000000010d8d1318} &apos;doubleValue&apos; &apos;(I)I&apos; in &apos;com/liukai/jvmaction/ch_11/JITCompilerTest&apos;)}
  0x0000000110455156: mov    0xdc(%rdi),%ebx
  0x000000011045515c: add    $0x8,%ebx
  0x000000011045515f: mov    %ebx,0xdc(%rdi)
  0x0000000110455165: movabs $0x10d8d1318,%rdi  ;   {metadata({method} {0x000000010d8d1318} &apos;doubleValue&apos; &apos;(I)I&apos; in &apos;com/liukai/jvmaction/ch_11/JITCompilerTest&apos;)}
  0x000000011045516f: and    $0x1ff8,%ebx
  0x0000000110455175: cmp    $0x0,%ebx
  0x0000000110455178: je     0x0000000110455250  ;*iconst_0
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue@0 (line 19)

  0x000000011045517e: mov    $0x0,%edi
  0x0000000110455183: jmpq   0x00000001104551d2  ;*iload_1
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue@2 (line 19)

  0x0000000110455188: inc    %edi
  0x000000011045518a: movabs $0x10d8d1610,%rax  ;   {metadata(method data for {method} {0x000000010d8d1318} &apos;doubleValue&apos; &apos;(I)I&apos; in &apos;com/liukai/jvmaction/ch_11/JITCompilerTest&apos;)}
  0x0000000110455194: mov    0xe0(%rax),%ebx
  0x000000011045519a: add    $0x8,%ebx
  0x000000011045519d: mov    %ebx,0xe0(%rax)
  0x00000001104551a3: movabs $0x10d8d1318,%rax  ;   {metadata({method} {0x000000010d8d1318} &apos;doubleValue&apos; &apos;(I)I&apos; in &apos;com/liukai/jvmaction/ch_11/JITCompilerTest&apos;)}
  0x00000001104551ad: and    $0xfff8,%ebx
  0x00000001104551b3: cmp    $0x0,%ebx
  0x00000001104551b6: je     0x0000000110455267  ; OopMap{off=124}
                                                ;*goto
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue@12 (line 19)

  0x00000001104551bc: test   %eax,-0xf9760c2(%rip)        # 0x0000000100adf100
                                                ;   {poll}
  0x00000001104551c2: movabs $0x10d8d1610,%rax  ;   {metadata(method data for {method} {0x000000010d8d1318} &apos;doubleValue&apos; &apos;(I)I&apos; in &apos;com/liukai/jvmaction/ch_11/JITCompilerTest&apos;)}
  0x00000001104551cc: incl   0x128(%rax)        ;*goto
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue@12 (line 19)

  0x00000001104551d2: cmp    $0x2710,%edi
  0x00000001104551d8: movabs $0x10d8d1610,%rax  ;   {metadata(method data for {method} {0x000000010d8d1318} &apos;doubleValue&apos; &apos;(I)I&apos; in &apos;com/liukai/jvmaction/ch_11/JITCompilerTest&apos;)}
  0x00000001104551e2: movabs $0x108,%rbx
  0x00000001104551ec: jge    0x00000001104551fc
  0x00000001104551f2: movabs $0x118,%rbx
  0x00000001104551fc: mov    (%rax,%rbx,1),%rdx
  0x0000000110455200: lea    0x1(%rdx),%rdx
  0x0000000110455204: mov    %rdx,(%rax,%rbx,1)
  0x0000000110455208: jl     0x0000000110455188  ;*if_icmpge
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue@6 (line 19)

  0x000000011045520e: shl    %esi
  0x0000000110455210: mov    %rsi,%rax
  0x0000000110455213: add    $0x30,%rsp
  0x0000000110455217: pop    %rbp
  0x0000000110455218: test   %eax,-0xf97611e(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x000000011045521e: retq                      ;*ireturn
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue@18 (line 22)

  0x000000011045521f: mov    %eax,-0x14000(%rsp)
  0x0000000110455226: push   %rbp
  0x0000000110455227: sub    $0x30,%rsp
  0x000000011045522b: mov    0x8(%rsi),%ebx
  0x000000011045522e: mov    (%rsi),%eax
  0x0000000110455230: mov    %rsi,%rdi
  0x0000000110455233: mov    %ebx,0x24(%rsp)
  0x0000000110455237: mov    %eax,0x20(%rsp)
  0x000000011045523b: callq  0x00000001030e99c2  ;   {runtime_call}
  0x0000000110455240: mov    0x20(%rsp),%eax
  0x0000000110455244: mov    %rax,%rdi
  0x0000000110455247: mov    0x24(%rsp),%ebx
  0x000000011045524b: mov    %rbx,%rsi
  0x000000011045524e: jmp    0x00000001104551d2
  0x0000000110455250: mov    %rdi,0x8(%rsp)
  0x0000000110455255: movq   $0xffffffffffffffff,(%rsp)
  0x000000011045525d: callq  0x000000011043fba0  ; OopMap{off=290}
                                                ;*synchronization entry
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue@-1 (line 19)
                                                ;   {runtime_call}
  0x0000000110455262: jmpq   0x000000011045517e
  0x0000000110455267: mov    %rax,0x8(%rsp)
  0x000000011045526c: movq   $0xc,(%rsp)
  0x0000000110455274: callq  0x000000011043fba0  ; OopMap{off=313}
                                                ;*goto
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue@12 (line 19)
                                                ;   {runtime_call}
  0x0000000110455279: jmpq   0x00000001104551bc
  0x000000011045527e: nop
  0x000000011045527f: nop
  0x0000000110455280: mov    0x2a8(%r15),%rax
  0x0000000110455287: movabs $0x0,%r10
  0x0000000110455291: mov    %r10,0x2a8(%r15)
  0x0000000110455298: movabs $0x0,%r10
  0x00000001104552a2: mov    %r10,0x2b0(%r15)
  0x00000001104552a9: add    $0x30,%rsp
  0x00000001104552ad: pop    %rbp
  0x00000001104552ae: jmpq   0x0000000110208e20  ;   {runtime_call}
  0x00000001104552b3: hlt    
  0x00000001104552b4: hlt    
  0x00000001104552b5: hlt    
  0x00000001104552b6: hlt    
  0x00000001104552b7: hlt    
  0x00000001104552b8: hlt    
  0x00000001104552b9: hlt    
  0x00000001104552ba: hlt    
  0x00000001104552bb: hlt    
  0x00000001104552bc: hlt    
  0x00000001104552bd: hlt    
  0x00000001104552be: hlt    
  0x00000001104552bf: hlt    
[Exception Handler]
[Stub Code]
  0x00000001104552c0: callq  0x0000000110297b20  ;   {no_reloc}
  0x00000001104552c5: mov    %rsp,-0x28(%rsp)
  0x00000001104552ca: sub    $0x80,%rsp
  0x00000001104552d1: mov    %rax,0x78(%rsp)
  0x00000001104552d6: mov    %rcx,0x70(%rsp)
  0x00000001104552db: mov    %rdx,0x68(%rsp)
  0x00000001104552e0: mov    %rbx,0x60(%rsp)
  0x00000001104552e5: mov    %rbp,0x50(%rsp)
  0x00000001104552ea: mov    %rsi,0x48(%rsp)
  0x00000001104552ef: mov    %rdi,0x40(%rsp)
  0x00000001104552f4: mov    %r8,0x38(%rsp)
  0x00000001104552f9: mov    %r9,0x30(%rsp)
  0x00000001104552fe: mov    %r10,0x28(%rsp)
  0x0000000110455303: mov    %r11,0x20(%rsp)
  0x0000000110455308: mov    %r12,0x18(%rsp)
  0x000000011045530d: mov    %r13,0x10(%rsp)
  0x0000000110455312: mov    %r14,0x8(%rsp)
  0x0000000110455317: mov    %r15,(%rsp)
  0x000000011045531b: movabs $0x1031df39c,%rdi  ;   {external_word}
  0x0000000110455325: movabs $0x1104552c5,%rsi  ;   {internal_word}
  0x000000011045532f: mov    %rsp,%rdx
  0x0000000110455332: and    $0xfffffffffffffff0,%rsp
  0x0000000110455336: callq  0x0000000103006f7a  ;   {runtime_call}
  0x000000011045533b: hlt    
[Deopt Handler Code]
  0x000000011045533c: movabs $0x11045533c,%r10  ;   {section_word}
  0x0000000110455346: push   %r10
  0x0000000110455348: jmpq   0x00000001101e3500  ;   {runtime_call}
  0x000000011045534d: hlt    
  0x000000011045534e: hlt    
  0x000000011045534f: hlt    
<nmethod compile_id='20' compile_kind='osr' compiler='C1' level='3' entry='0x0000000110455140' size='1136' address='0x0000000110454fd0' relocation_offset='296' insts_offset='368' stub_offset='752' scopes_data_offset='912' scopes_pcs_offset='968' dependencies_offset='1128' oops_offset='896' method='com/liukai/jvmaction/ch_11/JITCompilerTest doubleValue (I)I' bytes='19' count='34' backedge_count='338996' iicount='34' stamp='0.139'/>
<writer thread='4099'/>
<task_queued compile_id='21' method='com/liukai/jvmaction/ch_11/JITCompilerTest doubleValue (I)I' bytes='19' count='35' backedge_count='340992' iicount='35' level='3' stamp='0.139' comment='tiered' hot_count='35'/>
<writer thread='40963'/>
    138   21       3       com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue (19 bytes)
Decoding compiled method 0x0000000110455450:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010d8d1318} &apos;doubleValue&apos; &apos;(I)I&apos; in &apos;com/liukai/jvmaction/ch_11/JITCompilerTest&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x00000001104555c0: mov    %eax,-0x14000(%rsp)
  0x00000001104555c7: push   %rbp
  0x00000001104555c8: sub    $0x30,%rsp
  0x00000001104555cc: movabs $0x10d8d1610,%rax  ;   {metadata(method data for {method} {0x000000010d8d1318} &apos;doubleValue&apos; &apos;(I)I&apos; in &apos;com/liukai/jvmaction/ch_11/JITCompilerTest&apos;)}
  0x00000001104555d6: mov    0xdc(%rax),%edi
  0x00000001104555dc: add    $0x8,%edi
  0x00000001104555df: mov    %edi,0xdc(%rax)
  0x00000001104555e5: movabs $0x10d8d1318,%rax  ;   {metadata({method} {0x000000010d8d1318} &apos;doubleValue&apos; &apos;(I)I&apos; in &apos;com/liukai/jvmaction/ch_11/JITCompilerTest&apos;)}
  0x00000001104555ef: and    $0x1ff8,%edi
  0x00000001104555f5: cmp    $0x0,%edi
  0x00000001104555f8: je     0x000000011045569f  ;*iconst_0
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue@0 (line 19)

  0x00000001104555fe: mov    $0x0,%eax
  0x0000000110455603: jmpq   0x0000000110455652  ;*iload_1
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue@2 (line 19)

  0x0000000110455608: inc    %eax
  0x000000011045560a: movabs $0x10d8d1610,%rdi  ;   {metadata(method data for {method} {0x000000010d8d1318} &apos;doubleValue&apos; &apos;(I)I&apos; in &apos;com/liukai/jvmaction/ch_11/JITCompilerTest&apos;)}
  0x0000000110455614: mov    0xe0(%rdi),%ebx
  0x000000011045561a: add    $0x8,%ebx
  0x000000011045561d: mov    %ebx,0xe0(%rdi)
  0x0000000110455623: movabs $0x10d8d1318,%rdi  ;   {metadata({method} {0x000000010d8d1318} &apos;doubleValue&apos; &apos;(I)I&apos; in &apos;com/liukai/jvmaction/ch_11/JITCompilerTest&apos;)}
  0x000000011045562d: and    $0xfff8,%ebx
  0x0000000110455633: cmp    $0x0,%ebx
  0x0000000110455636: je     0x00000001104556b6  ; OopMap{off=124}
                                                ;*goto
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue@12 (line 19)

  0x000000011045563c: test   %eax,-0xf976542(%rip)        # 0x0000000100adf100
                                                ;   {poll}
  0x0000000110455642: movabs $0x10d8d1610,%rdi  ;   {metadata(method data for {method} {0x000000010d8d1318} &apos;doubleValue&apos; &apos;(I)I&apos; in &apos;com/liukai/jvmaction/ch_11/JITCompilerTest&apos;)}
  0x000000011045564c: incl   0x128(%rdi)        ;*goto
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue@12 (line 19)

  0x0000000110455652: cmp    $0x2710,%eax
  0x0000000110455658: movabs $0x10d8d1610,%rdi  ;   {metadata(method data for {method} {0x000000010d8d1318} &apos;doubleValue&apos; &apos;(I)I&apos; in &apos;com/liukai/jvmaction/ch_11/JITCompilerTest&apos;)}
  0x0000000110455662: movabs $0x108,%rbx
  0x000000011045566c: jge    0x000000011045567c
  0x0000000110455672: movabs $0x118,%rbx
  0x000000011045567c: mov    (%rdi,%rbx,1),%rdx
  0x0000000110455680: lea    0x1(%rdx),%rdx
  0x0000000110455684: mov    %rdx,(%rdi,%rbx,1)
  0x0000000110455688: jl     0x0000000110455608  ;*if_icmpge
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue@6 (line 19)

  0x000000011045568e: shl    %esi
  0x0000000110455690: mov    %rsi,%rax
  0x0000000110455693: add    $0x30,%rsp
  0x0000000110455697: pop    %rbp
  0x0000000110455698: test   %eax,-0xf97659e(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x000000011045569e: retq   
  0x000000011045569f: mov    %rax,0x8(%rsp)
  0x00000001104556a4: movq   $0xffffffffffffffff,(%rsp)
  0x00000001104556ac: callq  0x000000011043fba0  ; OopMap{off=241}
                                                ;*synchronization entry
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue@-1 (line 19)
                                                ;   {runtime_call}
  0x00000001104556b1: jmpq   0x00000001104555fe
  0x00000001104556b6: mov    %rdi,0x8(%rsp)
  0x00000001104556bb: movq   $0xc,(%rsp)
  0x00000001104556c3: callq  0x000000011043fba0  ; OopMap{off=264}
                                                ;*goto
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue@12 (line 19)
                                                ;   {runtime_call}
  0x00000001104556c8: jmpq   0x000000011045563c
  0x00000001104556cd: nop
  0x00000001104556ce: nop
  0x00000001104556cf: mov    0x2a8(%r15),%rax
  0x00000001104556d6: movabs $0x0,%r10
  0x00000001104556e0: mov    %r10,0x2a8(%r15)
  0x00000001104556e7: movabs $0x0,%r10
  0x00000001104556f1: mov    %r10,0x2b0(%r15)
  0x00000001104556f8: add    $0x30,%rsp
  0x00000001104556fc: pop    %rbp
  0x00000001104556fd: jmpq   0x0000000110208e20  ;   {runtime_call}
  0x0000000110455702: hlt    
  0x0000000110455703: hlt    
  0x0000000110455704: hlt    
  0x0000000110455705: hlt    
  0x0000000110455706: hlt    
  0x0000000110455707: hlt    
  0x0000000110455708: hlt    
  0x0000000110455709: hlt    
  0x000000011045570a: hlt    
  0x000000011045570b: hlt    
  0x000000011045570c: hlt    
  0x000000011045570d: hlt    
  0x000000011045570e: hlt    
  0x000000011045570f: hlt    
  0x0000000110455710: hlt    
  0x0000000110455711: hlt    
  0x0000000110455712: hlt    
  0x0000000110455713: hlt    
  0x0000000110455714: hlt    
  0x0000000110455715: hlt    
  0x0000000110455716: hlt    
  0x0000000110455717: hlt    
  0x0000000110455718: hlt    
  0x0000000110455719: hlt    
  0x000000011045571a: hlt    
  0x000000011045571b: hlt    
  0x000000011045571c: hlt    
  0x000000011045571d: hlt    
  0x000000011045571e: hlt    
  0x000000011045571f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110455720: callq  0x0000000110297b20  ;   {no_reloc}
  0x0000000110455725: mov    %rsp,-0x28(%rsp)
  0x000000011045572a: sub    $0x80,%rsp
  0x0000000110455731: mov    %rax,0x78(%rsp)
  0x0000000110455736: mov    %rcx,0x70(%rsp)
  0x000000011045573b: mov    %rdx,0x68(%rsp)
  0x0000000110455740: mov    %rbx,0x60(%rsp)
  0x0000000110455745: mov    %rbp,0x50(%rsp)
  0x000000011045574a: mov    %rsi,0x48(%rsp)
  0x000000011045574f: mov    %rdi,0x40(%rsp)
  0x0000000110455754: mov    %r8,0x38(%rsp)
  0x0000000110455759: mov    %r9,0x30(%rsp)
  0x000000011045575e: mov    %r10,0x28(%rsp)
  0x0000000110455763: mov    %r11,0x20(%rsp)
  0x0000000110455768: mov    %r12,0x18(%rsp)
  0x000000011045576d: mov    %r13,0x10(%rsp)
  0x0000000110455772: mov    %r14,0x8(%rsp)
  0x0000000110455777: mov    %r15,(%rsp)
  0x000000011045577b: movabs $0x1031df39c,%rdi  ;   {external_word}
  0x0000000110455785: movabs $0x110455725,%rsi  ;   {internal_word}
  0x000000011045578f: mov    %rsp,%rdx
  0x0000000110455792: and    $0xfffffffffffffff0,%rsp
  0x0000000110455796: callq  0x0000000103006f7a  ;   {runtime_call}
  0x000000011045579b: hlt    
[Deopt Handler Code]
  0x000000011045579c: movabs $0x11045579c,%r10  ;   {section_word}
  0x00000001104557a6: push   %r10
  0x00000001104557a8: jmpq   0x00000001101e3500  ;   {runtime_call}
  0x00000001104557ad: hlt    
  0x00000001104557ae: hlt    
  0x00000001104557af: hlt    
<nmethod compile_id='21' compiler='C1' level='3' entry='0x00000001104555c0' size='1088' address='0x0000000110455450' relocation_offset='296' insts_offset='368' stub_offset='720' scopes_data_offset='880' scopes_pcs_offset='936' dependencies_offset='1080' oops_offset='864' method='com/liukai/jvmaction/ch_11/JITCompilerTest doubleValue (I)I' bytes='19' count='123' backedge_count='1227925' iicount='123' stamp='0.141'/>
<writer thread='4099'/>
<task_queued compile_id='22' compile_kind='osr' method='com/liukai/jvmaction/ch_11/JITCompilerTest doubleValue (I)I' bytes='19' count='124' backedge_count='1232896' iicount='124' osr_bci='2' stamp='0.141' comment='tiered' hot_count='1232896'/>
<writer thread='22787'/>
    140   22 %     4       com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue @ 2 (19 bytes)
Decoding compiled method 0x0000000110458510:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010d8d1318} &apos;doubleValue&apos; &apos;(I)I&apos; in &apos;com/liukai/jvmaction/ch_11/JITCompilerTest&apos;
  0x0000000110458660: callq  0x000000010308a6f4  ;   {runtime_call}
  0x0000000110458665: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000110458670: sub    $0x18,%rsp
  0x0000000110458677: mov    %rbp,0x10(%rsp)
  0x000000011045867c: mov    0x8(%rsi),%ebp
  0x000000011045867f: mov    %rsi,%rdi
  0x0000000110458682: movabs $0x1030e99c2,%r10
  0x000000011045868c: callq  *%r10              ;*iload_1
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue@2 (line 19)

  0x000000011045868f: shl    %ebp               ;*imul
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue@17 (line 22)

  0x0000000110458691: mov    %ebp,%eax
  0x0000000110458693: add    $0x10,%rsp
  0x0000000110458697: pop    %rbp
  0x0000000110458698: test   %eax,-0xf97969e(%rip)        # 0x0000000100adf000
                                                ;   {poll_return}
  0x000000011045869e: retq   
  0x000000011045869f: hlt    
[Exception Handler]
[Stub Code]
  0x00000001104586a0: jmpq   0x00000001102091a0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000001104586a5: callq  0x00000001104586aa
  0x00000001104586aa: subq   $0x5,(%rsp)
  0x00000001104586af: jmpq   0x00000001101e3500  ;   {runtime_call}
  0x00000001104586b4: hlt    
  0x00000001104586b5: hlt    
  0x00000001104586b6: hlt    
  0x00000001104586b7: hlt    
<nmethod compile_id='22' compile_kind='osr' compiler='C2' level='4' entry='0x0000000110458660' size='528' address='0x0000000110458510' relocation_offset='296' insts_offset='336' stub_offset='400' scopes_data_offset='440' scopes_pcs_offset='456' dependencies_offset='520' oops_offset='424' method='com/liukai/jvmaction/ch_11/JITCompilerTest doubleValue (I)I' bytes='19' count='176' backedge_count='1753134' iicount='176' stamp='0.142'/>
<make_not_entrant thread='22787' compile_id='20' compile_kind='osr' compiler='C1' level='3' stamp='0.142'/>
    142   20 %     3       com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue @ -2 (19 bytes)   made not entrant
<writer thread='4099'/>
<task_queued compile_id='23' method='com/liukai/jvmaction/ch_11/JITCompilerTest doubleValue (I)I' bytes='19' count='176' backedge_count='1758208' iicount='176' stamp='0.142' comment='tiered' hot_count='176'/>
<writer thread='41987'/>
    142   23       4       com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue (19 bytes)
Decoding compiled method 0x0000000110458750:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010d8d1318} &apos;doubleValue&apos; &apos;(I)I&apos; in &apos;com/liukai/jvmaction/ch_11/JITCompilerTest&apos;
  # parm0:    rsi       = int
  #           [sp+0x20]  (sp of caller)
  0x0000000110458880: sub    $0x18,%rsp
  0x0000000110458887: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue@-1 (line 19)

  0x000000011045888c: mov    %esi,%eax
  0x000000011045888e: shl    %eax               ;*imul
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue@17 (line 22)

  0x0000000110458890: add    $0x10,%rsp
  0x0000000110458894: pop    %rbp
  0x0000000110458895: test   %eax,-0xf97989b(%rip)        # 0x0000000100adf000
                                                ;   {poll_return}
  0x000000011045889b: retq   
  0x000000011045889c: hlt    
  0x000000011045889d: hlt    
  0x000000011045889e: hlt    
  0x000000011045889f: hlt    
[Exception Handler]
[Stub Code]
  0x00000001104588a0: jmpq   0x00000001102091a0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000001104588a5: callq  0x00000001104588aa
  0x00000001104588aa: subq   $0x5,(%rsp)
  0x00000001104588af: jmpq   0x00000001101e3500  ;   {runtime_call}
  0x00000001104588b4: hlt    
  0x00000001104588b5: hlt    
  0x00000001104588b6: hlt    
  0x00000001104588b7: hlt    
<nmethod compile_id='23' compiler='C2' level='4' entry='0x0000000110458880' size='464' address='0x0000000110458750' relocation_offset='296' insts_offset='304' stub_offset='336' scopes_data_offset='376' scopes_pcs_offset='392' dependencies_offset='456' oops_offset='360' method='com/liukai/jvmaction/ch_11/JITCompilerTest doubleValue (I)I' bytes='19' count='203' backedge_count='1978449' iicount='203' stamp='0.143'/>
<make_not_entrant thread='41987' compile_id='21' compiler='C1' level='3' stamp='0.143'/>
    142   21       3       com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue (19 bytes)   made not entrant
<writer thread='4099'/>
<task_queued compile_id='24' method='com/liukai/jvmaction/ch_11/JITCompilerTest calSum ()J' bytes='26' count='103' backedge_count='10240' iicount='103' level='3' stamp='0.143' comment='tiered' hot_count='103'/>
<writer thread='40195'/>
    143   24       3       com.liukai.jvmaction.ch_11.JITCompilerTest::calSum (26 bytes)
                              @ 12   com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue (19 bytes)   inlining prohibited by policy
Decoding compiled method 0x0000000110458010:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010d8d13f8} &apos;calSum&apos; &apos;()J&apos; in &apos;com/liukai/jvmaction/ch_11/JITCompilerTest&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000110458180: mov    %eax,-0x14000(%rsp)
  0x0000000110458187: push   %rbp
  0x0000000110458188: sub    $0x40,%rsp
  0x000000011045818c: movabs $0x10d8d1768,%rsi  ;   {metadata(method data for {method} {0x000000010d8d13f8} &apos;calSum&apos; &apos;()J&apos; in &apos;com/liukai/jvmaction/ch_11/JITCompilerTest&apos;)}
  0x0000000110458196: mov    0xdc(%rsi),%edi
  0x000000011045819c: add    $0x8,%edi
  0x000000011045819f: mov    %edi,0xdc(%rsi)
  0x00000001104581a5: movabs $0x10d8d13f8,%rsi  ;   {metadata({method} {0x000000010d8d13f8} &apos;calSum&apos; &apos;()J&apos; in &apos;com/liukai/jvmaction/ch_11/JITCompilerTest&apos;)}
  0x00000001104581af: and    $0x1ff8,%edi
  0x00000001104581b5: cmp    $0x0,%edi
  0x00000001104581b8: je     0x00000001104582aa  ;*lconst_0
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@0 (line 26)

  0x00000001104581be: mov    $0x0,%edi
  0x00000001104581c3: movabs $0x0,%rbx
  0x00000001104581cd: jmpq   0x0000000110458258  ;*iload_2
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@4 (line 27)

  0x00000001104581d2: nopw   0x0(%rax,%rax,1)
  0x00000001104581d8: movabs $0x10d8d1768,%rsi  ;   {metadata(method data for {method} {0x000000010d8d13f8} &apos;calSum&apos; &apos;()J&apos; in &apos;com/liukai/jvmaction/ch_11/JITCompilerTest&apos;)}
  0x00000001104581e2: addq   $0x1,0x128(%rsi)
  0x00000001104581ea: mov    %rdi,%rsi          ;*invokestatic doubleValue
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@12 (line 28)

  0x00000001104581ed: mov    %edi,0x30(%rsp)
  0x00000001104581f1: nop
  0x00000001104581f2: nop
  0x00000001104581f3: nop
  0x00000001104581f4: nop
  0x00000001104581f5: nop
  0x00000001104581f6: nop
  0x00000001104581f7: callq  0x00000001101e2520  ; OopMap{off=124}
                                                ;*invokestatic doubleValue
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@12 (line 28)
                                                ;   {static_call}
  0x00000001104581fc: movslq %eax,%rax
  0x00000001104581ff: mov    0x28(%rsp),%rbx
  0x0000000110458204: add    %rbx,%rax
  0x0000000110458207: mov    0x30(%rsp),%edi
  0x000000011045820b: inc    %edi
  0x000000011045820d: movabs $0x10d8d1768,%rsi  ;   {metadata(method data for {method} {0x000000010d8d13f8} &apos;calSum&apos; &apos;()J&apos; in &apos;com/liukai/jvmaction/ch_11/JITCompilerTest&apos;)}
  0x0000000110458217: mov    0xe0(%rsi),%ebx
  0x000000011045821d: add    $0x8,%ebx
  0x0000000110458220: mov    %ebx,0xe0(%rsi)
  0x0000000110458226: movabs $0x10d8d13f8,%rsi  ;   {metadata({method} {0x000000010d8d13f8} &apos;calSum&apos; &apos;()J&apos; in &apos;com/liukai/jvmaction/ch_11/JITCompilerTest&apos;)}
  0x0000000110458230: and    $0xfff8,%ebx
  0x0000000110458236: cmp    $0x0,%ebx
  0x0000000110458239: je     0x00000001104582c1  ; OopMap{off=191}
                                                ;*goto
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@21 (line 27)

  0x000000011045823f: test   %eax,-0xf979145(%rip)        # 0x0000000100adf100
                                                ;   {poll}
  0x0000000110458245: movabs $0x10d8d1768,%rsi  ;   {metadata(method data for {method} {0x000000010d8d13f8} &apos;calSum&apos; &apos;()J&apos; in &apos;com/liukai/jvmaction/ch_11/JITCompilerTest&apos;)}
  0x000000011045824f: incl   0x138(%rsi)
  0x0000000110458255: mov    %rax,%rbx          ;*goto
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@21 (line 27)

  0x0000000110458258: mov    %rbx,0x28(%rsp)
  0x000000011045825d: cmp    $0x64,%edi
  0x0000000110458260: movabs $0x10d8d1768,%rsi  ;   {metadata(method data for {method} {0x000000010d8d13f8} &apos;calSum&apos; &apos;()J&apos; in &apos;com/liukai/jvmaction/ch_11/JITCompilerTest&apos;)}
  0x000000011045826a: movabs $0x108,%rax
  0x0000000110458274: jge    0x0000000110458284
  0x000000011045827a: movabs $0x118,%rax
  0x0000000110458284: mov    (%rsi,%rax,1),%rdx
  0x0000000110458288: lea    0x1(%rdx),%rdx
  0x000000011045828c: mov    %rdx,(%rsi,%rax,1)
  0x0000000110458290: jl     0x00000001104581d8  ;*if_icmpge
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@7 (line 27)

  0x0000000110458296: mov    0x28(%rsp),%rbx
  0x000000011045829b: mov    %rbx,%rax
  0x000000011045829e: add    $0x40,%rsp
  0x00000001104582a2: pop    %rbp
  0x00000001104582a3: test   %eax,-0xf9791a9(%rip)        # 0x0000000100adf100
                                                ;   {poll_return}
  0x00000001104582a9: retq   
  0x00000001104582aa: mov    %rsi,0x8(%rsp)
  0x00000001104582af: movq   $0xffffffffffffffff,(%rsp)
  0x00000001104582b7: callq  0x000000011043fba0  ; OopMap{off=316}
                                                ;*synchronization entry
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@-1 (line 26)
                                                ;   {runtime_call}
  0x00000001104582bc: jmpq   0x00000001104581be
  0x00000001104582c1: mov    %rsi,0x8(%rsp)
  0x00000001104582c6: movq   $0x15,(%rsp)
  0x00000001104582ce: callq  0x000000011043fba0  ; OopMap{off=339}
                                                ;*goto
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@21 (line 27)
                                                ;   {runtime_call}
  0x00000001104582d3: jmpq   0x000000011045823f
  0x00000001104582d8: nop
  0x00000001104582d9: nop
  0x00000001104582da: mov    0x2a8(%r15),%rax
  0x00000001104582e1: movabs $0x0,%r10
  0x00000001104582eb: mov    %r10,0x2a8(%r15)
  0x00000001104582f2: movabs $0x0,%r10
  0x00000001104582fc: mov    %r10,0x2b0(%r15)
  0x0000000110458303: add    $0x40,%rsp
  0x0000000110458307: pop    %rbp
  0x0000000110458308: jmpq   0x0000000110208e20  ;   {runtime_call}
  0x000000011045830d: hlt    
  0x000000011045830e: hlt    
  0x000000011045830f: hlt    
  0x0000000110458310: hlt    
  0x0000000110458311: hlt    
  0x0000000110458312: hlt    
  0x0000000110458313: hlt    
  0x0000000110458314: hlt    
  0x0000000110458315: hlt    
  0x0000000110458316: hlt    
  0x0000000110458317: hlt    
  0x0000000110458318: hlt    
  0x0000000110458319: hlt    
  0x000000011045831a: hlt    
  0x000000011045831b: hlt    
  0x000000011045831c: hlt    
  0x000000011045831d: hlt    
  0x000000011045831e: hlt    
  0x000000011045831f: hlt    
[Stub Code]
  0x0000000110458320: nop                       ;   {no_reloc}
  0x0000000110458321: nop
  0x0000000110458322: nop
  0x0000000110458323: nop
  0x0000000110458324: nop
  0x0000000110458325: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011045832f: jmpq   0x000000011045832f  ;   {runtime_call}
[Exception Handler]
  0x0000000110458334: callq  0x0000000110297b20  ;   {runtime_call}
  0x0000000110458339: mov    %rsp,-0x28(%rsp)
  0x000000011045833e: sub    $0x80,%rsp
  0x0000000110458345: mov    %rax,0x78(%rsp)
  0x000000011045834a: mov    %rcx,0x70(%rsp)
  0x000000011045834f: mov    %rdx,0x68(%rsp)
  0x0000000110458354: mov    %rbx,0x60(%rsp)
  0x0000000110458359: mov    %rbp,0x50(%rsp)
  0x000000011045835e: mov    %rsi,0x48(%rsp)
  0x0000000110458363: mov    %rdi,0x40(%rsp)
  0x0000000110458368: mov    %r8,0x38(%rsp)
  0x000000011045836d: mov    %r9,0x30(%rsp)
  0x0000000110458372: mov    %r10,0x28(%rsp)
  0x0000000110458377: mov    %r11,0x20(%rsp)
  0x000000011045837c: mov    %r12,0x18(%rsp)
  0x0000000110458381: mov    %r13,0x10(%rsp)
  0x0000000110458386: mov    %r14,0x8(%rsp)
  0x000000011045838b: mov    %r15,(%rsp)
  0x000000011045838f: movabs $0x1031df39c,%rdi  ;   {external_word}
  0x0000000110458399: movabs $0x110458339,%rsi  ;   {internal_word}
  0x00000001104583a3: mov    %rsp,%rdx
  0x00000001104583a6: and    $0xfffffffffffffff0,%rsp
  0x00000001104583aa: callq  0x0000000103006f7a  ;   {runtime_call}
  0x00000001104583af: hlt    
[Deopt Handler Code]
  0x00000001104583b0: movabs $0x1104583b0,%r10  ;   {section_word}
  0x00000001104583ba: push   %r10
  0x00000001104583bc: jmpq   0x00000001101e3500  ;   {runtime_call}
  0x00000001104583c1: hlt    
  0x00000001104583c2: hlt    
  0x00000001104583c3: hlt    
  0x00000001104583c4: hlt    
  0x00000001104583c5: hlt    
  0x00000001104583c6: hlt    
  0x00000001104583c7: hlt    
<nmethod compile_id='24' compiler='C1' level='3' entry='0x0000000110458180' size='1232' address='0x0000000110458010' relocation_offset='296' insts_offset='368' stub_offset='784' scopes_data_offset='968' scopes_pcs_offset='1048' dependencies_offset='1224' oops_offset='952' method='com/liukai/jvmaction/ch_11/JITCompilerTest calSum ()J' bytes='26' count='914' backedge_count='91352' iicount='914' stamp='0.145'/>
<writer thread='4099'/>
<task_queued compile_id='25' compile_kind='osr' method='com/liukai/jvmaction/ch_11/JITCompilerTest calSum ()J' bytes='26' count='994' backedge_count='99310' iicount='994' osr_bci='4' stamp='0.145' comment='tiered' hot_count='99310'/>
<writer thread='42499'/>
    145   25 %     4       com.liukai.jvmaction.ch_11.JITCompilerTest::calSum @ 4 (26 bytes)
                              @ 12   com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue (19 bytes)   inline (hot)
Decoding compiled method 0x0000000110456710:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010d8d13f8} &apos;calSum&apos; &apos;()J&apos; in &apos;com/liukai/jvmaction/ch_11/JITCompilerTest&apos;
  0x0000000110456860: callq  0x000000010308a6f4  ;   {runtime_call}
  0x0000000110456865: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000110456870: sub    $0x18,%rsp
  0x0000000110456877: mov    %rbp,0x10(%rsp)
  0x000000011045687c: mov    0x8(%rsi),%rbx
  0x0000000110456880: mov    (%rsi),%r13d
  0x0000000110456883: mov    %rsi,%rdi
  0x0000000110456886: movabs $0x1030e99c2,%r10
  0x0000000110456890: callq  *%r10              ;*iload_2
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@4 (line 27)

  0x0000000110456893: cmp    $0x64,%r13d
  0x0000000110456897: jge    0x0000000110456949  ;*if_icmpge
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@7 (line 27)

  0x000000011045689d: mov    %r13d,%r10d
  0x00000001104568a0: inc    %r10d              ;*iinc
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue@9 (line 19)
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@12 (line 28)

  0x00000001104568a3: mov    %r13d,%r11d
  0x00000001104568a6: shl    %r11d
  0x00000001104568a9: movslq %r11d,%r11
  0x00000001104568ac: add    %r11,%rbx          ;*ladd
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@16 (line 28)

  0x00000001104568af: inc    %r13d              ;*iinc
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@18 (line 27)

  0x00000001104568b2: cmp    %r10d,%r13d
  0x00000001104568b5: jl     0x00000001104568a3  ;*if_icmpge
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@7 (line 27)

  0x00000001104568b7: cmp    $0x5d,%r13d
  0x00000001104568bb: jge    0x000000011045692d
  0x00000001104568bd: data16 xchg %ax,%ax       ;*iinc
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue@9 (line 19)
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@12 (line 28)

  0x00000001104568c0: mov    %r13d,%r11d
  0x00000001104568c3: shl    %r11d              ;*imul
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue@17 (line 22)
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@12 (line 28)

  0x00000001104568c6: mov    %r11d,%r8d
  0x00000001104568c9: add    $0xa,%r8d
  0x00000001104568cd: mov    %r11d,%r9d
  0x00000001104568d0: add    $0x6,%r9d
  0x00000001104568d4: movslq %r8d,%rdi
  0x00000001104568d7: movslq %r9d,%r10
  0x00000001104568da: mov    %r11d,%r9d
  0x00000001104568dd: add    $0x4,%r9d
  0x00000001104568e1: mov    %r11d,%ecx
  0x00000001104568e4: add    $0x2,%ecx
  0x00000001104568e7: movslq %r9d,%r8
  0x00000001104568ea: movslq %ecx,%r9
  0x00000001104568ed: movslq %r11d,%rcx
  0x00000001104568f0: add    %rbx,%rcx
  0x00000001104568f3: add    %r9,%rcx
  0x00000001104568f6: add    %r8,%rcx
  0x00000001104568f9: add    %r10,%rcx
  0x00000001104568fc: mov    %r11d,%r8d
  0x00000001104568ff: add    $0x8,%r8d
  0x0000000110456903: mov    %r11d,%r9d
  0x0000000110456906: add    $0xc,%r9d
  0x000000011045690a: movslq %r8d,%r10
  0x000000011045690d: add    %rcx,%r10
  0x0000000110456910: add    %rdi,%r10
  0x0000000110456913: movslq %r9d,%r8
  0x0000000110456916: add    %r10,%r8
  0x0000000110456919: add    $0xe,%r11d
  0x000000011045691d: movslq %r11d,%rbx
  0x0000000110456920: add    %r8,%rbx           ;*ladd
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@16 (line 28)

  0x0000000110456923: add    $0x8,%r13d         ;*iinc
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@18 (line 27)

  0x0000000110456927: cmp    $0x5d,%r13d
  0x000000011045692b: jl     0x00000001104568c0  ;*if_icmpge
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@7 (line 27)

  0x000000011045692d: cmp    $0x64,%r13d
  0x0000000110456931: jge    0x0000000110456949
  0x0000000110456933: nop                       ;*iinc
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue@9 (line 19)
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@12 (line 28)

  0x0000000110456934: mov    %r13d,%r11d
  0x0000000110456937: shl    %r11d
  0x000000011045693a: movslq %r11d,%r10
  0x000000011045693d: add    %r10,%rbx          ;*ladd
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@16 (line 28)

  0x0000000110456940: inc    %r13d              ;*iinc
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@18 (line 27)

  0x0000000110456943: cmp    $0x64,%r13d
  0x0000000110456947: jl     0x0000000110456934  ;*if_icmpge
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@7 (line 27)

  0x0000000110456949: mov    %rbx,%rax
  0x000000011045694c: add    $0x10,%rsp
  0x0000000110456950: pop    %rbp
  0x0000000110456951: test   %eax,-0xf977957(%rip)        # 0x0000000100adf000
                                                ;   {poll_return}
  0x0000000110456957: retq   
  0x0000000110456958: hlt    
  0x0000000110456959: hlt    
  0x000000011045695a: hlt    
  0x000000011045695b: hlt    
  0x000000011045695c: hlt    
  0x000000011045695d: hlt    
  0x000000011045695e: hlt    
  0x000000011045695f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000110456960: jmpq   0x00000001102091a0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000110456965: callq  0x000000011045696a
  0x000000011045696a: subq   $0x5,(%rsp)
  0x000000011045696f: jmpq   0x00000001101e3500  ;   {runtime_call}
  0x0000000110456974: hlt    
  0x0000000110456975: hlt    
  0x0000000110456976: hlt    
  0x0000000110456977: hlt    
<nmethod compile_id='25' compile_kind='osr' compiler='C2' level='4' entry='0x0000000110456860' size='968' address='0x0000000110456710' relocation_offset='296' insts_offset='336' stub_offset='592' scopes_data_offset='640' scopes_pcs_offset='688' dependencies_offset='960' oops_offset='616' method='com/liukai/jvmaction/ch_11/JITCompilerTest calSum ()J' bytes='26' count='7845' backedge_count='784506' iicount='7846' stamp='0.148'/>
<writer thread='4099'/>
<task_queued compile_id='26' method='com/liukai/jvmaction/ch_11/JITCompilerTest calSum ()J' bytes='26' count='7875' backedge_count='787438' iicount='7875' stamp='0.148' comment='tiered' hot_count='7875'/>
<writer thread='42499'/>
    147   26       4       com.liukai.jvmaction.ch_11.JITCompilerTest::calSum (26 bytes)
                              @ 12   com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue (19 bytes)   inline (hot)
Decoding compiled method 0x00000001104563d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010d8d13f8} &apos;calSum&apos; &apos;()J&apos; in &apos;com/liukai/jvmaction/ch_11/JITCompilerTest&apos;
  #           [sp+0x20]  (sp of caller)
  0x0000000110456500: sub    $0x18,%rsp
  0x0000000110456507: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@-1 (line 26)

  0x000000011045650c: xor    %eax,%eax
  0x000000011045650e: mov    $0x1,%r10d
  0x0000000110456514: mov    $0x2,%r8d
  0x000000011045651a: mov    $0x2,%r11d
  0x0000000110456520: jmp    0x0000000110456536
  0x0000000110456522: mov    %r11d,%r8d
  0x0000000110456525: add    $0x10,%r8d
  0x0000000110456529: shl    %r10d
  0x000000011045652c: mov    %r10d,%r11d
  0x000000011045652f: add    $0x10,%r11d
  0x0000000110456533: mov    %r9d,%r10d         ;*imul
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::doubleValue@17 (line 22)
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@12 (line 28)

  0x0000000110456536: movslq %r8d,%r8           ;*i2l  ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@15 (line 28)

  0x0000000110456539: add    %r8,%rax
  0x000000011045653c: add    %r8,%rax
  0x000000011045653f: add    %r8,%rax
  0x0000000110456542: add    %r8,%rax
  0x0000000110456545: add    %r8,%rax
  0x0000000110456548: add    %r8,%rax
  0x000000011045654b: movslq %r11d,%r8
  0x000000011045654e: add    %r8,%rax
  0x0000000110456551: add    %r8,%rax
  0x0000000110456554: add    $0x38,%rax         ;*ladd
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@16 (line 28)

  0x0000000110456558: mov    %r10d,%r9d
  0x000000011045655b: add    $0x8,%r9d          ;*iinc
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@18 (line 27)

  0x000000011045655f: cmp    $0x61,%r9d
  0x0000000110456563: jl     0x0000000110456522  ;*if_icmpge
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@7 (line 27)

  0x0000000110456565: cmp    $0x64,%r9d
  0x0000000110456569: jge    0x0000000110456581
  0x000000011045656b: nop                       ;*lload_0
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@10 (line 28)

  0x000000011045656c: mov    %r9d,%r11d
  0x000000011045656f: shl    %r11d
  0x0000000110456572: movslq %r11d,%r10
  0x0000000110456575: add    %r10,%rax          ;*ladd
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@16 (line 28)

  0x0000000110456578: inc    %r9d               ;*iinc
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@18 (line 27)

  0x000000011045657b: cmp    $0x64,%r9d
  0x000000011045657f: jl     0x000000011045656c  ;*if_icmpge
                                                ; - com.liukai.jvmaction.ch_11.JITCompilerTest::calSum@7 (line 27)

  0x0000000110456581: add    $0x10,%rsp
  0x0000000110456585: pop    %rbp
  0x0000000110456586: test   %eax,-0xf97758c(%rip)        # 0x0000000100adf000
                                                ;   {poll_return}
  0x000000011045658c: retq   
  0x000000011045658d: hlt    
  0x000000011045658e: hlt    
  0x000000011045658f: hlt    
  0x0000000110456590: hlt    
  0x0000000110456591: hlt    
  0x0000000110456592: hlt    
  0x0000000110456593: hlt    
  0x0000000110456594: hlt    
  0x0000000110456595: hlt    
  0x0000000110456596: hlt    
  0x0000000110456597: hlt    
  0x0000000110456598: hlt    
  0x0000000110456599: hlt    
  0x000000011045659a: hlt    
  0x000000011045659b: hlt    
  0x000000011045659c: hlt    
  0x000000011045659d: hlt    
  0x000000011045659e: hlt    
  0x000000011045659f: hlt    
[Exception Handler]
[Stub Code]
  0x00000001104565a0: jmpq   0x00000001102091a0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000001104565a5: callq  0x00000001104565aa
  0x00000001104565aa: subq   $0x5,(%rsp)
  0x00000001104565af: jmpq   0x00000001101e3500  ;   {runtime_call}
  0x00000001104565b4: hlt    
  0x00000001104565b5: hlt    
  0x00000001104565b6: hlt    
  0x00000001104565b7: hlt    
<nmethod compile_id='26' compiler='C2' level='4' entry='0x0000000110456500' size='768' address='0x00000001104563d0' relocation_offset='296' insts_offset='304' stub_offset='464' scopes_data_offset='512' scopes_pcs_offset='568' dependencies_offset='760' oops_offset='488' method='com/liukai/jvmaction/ch_11/JITCompilerTest calSum ()J' bytes='26' count='12295' backedge_count='1229613' iicount='12297' stamp='0.150'/>
<make_not_entrant thread='42499' compile_id='24' compiler='C1' level='3' stamp='0.150'/>
    150   24       3       com.liukai.jvmaction.ch_11.JITCompilerTest::calSum (26 bytes)   made not entrant
<writer thread='4099'/>
[Loaded java.lang.Shutdown from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Shutdown$Lock from /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='12035'/>
<destroy_vm stamp='0.151'/>
<tty_done stamp='0.151'/>
</tty>
<compilation_log thread='40195'>
<start_compile_thread name='C1 CompilerThread11' thread='40195' process='6014' stamp='0.064'/>
<task compile_id='4' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='389' backedge_count='1778' iicount='389' level='3' stamp='0.072'>
<phase name='buildIR' stamp='0.072'>
<type id='730' name='boolean'/>
<klass id='743' name='java/lang/Object' flags='1'/>
<klass id='744' name='java/lang/String' flags='17'/>
<method id='847' holder='744' name='equals' return='730' arguments='743' flags='1' bytes='81' iicount='389'/>
<parse method='847'  stamp='0.072'>
<parse_done stamp='0.073'/>
</parse>
<phase name='optimize_blocks' stamp='0.073'>
<phase_done name='optimize_blocks' stamp='0.073'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.073'>
<phase_done name='rangeCheckElimination' stamp='0.073'/>
</phase>
<phase name='optimize_null_checks' stamp='0.073'>
<phase_done name='optimize_null_checks' stamp='0.073'/>
</phase>
<phase_done name='buildIR' stamp='0.073'/>
</phase>
<phase name='emit_lir' stamp='0.073'>
<phase name='lirGeneration' stamp='0.073'>
<phase_done name='lirGeneration' stamp='0.073'/>
</phase>
<phase name='linearScan' stamp='0.073'>
<phase_done name='linearScan' stamp='0.073'/>
</phase>
<phase_done name='emit_lir' stamp='0.073'/>
</phase>
<phase name='codeemit' stamp='0.073'>
<phase_done name='codeemit' stamp='0.073'/>
</phase>
<phase name='codeinstall' stamp='0.073'>
<phase_done name='codeinstall' stamp='0.079'/>
</phase>
<code_cache total_blobs='230' nmethods='5' adapters='137' free_code_cache='248835456'/>
<task_done success='1' nmsize='1360' count='393' backedge_count='1785' stamp='0.079'/>
</task>
<task compile_id='9' method='java/lang/Math min (II)I' bytes='11' count='649' iicount='649' level='3' stamp='0.080'>
<phase name='buildIR' stamp='0.080'>
<type id='736' name='int'/>
<klass id='847' name='java/lang/Math' flags='17'/>
<method id='848' holder='847' name='min' return='736' arguments='736 736' flags='9' bytes='11' iicount='651'/>
<parse method='848'  stamp='0.080'>
<parse_done stamp='0.080'/>
</parse>
<phase name='optimize_blocks' stamp='0.080'>
<phase_done name='optimize_blocks' stamp='0.080'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.080'>
<phase_done name='rangeCheckElimination' stamp='0.080'/>
</phase>
<phase name='optimize_null_checks' stamp='0.080'>
<phase_done name='optimize_null_checks' stamp='0.080'/>
</phase>
<phase_done name='buildIR' stamp='0.080'/>
</phase>
<phase name='emit_lir' stamp='0.080'>
<phase name='lirGeneration' stamp='0.080'>
<phase_done name='lirGeneration' stamp='0.080'/>
</phase>
<phase name='linearScan' stamp='0.080'>
<phase_done name='linearScan' stamp='0.080'/>
</phase>
<phase_done name='emit_lir' stamp='0.080'/>
</phase>
<phase name='codeemit' stamp='0.080'>
<phase_done name='codeemit' stamp='0.080'/>
</phase>
<phase name='codeinstall' stamp='0.080'>
<phase_done name='codeinstall' stamp='0.081'/>
</phase>
<code_cache total_blobs='231' nmethods='6' adapters='137' free_code_cache='248834496'/>
<task_done success='1' nmsize='400' count='656' stamp='0.081'/>
</task>
<task compile_id='10' method='java/lang/String length ()I' bytes='6' count='519' iicount='519' level='3' stamp='0.082'>
<phase name='buildIR' stamp='0.084'>
<type id='736' name='int'/>
<klass id='744' name='java/lang/String' flags='17'/>
<method id='847' holder='744' name='length' return='736' flags='1' bytes='6' iicount='519'/>
<parse method='847'  stamp='0.084'>
<parse_done stamp='0.084'/>
</parse>
<phase name='optimize_blocks' stamp='0.084'>
<phase_done name='optimize_blocks' stamp='0.084'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.084'>
<phase_done name='rangeCheckElimination' stamp='0.084'/>
</phase>
<phase name='optimize_null_checks' stamp='0.084'>
<phase_done name='optimize_null_checks' stamp='0.084'/>
</phase>
<phase_done name='buildIR' stamp='0.084'/>
</phase>
<phase name='emit_lir' stamp='0.084'>
<phase name='lirGeneration' stamp='0.084'>
<phase_done name='lirGeneration' stamp='0.084'/>
</phase>
<phase name='linearScan' stamp='0.084'>
<phase_done name='linearScan' stamp='0.084'/>
</phase>
<phase_done name='emit_lir' stamp='0.084'/>
</phase>
<phase name='codeemit' stamp='0.084'>
<phase_done name='codeemit' stamp='0.084'/>
</phase>
<phase name='codeinstall' stamp='0.084'>
<phase_done name='codeinstall' stamp='0.086'/>
</phase>
<code_cache total_blobs='235' nmethods='8' adapters='139' free_code_cache='248830336'/>
<task_done success='1' nmsize='368' count='522' stamp='0.086'/>
</task>
<task compile_id='12' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='258' iicount='258' level='1' stamp='0.105'>
<phase name='buildIR' stamp='0.105'>
<klass id='743' name='java/lang/Object' flags='1'/>
<klass id='769' name='java/lang/ref/Reference' flags='1025'/>
<method id='847' holder='769' name='get' return='743' flags='1' bytes='5' iicount='260'/>
<parse method='847'  stamp='0.105'>
<parse_done stamp='0.105'/>
</parse>
<phase name='optimize_blocks' stamp='0.105'>
<phase_done name='optimize_blocks' stamp='0.105'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.105'>
<phase_done name='rangeCheckElimination' stamp='0.105'/>
</phase>
<phase name='optimize_null_checks' stamp='0.105'>
<phase_done name='optimize_null_checks' stamp='0.105'/>
</phase>
<phase_done name='buildIR' stamp='0.105'/>
</phase>
<phase name='emit_lir' stamp='0.105'>
<phase name='lirGeneration' stamp='0.105'>
<phase_done name='lirGeneration' stamp='0.105'/>
</phase>
<phase name='linearScan' stamp='0.105'>
<phase_done name='linearScan' stamp='0.105'/>
</phase>
<phase_done name='emit_lir' stamp='0.105'/>
</phase>
<phase name='codeemit' stamp='0.105'>
<phase_done name='codeemit' stamp='0.105'/>
</phase>
<phase name='codeinstall' stamp='0.105'>
<phase_done name='codeinstall' stamp='0.106'/>
</phase>
<code_cache total_blobs='241' nmethods='12' adapters='141' free_code_cache='248818752'/>
<task_done success='1' nmsize='272' count='264' stamp='0.106'/>
</task>
<task compile_id='14' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='256' iicount='256' level='3' stamp='0.106'>
<phase name='buildIR' stamp='0.106'>
<klass id='755' name='java/lang/SecurityManager' flags='1'/>
<klass id='749' name='java/lang/System' flags='17'/>
<method id='847' holder='749' name='getSecurityManager' return='755' flags='9' bytes='4' iicount='256'/>
<parse method='847'  stamp='0.106'>
<parse_done stamp='0.106'/>
</parse>
<phase name='optimize_blocks' stamp='0.106'>
<phase_done name='optimize_blocks' stamp='0.106'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.106'>
<phase_done name='rangeCheckElimination' stamp='0.106'/>
</phase>
<phase name='optimize_null_checks' stamp='0.106'>
<phase_done name='optimize_null_checks' stamp='0.106'/>
</phase>
<phase_done name='buildIR' stamp='0.106'/>
</phase>
<phase name='emit_lir' stamp='0.106'>
<phase name='lirGeneration' stamp='0.106'>
<phase_done name='lirGeneration' stamp='0.106'/>
</phase>
<phase name='linearScan' stamp='0.106'>
<phase_done name='linearScan' stamp='0.106'/>
</phase>
<phase_done name='emit_lir' stamp='0.106'/>
</phase>
<phase name='codeemit' stamp='0.106'>
<phase_done name='codeemit' stamp='0.106'/>
</phase>
<phase name='codeinstall' stamp='0.106'>
<phase_done name='codeinstall' stamp='0.107'/>
</phase>
<code_cache total_blobs='242' nmethods='13' adapters='141' free_code_cache='248817920'/>
<task_done success='1' nmsize='336' count='256' stamp='0.107'/>
</task>
<task compile_id='17' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='283' iicount='283' level='3' stamp='0.118'>
<phase name='buildIR' stamp='0.119'>
<klass id='847' name='java/lang/CharacterData' flags='1024'/>
<type id='736' name='int'/>
<method id='848' holder='847' name='of' return='847' arguments='736' flags='24' bytes='120' iicount='283'/>
<parse method='848'  stamp='0.119'>
<parse_done stamp='0.119'/>
</parse>
<phase name='optimize_blocks' stamp='0.119'>
<phase_done name='optimize_blocks' stamp='0.119'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.119'>
<phase_done name='rangeCheckElimination' stamp='0.119'/>
</phase>
<phase name='optimize_null_checks' stamp='0.119'>
<phase_done name='optimize_null_checks' stamp='0.119'/>
</phase>
<phase_done name='buildIR' stamp='0.119'/>
</phase>
<phase name='emit_lir' stamp='0.119'>
<phase name='lirGeneration' stamp='0.119'>
<phase_done name='lirGeneration' stamp='0.119'/>
</phase>
<phase name='linearScan' stamp='0.119'>
<phase_done name='linearScan' stamp='0.119'/>
</phase>
<phase_done name='emit_lir' stamp='0.119'/>
</phase>
<phase name='codeemit' stamp='0.119'>
<phase_done name='codeemit' stamp='0.119'/>
</phase>
<phase name='codeinstall' stamp='0.119'>
<phase_done name='codeinstall' stamp='0.125'/>
</phase>
<code_cache total_blobs='253' nmethods='18' adapters='147' free_code_cache='248806912'/>
<task_done success='1' nmsize='1456' count='283' stamp='0.125'/>
</task>
<task compile_id='24' method='com/liukai/jvmaction/ch_11/JITCompilerTest calSum ()J' bytes='26' count='143' backedge_count='14253' iicount='143' level='3' stamp='0.143'>
<phase name='buildIR' stamp='0.143'>
<type id='737' name='long'/>
<klass id='847' name='com/liukai/jvmaction/ch_11/JITCompilerTest' flags='1'/>
<method id='848' holder='847' name='calSum' return='737' flags='9' bytes='26' iicount='170'/>
<parse method='848'  stamp='0.143'>
<bc code='184' bci='12'/>
<type id='736' name='int'/>
<method id='850' holder='847' name='doubleValue' return='736' arguments='736' flags='9' bytes='19' compile_id='23' compiler='C2' level='4' iicount='205'/>
<call method='850' instr='invokestatic'/>
<inline_fail reason='inlining prohibited by policy'/>
<parse_done stamp='0.143'/>
</parse>
<phase name='optimize_blocks' stamp='0.143'>
<phase_done name='optimize_blocks' stamp='0.143'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.143'>
<phase_done name='rangeCheckElimination' stamp='0.143'/>
</phase>
<phase name='optimize_null_checks' stamp='0.143'>
<phase_done name='optimize_null_checks' stamp='0.143'/>
</phase>
<phase_done name='buildIR' stamp='0.143'/>
</phase>
<phase name='emit_lir' stamp='0.143'>
<phase name='lirGeneration' stamp='0.143'>
<phase_done name='lirGeneration' stamp='0.144'/>
</phase>
<phase name='linearScan' stamp='0.144'>
<phase_done name='linearScan' stamp='0.144'/>
</phase>
<phase_done name='emit_lir' stamp='0.144'/>
</phase>
<phase name='codeemit' stamp='0.144'>
<phase_done name='codeemit' stamp='0.144'/>
</phase>
<phase name='codeinstall' stamp='0.144'>
<phase_done name='codeinstall' stamp='0.145'/>
</phase>
<code_cache total_blobs='259' nmethods='24' adapters='147' free_code_cache='248798720'/>
<task_done success='1' nmsize='584' count='916' backedge_count='91693' stamp='0.145'/>
</task>
</compilation_log>
<compilation_log thread='23555'>
<start_compile_thread name='C1 CompilerThread10' thread='23555' process='6014' stamp='0.064'/>
<task compile_id='3' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='1536' iicount='1536' level='3' stamp='0.071'>
<phase name='buildIR' stamp='0.072'>
<type id='738' name='void'/>
<klass id='743' name='java/lang/Object' flags='1'/>
<method id='847' holder='743' name='&lt;init&gt;' return='738' flags='1' bytes='1' iicount='1537'/>
<parse method='847'  stamp='0.072'>
<parse_done stamp='0.072'/>
</parse>
<phase name='optimize_blocks' stamp='0.072'>
<phase_done name='optimize_blocks' stamp='0.072'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.072'>
<phase_done name='rangeCheckElimination' stamp='0.072'/>
</phase>
<phase name='optimize_null_checks' stamp='0.072'>
<phase_done name='optimize_null_checks' stamp='0.072'/>
</phase>
<phase_done name='buildIR' stamp='0.072'/>
</phase>
<phase name='emit_lir' stamp='0.072'>
<phase name='lirGeneration' stamp='0.072'>
<phase_done name='lirGeneration' stamp='0.072'/>
</phase>
<phase name='linearScan' stamp='0.072'>
<phase_done name='linearScan' stamp='0.072'/>
</phase>
<phase_done name='emit_lir' stamp='0.072'/>
</phase>
<phase name='codeemit' stamp='0.072'>
<phase_done name='codeemit' stamp='0.072'/>
</phase>
<phase name='codeinstall' stamp='0.072'>
<phase_done name='codeinstall' stamp='0.073'/>
</phase>
<code_cache total_blobs='228' nmethods='3' adapters='137' free_code_cache='248838912'/>
<task_done success='1' nmsize='336' count='1546' stamp='0.073'/>
</task>
<task compile_id='8' method='java/lang/String indexOf (II)I' bytes='70' count='208' backedge_count='5215' iicount='208' level='3' stamp='0.079'>
<phase name='buildIR' stamp='0.080'>
<type id='736' name='int'/>
<klass id='744' name='java/lang/String' flags='17'/>
<method id='847' holder='744' name='indexOf' return='736' arguments='736 736' flags='1' bytes='70' iicount='208'/>
<parse method='847'  stamp='0.080'>
<bc code='183' bci='66'/>
<method id='849' holder='744' name='indexOfSupplementary' return='736' arguments='736 736' flags='2' bytes='71' iicount='1'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.080'/>
</parse>
<phase name='optimize_blocks' stamp='0.080'>
<phase_done name='optimize_blocks' stamp='0.080'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.080'>
<phase_done name='rangeCheckElimination' stamp='0.080'/>
</phase>
<phase name='optimize_null_checks' stamp='0.080'>
<phase_done name='optimize_null_checks' stamp='0.080'/>
</phase>
<phase_done name='buildIR' stamp='0.080'/>
</phase>
<phase name='emit_lir' stamp='0.080'>
<phase name='lirGeneration' stamp='0.080'>
<phase_done name='lirGeneration' stamp='0.080'/>
</phase>
<phase name='linearScan' stamp='0.080'>
<phase_done name='linearScan' stamp='0.080'/>
</phase>
<phase_done name='emit_lir' stamp='0.080'/>
</phase>
<phase name='codeemit' stamp='0.080'>
<phase_done name='codeemit' stamp='0.080'/>
</phase>
<phase name='codeinstall' stamp='0.080'>
<phase_done name='codeinstall' stamp='0.084'/>
</phase>
<code_cache total_blobs='232' nmethods='7' adapters='137' free_code_cache='248832576'/>
<task_done success='1' nmsize='904' count='209' backedge_count='5273' stamp='0.084'/>
</task>
<task compile_id='11' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='257' iicount='257' level='3' stamp='0.091'>
<phase name='buildIR' stamp='0.091'>
<type id='738' name='void'/>
<type id='736' name='int'/>
<klass id='808' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='847' holder='808' name='ensureCapacityInternal' return='738' arguments='736' flags='2' bytes='27' iicount='257'/>
<parse method='847'  stamp='0.091'>
<bc code='183' bci='17'/>
<method id='849' holder='808' name='newCapacity' return='736' arguments='736' flags='2' bytes='39' iicount='141'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='836' name='[C' flags='1041'/>
<klass id='851' name='java/util/Arrays' flags='1'/>
<method id='852' holder='851' name='copyOf' return='836' arguments='836 736' flags='9' bytes='19' iicount='143'/>
<call method='852' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='852'>
<bc code='184' bci='11'/>
<klass id='854' name='java/lang/Math' flags='17'/>
<method id='855' holder='854' name='min' return='736' arguments='736 736' flags='9' bytes='11' compile_id='9' compiler='C1' level='3' iicount='661'/>
<call method='855' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='855'>
<parse_done stamp='0.091'/>
</parse>
<bc code='184' bci='14'/>
<klass id='743' name='java/lang/Object' flags='1'/>
<klass id='749' name='java/lang/System' flags='17'/>
<method id='857' holder='749' name='arraycopy' return='738' arguments='743 736 743 736 736' flags='265' bytes='0' compile_id='7' compile_kind='c2n' level='0' iicount='640'/>
<call method='857' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.100'/>
</parse>
<parse_done stamp='0.100'/>
</parse>
<phase name='optimize_blocks' stamp='0.100'>
<phase_done name='optimize_blocks' stamp='0.100'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.100'>
<phase_done name='rangeCheckElimination' stamp='0.100'/>
</phase>
<phase name='optimize_null_checks' stamp='0.100'>
<phase_done name='optimize_null_checks' stamp='0.100'/>
</phase>
<phase_done name='buildIR' stamp='0.100'/>
</phase>
<phase name='emit_lir' stamp='0.100'>
<phase name='lirGeneration' stamp='0.100'>
<phase_done name='lirGeneration' stamp='0.100'/>
</phase>
<phase name='linearScan' stamp='0.100'>
<phase_done name='linearScan' stamp='0.100'/>
</phase>
<phase_done name='emit_lir' stamp='0.100'/>
</phase>
<phase name='codeemit' stamp='0.100'>
<phase_done name='codeemit' stamp='0.100'/>
</phase>
<phase name='codeinstall' stamp='0.100'>
<phase_done name='codeinstall' stamp='0.103'/>
</phase>
<code_cache total_blobs='238' nmethods='11' adapters='139' free_code_cache='248820480'/>
<task_done success='1' nmsize='1144' count='257' inlined_bytes='30' stamp='0.104'/>
</task>
<task compile_id='16' method='java/lang/ThreadLocal access$400 (Ljava/lang/ThreadLocal;)I' bytes='5' count='128' iicount='128' level='1' stamp='0.108'>
<phase name='buildIR' stamp='0.112'>
<type id='736' name='int'/>
<klass id='847' name='java/lang/ThreadLocal' flags='1'/>
<method id='848' holder='847' name='access$400' return='736' arguments='847' flags='4104' bytes='5' iicount='128'/>
<parse method='848'  stamp='0.112'>
<parse_done stamp='0.112'/>
</parse>
<phase name='optimize_blocks' stamp='0.112'>
<phase_done name='optimize_blocks' stamp='0.112'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.112'>
<phase_done name='rangeCheckElimination' stamp='0.112'/>
</phase>
<phase name='optimize_null_checks' stamp='0.112'>
<phase_done name='optimize_null_checks' stamp='0.112'/>
</phase>
<phase_done name='buildIR' stamp='0.112'/>
</phase>
<phase name='emit_lir' stamp='0.112'>
<phase name='lirGeneration' stamp='0.112'>
<phase_done name='lirGeneration' stamp='0.112'/>
</phase>
<phase name='linearScan' stamp='0.112'>
<phase_done name='linearScan' stamp='0.112'/>
</phase>
<phase_done name='emit_lir' stamp='0.112'/>
</phase>
<phase name='codeemit' stamp='0.112'>
<phase_done name='codeemit' stamp='0.112'/>
</phase>
<phase name='codeinstall' stamp='0.112'>
<phase_done name='codeinstall' stamp='0.113'/>
</phase>
<code_cache total_blobs='244' nmethods='15' adapters='141' free_code_cache='248814848'/>
<task_done success='1' nmsize='240' count='128' stamp='0.113'/>
</task>
<task compile_id='19' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='302' iicount='302' level='3' stamp='0.128'>
<phase name='buildIR' stamp='0.128'>
<klass id='808' name='java/lang/AbstractStringBuilder' flags='1024'/>
<klass id='744' name='java/lang/String' flags='17'/>
<method id='847' holder='808' name='append' return='808' arguments='744' flags='1' bytes='50' iicount='302'/>
<parse method='847'  stamp='0.128'>
<bc code='183' bci='5'/>
<method id='849' holder='808' name='appendNull' return='808' flags='2' bytes='56' iicount='1'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='10'/>
<type id='736' name='int'/>
<method id='851' holder='744' name='length' return='736' flags='1' bytes='6' compile_id='10' compiler='C1' level='3' iicount='840'/>
<call method='851' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<parse_done stamp='0.128'/>
</parse>
<bc code='183' bci='21'/>
<type id='738' name='void'/>
<method id='853' holder='808' name='ensureCapacityInternal' return='738' arguments='736' flags='2' bytes='27' compile_id='11' compiler='C1' level='3' iicount='389'/>
<call method='853' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<bc code='183' bci='17'/>
<method id='855' holder='808' name='newCapacity' return='736' arguments='736' flags='2' bytes='39' iicount='187'/>
<call method='855' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='836' name='[C' flags='1041'/>
<klass id='857' name='java/util/Arrays' flags='1'/>
<method id='858' holder='857' name='copyOf' return='836' arguments='836 736' flags='9' bytes='19' iicount='198'/>
<call method='858' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='858'>
<bc code='184' bci='11'/>
<klass id='860' name='java/lang/Math' flags='17'/>
<method id='861' holder='860' name='min' return='736' arguments='736 736' flags='9' bytes='11' compile_id='9' compiler='C1' level='3' iicount='875'/>
<call method='861' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='861'>
<parse_done stamp='0.128'/>
</parse>
<bc code='184' bci='14'/>
<klass id='743' name='java/lang/Object' flags='1'/>
<klass id='749' name='java/lang/System' flags='17'/>
<method id='863' holder='749' name='arraycopy' return='738' arguments='743 736 743 736 736' flags='265' bytes='0' compile_id='7' compile_kind='c2n' level='0' iicount='640'/>
<call method='863' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.128'/>
</parse>
<parse_done stamp='0.128'/>
</parse>
<bc code='182' bci='35'/>
<method id='865' holder='744' name='getChars' return='738' arguments='736 736 836 736' flags='1' bytes='62' compile_id='13' compiler='C1' level='3' iicount='302'/>
<call method='865' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.128'/>
</parse>
<phase name='optimize_blocks' stamp='0.128'>
<phase_done name='optimize_blocks' stamp='0.128'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.129'>
<phase_done name='rangeCheckElimination' stamp='0.129'/>
</phase>
<phase name='optimize_null_checks' stamp='0.129'>
<phase_done name='optimize_null_checks' stamp='0.129'/>
</phase>
<phase_done name='buildIR' stamp='0.129'/>
</phase>
<phase name='emit_lir' stamp='0.129'>
<phase name='lirGeneration' stamp='0.129'>
<phase_done name='lirGeneration' stamp='0.129'/>
</phase>
<phase name='linearScan' stamp='0.129'>
<phase_done name='linearScan' stamp='0.129'/>
</phase>
<phase_done name='emit_lir' stamp='0.129'/>
</phase>
<phase name='codeemit' stamp='0.129'>
<phase_done name='codeemit' stamp='0.129'/>
</phase>
<phase name='codeinstall' stamp='0.129'>
<phase_done name='codeinstall' stamp='0.135'/>
</phase>
<code_cache total_blobs='254' nmethods='19' adapters='147' free_code_cache='248803392'/>
<task_done success='1' nmsize='1880' count='307' inlined_bytes='63' stamp='0.135'/>
</task>
</compilation_log>
<compilation_log thread='40963'>
<start_compile_thread name='C1 CompilerThread9' thread='40963' process='6014' stamp='0.064'/>
<task compile_id='2' method='java/lang/String charAt (I)C' bytes='29' count='2308' iicount='2308' level='3' stamp='0.066'>
<phase name='buildIR' stamp='0.066'>
<type id='731' name='char'/>
<type id='736' name='int'/>
<klass id='744' name='java/lang/String' flags='17'/>
<method id='847' holder='744' name='charAt' return='731' arguments='736' flags='1' bytes='29' iicount='2418'/>
<parse method='847'  stamp='0.066'>
<bc code='183' bci='18'/>
<type id='738' name='void'/>
<klass id='849' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='850' holder='849' name='&lt;init&gt;' return='738' arguments='736' unloaded='1'/>
<call method='850' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.066'/>
</parse>
<phase name='optimize_blocks' stamp='0.066'>
<phase_done name='optimize_blocks' stamp='0.066'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.066'>
<phase_done name='rangeCheckElimination' stamp='0.066'/>
</phase>
<phase name='optimize_null_checks' stamp='0.066'>
<phase_done name='optimize_null_checks' stamp='0.066'/>
</phase>
<phase_done name='buildIR' stamp='0.066'/>
</phase>
<phase name='emit_lir' stamp='0.066'>
<phase name='lirGeneration' stamp='0.066'>
<phase_done name='lirGeneration' stamp='0.066'/>
</phase>
<phase name='linearScan' stamp='0.066'>
<phase_done name='linearScan' stamp='0.066'/>
</phase>
<phase_done name='emit_lir' stamp='0.066'/>
</phase>
<phase name='codeemit' stamp='0.066'>
<phase_done name='codeemit' stamp='0.066'/>
</phase>
<phase name='codeinstall' stamp='0.066'>
<phase_done name='codeinstall' stamp='0.071'/>
</phase>
<code_cache total_blobs='227' nmethods='2' adapters='137' free_code_cache='248839808'/>
<task_done success='1' nmsize='616' count='2419' stamp='0.071'/>
</task>
<task compile_id='5' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='257' iicount='257' level='3' stamp='0.073'>
<phase name='buildIR' stamp='0.073'>
<type id='738' name='void'/>
<klass id='836' name='[C' flags='1041'/>
<type id='736' name='int'/>
<klass id='744' name='java/lang/String' flags='17'/>
<method id='847' holder='744' name='&lt;init&gt;' return='738' arguments='836 736 736' flags='1' bytes='82' iicount='257'/>
<parse method='847'  stamp='0.073'>
<bc code='183' bci='1'/>
<klass id='743' name='java/lang/Object' flags='1'/>
<method id='849' holder='743' name='&lt;init&gt;' return='738' flags='1' bytes='1' compile_id='3' compiler='C1' level='3' iicount='1549'/>
<call method='849' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<parse_done stamp='0.073'/>
</parse>
<bc code='183' bci='13'/>
<klass id='851' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='852' holder='851' name='&lt;init&gt;' return='738' arguments='736' unloaded='1'/>
<call method='852' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='30'/>
<call method='852' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='65'/>
<call method='852' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='75'/>
<klass id='854' name='java/util/Arrays' flags='1'/>
<method id='855' holder='854' name='copyOfRange' return='836' arguments='836 736 736' flags='9' bytes='63' iicount='266'/>
<call method='855' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.084'/>
</parse>
<phase name='optimize_blocks' stamp='0.084'>
<phase_done name='optimize_blocks' stamp='0.084'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.084'>
<phase_done name='rangeCheckElimination' stamp='0.084'/>
</phase>
<phase name='optimize_null_checks' stamp='0.084'>
<phase_done name='optimize_null_checks' stamp='0.084'/>
</phase>
<phase_done name='buildIR' stamp='0.084'/>
</phase>
<phase name='emit_lir' stamp='0.084'>
<phase name='lirGeneration' stamp='0.084'>
<phase_done name='lirGeneration' stamp='0.084'/>
</phase>
<phase name='linearScan' stamp='0.084'>
<phase_done name='linearScan' stamp='0.084'/>
</phase>
<phase_done name='emit_lir' stamp='0.084'/>
</phase>
<phase name='codeemit' stamp='0.084'>
<phase_done name='codeemit' stamp='0.084'/>
</phase>
<phase name='codeinstall' stamp='0.084'>
<phase_done name='codeinstall' stamp='0.091'/>
</phase>
<code_cache total_blobs='236' nmethods='9' adapters='139' free_code_cache='248827584'/>
<task_done success='1' nmsize='1272' count='267' inlined_bytes='1' stamp='0.091'/>
</task>
<task compile_id='13' method='java/lang/String getChars (II[CI)V' bytes='62' count='269' iicount='269' level='3' stamp='0.106'>
<phase name='buildIR' stamp='0.106'>
<type id='738' name='void'/>
<type id='736' name='int'/>
<klass id='836' name='[C' flags='1041'/>
<klass id='744' name='java/lang/String' flags='17'/>
<method id='847' holder='744' name='getChars' return='738' arguments='736 736 836 736' flags='1' bytes='62' iicount='270'/>
<parse method='847'  stamp='0.106'>
<bc code='183' bci='9'/>
<klass id='849' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='850' holder='849' name='&lt;init&gt;' return='738' arguments='736' unloaded='1'/>
<call method='850' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='27'/>
<call method='850' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='43'/>
<call method='850' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='58'/>
<klass id='743' name='java/lang/Object' flags='1'/>
<klass id='749' name='java/lang/System' flags='17'/>
<method id='851' holder='749' name='arraycopy' return='738' arguments='743 736 743 736 736' flags='265' bytes='0' compile_id='7' compile_kind='c2n' level='0' iicount='640'/>
<call method='851' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.108'/>
</parse>
<phase name='optimize_blocks' stamp='0.108'>
<phase_done name='optimize_blocks' stamp='0.108'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.108'>
<phase_done name='rangeCheckElimination' stamp='0.108'/>
</phase>
<phase name='optimize_null_checks' stamp='0.108'>
<phase_done name='optimize_null_checks' stamp='0.108'/>
</phase>
<phase_done name='buildIR' stamp='0.108'/>
</phase>
<phase name='emit_lir' stamp='0.108'>
<phase name='lirGeneration' stamp='0.108'>
<phase_done name='lirGeneration' stamp='0.108'/>
</phase>
<phase name='linearScan' stamp='0.108'>
<phase_done name='linearScan' stamp='0.108'/>
</phase>
<phase_done name='emit_lir' stamp='0.108'/>
</phase>
<phase name='codeemit' stamp='0.108'>
<phase_done name='codeemit' stamp='0.108'/>
</phase>
<phase name='codeinstall' stamp='0.108'>
<phase_done name='codeinstall' stamp='0.112'/>
</phase>
<code_cache total_blobs='243' nmethods='14' adapters='141' free_code_cache='248815616'/>
<task_done success='1' nmsize='1080' count='270' stamp='0.112'/>
</task>
<task compile_id='18' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='283' iicount='283' level='3' stamp='0.119'>
<phase name='buildIR' stamp='0.119'>
<type id='736' name='int'/>
<klass id='847' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='848' holder='847' name='getProperties' return='736' arguments='736' flags='0' bytes='11' iicount='283'/>
<parse method='848'  stamp='0.119'>
<parse_done stamp='0.119'/>
</parse>
<phase name='optimize_blocks' stamp='0.119'>
<phase_done name='optimize_blocks' stamp='0.119'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.119'>
<phase_done name='rangeCheckElimination' stamp='0.119'/>
</phase>
<phase name='optimize_null_checks' stamp='0.119'>
<phase_done name='optimize_null_checks' stamp='0.119'/>
</phase>
<phase_done name='buildIR' stamp='0.119'/>
</phase>
<phase name='emit_lir' stamp='0.119'>
<phase name='lirGeneration' stamp='0.119'>
<phase_done name='lirGeneration' stamp='0.119'/>
</phase>
<phase name='linearScan' stamp='0.119'>
<phase_done name='linearScan' stamp='0.119'/>
</phase>
<phase_done name='emit_lir' stamp='0.119'/>
</phase>
<phase name='codeemit' stamp='0.119'>
<phase_done name='codeemit' stamp='0.119'/>
</phase>
<phase name='codeinstall' stamp='0.119'>
<phase_done name='codeinstall' stamp='0.120'/>
</phase>
<code_cache total_blobs='252' nmethods='17' adapters='147' free_code_cache='248809664'/>
<task_done success='1' nmsize='400' count='283' stamp='0.120'/>
</task>
<task compile_id='21' method='com/liukai/jvmaction/ch_11/JITCompilerTest doubleValue (I)I' bytes='19' count='39' backedge_count='389120' iicount='39' level='3' stamp='0.139'>
<phase name='buildIR' stamp='0.139'>
<type id='736' name='int'/>
<klass id='847' name='com/liukai/jvmaction/ch_11/JITCompilerTest' flags='1'/>
<method id='848' holder='847' name='doubleValue' return='736' arguments='736' flags='9' bytes='19' iicount='41'/>
<parse method='848'  stamp='0.139'>
<parse_done stamp='0.139'/>
</parse>
<phase name='optimize_blocks' stamp='0.139'>
<phase_done name='optimize_blocks' stamp='0.139'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.139'>
<phase_done name='rangeCheckElimination' stamp='0.139'/>
</phase>
<phase name='optimize_null_checks' stamp='0.139'>
<phase_done name='optimize_null_checks' stamp='0.139'/>
</phase>
<phase_done name='buildIR' stamp='0.139'/>
</phase>
<phase name='emit_lir' stamp='0.139'>
<phase name='lirGeneration' stamp='0.139'>
<phase_done name='lirGeneration' stamp='0.139'/>
</phase>
<phase name='linearScan' stamp='0.139'>
<phase_done name='linearScan' stamp='0.139'/>
</phase>
<phase_done name='emit_lir' stamp='0.139'/>
</phase>
<phase name='codeemit' stamp='0.139'>
<phase_done name='codeemit' stamp='0.139'/>
</phase>
<phase name='codeinstall' stamp='0.139'>
<phase_done name='codeinstall' stamp='0.141'/>
</phase>
<code_cache total_blobs='256' nmethods='21' adapters='147' free_code_cache='248801088'/>
<task_done success='1' nmsize='496' count='124' backedge_count='1232830' stamp='0.141'/>
</task>
</compilation_log>
<compilation_log thread='41475'>
<start_compile_thread name='C1 CompilerThread8' thread='41475' process='6014' stamp='0.064'/>
<task compile_id='1' method='java/lang/String hashCode ()I' bytes='55' count='398' backedge_count='7232' iicount='398' level='3' stamp='0.066'>
<phase name='buildIR' stamp='0.066'>
<type id='736' name='int'/>
<klass id='744' name='java/lang/String' flags='17'/>
<method id='847' holder='744' name='hashCode' return='736' flags='1' bytes='55' iicount='408'/>
<parse method='847'  stamp='0.066'>
<parse_done stamp='0.066'/>
</parse>
<phase name='optimize_blocks' stamp='0.066'>
<phase_done name='optimize_blocks' stamp='0.066'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.066'>
<phase_done name='rangeCheckElimination' stamp='0.066'/>
</phase>
<phase name='optimize_null_checks' stamp='0.066'>
<phase_done name='optimize_null_checks' stamp='0.066'/>
</phase>
<phase_done name='buildIR' stamp='0.066'/>
</phase>
<phase name='emit_lir' stamp='0.066'>
<phase name='lirGeneration' stamp='0.066'>
<phase_done name='lirGeneration' stamp='0.066'/>
</phase>
<phase name='linearScan' stamp='0.066'>
<phase_done name='linearScan' stamp='0.066'/>
</phase>
<phase_done name='emit_lir' stamp='0.066'/>
</phase>
<phase name='codeemit' stamp='0.066'>
<phase_done name='codeemit' stamp='0.066'/>
</phase>
<phase name='codeinstall' stamp='0.066'>
<phase_done name='codeinstall' stamp='0.069'/>
</phase>
<code_cache total_blobs='226' nmethods='1' adapters='137' free_code_cache='248841216'/>
<task_done success='1' nmsize='656' count='412' backedge_count='7424' stamp='0.069'/>
</task>
<task compile_id='6' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='257' iicount='257' level='3' stamp='0.073'>
<phase name='buildIR' stamp='0.073'>
<klass id='836' name='[C' flags='1041'/>
<type id='736' name='int'/>
<klass id='847' name='java/util/Arrays' flags='1'/>
<method id='848' holder='847' name='copyOfRange' return='836' arguments='836 736 736' flags='9' bytes='63' iicount='257'/>
<parse method='848'  stamp='0.073'>
<bc code='183' bci='16'/>
<type id='738' name='void'/>
<klass id='810' name='java/lang/StringBuilder' flags='17'/>
<method id='851' holder='810' name='&lt;init&gt;' return='738' flags='1' bytes='7' iicount='89'/>
<call method='851' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<bc code='183' bci='3'/>
<klass id='808' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='853' holder='808' name='&lt;init&gt;' return='738' arguments='736' flags='0' bytes='12' iicount='89'/>
<call method='853' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<bc code='183' bci='1'/>
<klass id='743' name='java/lang/Object' flags='1'/>
<method id='855' holder='743' name='&lt;init&gt;' return='738' flags='1' bytes='1' compile_id='3' compiler='C1' level='3' iicount='1549'/>
<call method='855' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='855'>
<parse_done stamp='0.073'/>
</parse>
<parse_done stamp='0.079'/>
</parse>
<parse_done stamp='0.079'/>
</parse>
<bc code='182' bci='20'/>
<method id='857' holder='810' name='append' return='810' arguments='736' flags='1' bytes='8' iicount='1'/>
<call method='857' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='857'>
<bc code='183' bci='2'/>
<method id='859' holder='808' name='append' return='808' arguments='736' flags='1' bytes='62' iicount='1'/>
<call method='859' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.080'/>
</parse>
<bc code='182' bci='25'/>
<klass id='744' name='java/lang/String' flags='17'/>
<method id='862' holder='810' name='append' return='810' arguments='744' flags='1' bytes='8' iicount='164'/>
<call method='862' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='862'>
<bc code='183' bci='2'/>
<method id='864' holder='808' name='append' return='808' arguments='744' flags='1' bytes='50' iicount='168'/>
<call method='864' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.080'/>
</parse>
<bc code='182' bci='29'/>
<call method='857' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='857'>
<bc code='183' bci='2'/>
<call method='859' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.080'/>
</parse>
<bc code='182' bci='32'/>
<method id='866' holder='810' name='toString' return='744' flags='1' bytes='17' iicount='93'/>
<call method='866' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='866'>
<bc code='183' bci='13'/>
<method id='868' holder='744' name='&lt;init&gt;' return='738' arguments='836 736 736' flags='1' bytes='82' iicount='267'/>
<call method='868' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.084'/>
</parse>
<bc code='183' bci='35'/>
<klass id='850' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='870' holder='850' name='&lt;init&gt;' return='738' arguments='744' flags='1' bytes='6' iicount='1'/>
<call method='870' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='54'/>
<klass id='872' name='java/lang/Math' flags='17'/>
<method id='873' holder='872' name='min' return='736' arguments='736 736' flags='9' bytes='11' compile_id='9' compiler='C1' level='3' iicount='656'/>
<call method='873' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='873'>
<parse_done stamp='0.084'/>
</parse>
<bc code='184' bci='57'/>
<klass id='749' name='java/lang/System' flags='17'/>
<method id='875' holder='749' name='arraycopy' return='738' arguments='743 736 743 736 736' flags='265' bytes='0' compile_id='7' compile_kind='c2n' level='0' iicount='640'/>
<call method='875' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.091'/>
</parse>
<phase name='optimize_blocks' stamp='0.091'>
<phase_done name='optimize_blocks' stamp='0.091'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.091'>
<phase_done name='rangeCheckElimination' stamp='0.091'/>
</phase>
<phase name='optimize_null_checks' stamp='0.091'>
<phase_done name='optimize_null_checks' stamp='0.091'/>
</phase>
<phase_done name='buildIR' stamp='0.091'/>
</phase>
<phase name='emit_lir' stamp='0.091'>
<phase name='lirGeneration' stamp='0.091'>
<phase_done name='lirGeneration' stamp='0.091'/>
</phase>
<phase name='linearScan' stamp='0.091'>
<phase_done name='linearScan' stamp='0.091'/>
</phase>
<phase_done name='emit_lir' stamp='0.091'/>
</phase>
<phase name='codeemit' stamp='0.091'>
<phase_done name='codeemit' stamp='0.091'/>
</phase>
<phase name='codeinstall' stamp='0.091'>
<phase_done name='codeinstall' stamp='0.100'/>
</phase>
<code_cache total_blobs='237' nmethods='10' adapters='139' free_code_cache='248822656'/>
<task_done success='1' nmsize='2872' count='268' inlined_bytes='72' stamp='0.100'/>
</task>
<task compile_id='15' method='java/lang/String indexOf (I)I' bytes='7' count='257' iicount='257' level='3' stamp='0.108'>
<phase name='buildIR' stamp='0.112'>
<type id='736' name='int'/>
<klass id='744' name='java/lang/String' flags='17'/>
<method id='847' holder='744' name='indexOf' return='736' arguments='736' flags='1' bytes='7' iicount='257'/>
<parse method='847'  stamp='0.112'>
<bc code='182' bci='3'/>
<method id='849' holder='744' name='indexOf' return='736' arguments='736 736' flags='1' bytes='70' compile_id='8' compiler='C1' level='3' iicount='257'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.112'/>
</parse>
<phase name='optimize_blocks' stamp='0.112'>
<phase_done name='optimize_blocks' stamp='0.112'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.112'>
<phase_done name='rangeCheckElimination' stamp='0.112'/>
</phase>
<phase name='optimize_null_checks' stamp='0.112'>
<phase_done name='optimize_null_checks' stamp='0.112'/>
</phase>
<phase_done name='buildIR' stamp='0.112'/>
</phase>
<phase name='emit_lir' stamp='0.112'>
<phase name='lirGeneration' stamp='0.112'>
<phase_done name='lirGeneration' stamp='0.112'/>
</phase>
<phase name='linearScan' stamp='0.112'>
<phase_done name='linearScan' stamp='0.112'/>
</phase>
<phase_done name='emit_lir' stamp='0.112'/>
</phase>
<phase name='codeemit' stamp='0.112'>
<phase_done name='codeemit' stamp='0.112'/>
</phase>
<phase name='codeinstall' stamp='0.112'>
<phase_done name='codeinstall' stamp='0.114'/>
</phase>
<code_cache total_blobs='245' nmethods='16' adapters='141' free_code_cache='248813760'/>
<task_done success='1' nmsize='520' count='257' stamp='0.114'/>
</task>
<task compile_id='20' compile_kind='osr' method='com/liukai/jvmaction/ch_11/JITCompilerTest doubleValue (I)I' bytes='19' count='8' backedge_count='78685' iicount='8' osr_bci='2' level='3' stamp='0.137'>
<phase name='buildIR' stamp='0.137'>
<type id='736' name='int'/>
<klass id='847' name='com/liukai/jvmaction/ch_11/JITCompilerTest' flags='1'/>
<method id='848' holder='847' name='doubleValue' return='736' arguments='736' flags='9' bytes='19' iicount='9'/>
<parse method='848'  stamp='0.137'>
<parse_done stamp='0.137'/>
</parse>
<phase name='optimize_blocks' stamp='0.137'>
<phase_done name='optimize_blocks' stamp='0.137'/>
</phase>
<phase name='optimize_null_checks' stamp='0.137'>
<phase_done name='optimize_null_checks' stamp='0.137'/>
</phase>
<phase_done name='buildIR' stamp='0.137'/>
</phase>
<phase name='emit_lir' stamp='0.137'>
<phase name='lirGeneration' stamp='0.137'>
<phase_done name='lirGeneration' stamp='0.137'/>
</phase>
<phase name='linearScan' stamp='0.137'>
<phase_done name='linearScan' stamp='0.137'/>
</phase>
<phase_done name='emit_lir' stamp='0.137'/>
</phase>
<phase name='codeemit' stamp='0.137'>
<phase_done name='codeemit' stamp='0.137'/>
</phase>
<phase name='codeinstall' stamp='0.137'>
<phase_done name='codeinstall' stamp='0.139'/>
</phase>
<code_cache total_blobs='255' nmethods='20' adapters='147' free_code_cache='248802240'/>
<task_done success='1' nmsize='528' count='35' backedge_count='340289' stamp='0.139'/>
</task>
</compilation_log>
<compilation_log thread='23299'>
<fragment>
<![CDATA[
<start_compile_thread name='C2 CompilerThread7' thread='23299' process='6014' stamp='0.063'/>
]]>
</fragment>
</compilation_log>
<compilation_log thread='22787'>
<start_compile_thread name='C2 CompilerThread6' thread='22787' process='6014' stamp='0.063'/>
<task compile_id='22' compile_kind='osr' method='com/liukai/jvmaction/ch_11/JITCompilerTest doubleValue (I)I' bytes='19' count='124' backedge_count='1239080' iicount='124' osr_bci='2' stamp='0.141'>
<phase name='parse' nodes='3' live='3' stamp='0.141'>
<type id='736' name='int'/>
<klass id='847' name='com/liukai/jvmaction/ch_11/JITCompilerTest' flags='1'/>
<method id='848' holder='847' name='doubleValue' return='736' arguments='736' flags='9' bytes='19' compile_id='21' compiler='C1' level='3' iicount='126'/>
<parse method='848' uses='126' osr_bci='2' stamp='0.141'>
<uncommon_trap bci='2' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='2' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='162' bci='6'/>
<branch target_bci='15' taken='117' not_taken='1172289' cnt='1.17241e+06' prob='9.97948e-05'/>
<parse_done nodes='93' live='90' memory='34200' stamp='0.141'/>
</parse>
<phase_done name='parse' nodes='94' live='59' stamp='0.141'/>
</phase>
<phase name='optimizer' nodes='94' live='59' stamp='0.141'>
<phase name='idealLoop' nodes='94' live='51' stamp='0.141'>
<loop_tree>
<loop idx='94' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='109' live='58' stamp='0.141'/>
</phase>
<phase name='idealLoop' nodes='109' live='58' stamp='0.141'>
<loop_tree>
<loop idx='114' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='120' live='25' stamp='0.141'/>
</phase>
<phase name='idealLoop' nodes='120' live='25' stamp='0.141'>
<phase_done name='idealLoop' nodes='120' live='25' stamp='0.141'/>
</phase>
<phase name='ccp' nodes='120' live='25' stamp='0.141'>
<phase_done name='ccp' nodes='120' live='25' stamp='0.141'/>
</phase>
<phase_done name='optimizer' nodes='120' live='25' stamp='0.141'/>
</phase>
<phase name='matcher' nodes='120' live='25' stamp='0.141'>
<phase_done name='matcher' nodes='20' live='20' stamp='0.141'/>
</phase>
<phase name='regalloc' nodes='23' live='23' stamp='0.141'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='27' live='27' stamp='0.141'/>
</phase>
<phase name='output' nodes='27' live='27' stamp='0.141'>
<phase_done name='output' nodes='34' live='34' stamp='0.141'/>
</phase>
<code_cache total_blobs='258' nmethods='22' adapters='147' free_code_cache='248795136'/>
<task_done success='1' nmsize='88' count='176' backedge_count='1757184' stamp='0.142'/>
</task>
</compilation_log>
<compilation_log thread='41987'>
<start_compile_thread name='C2 CompilerThread5' thread='41987' process='6014' stamp='0.063'/>
<task compile_id='23' method='com/liukai/jvmaction/ch_11/JITCompilerTest doubleValue (I)I' bytes='19' count='177' backedge_count='1762889' iicount='177' stamp='0.142'>
<phase name='parse' nodes='3' live='3' stamp='0.142'>
<type id='736' name='int'/>
<klass id='847' name='com/liukai/jvmaction/ch_11/JITCompilerTest' flags='1'/>
<method id='848' holder='847' name='doubleValue' return='736' arguments='736' flags='9' bytes='19' compile_id='21' compiler='C1' level='3' iicount='178'/>
<parse method='848' uses='178' stamp='0.142'>
<bc code='162' bci='6'/>
<branch target_bci='15' taken='166' not_taken='1683590' cnt='1.68376e+06' prob='9.85891e-05'/>
<uncommon_trap bci='9' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='9' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='162' bci='6'/>
<branch target_bci='15' taken='166' not_taken='1683590' cnt='1.68359e+06' prob='9.85891e-05'/>
<parse_done nodes='82' live='79' memory='32400' stamp='0.142'/>
</parse>
<phase_done name='parse' nodes='83' live='47' stamp='0.142'/>
</phase>
<phase name='optimizer' nodes='83' live='47' stamp='0.142'>
<phase name='idealLoop' nodes='83' live='41' stamp='0.142'>
<loop_tree>
<loop idx='89' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='94' live='34' stamp='0.142'/>
</phase>
<phase name='idealLoop' nodes='94' live='34' stamp='0.142'>
<phase_done name='idealLoop' nodes='94' live='34' stamp='0.142'/>
</phase>
<phase name='ccp' nodes='94' live='34' stamp='0.142'>
<phase_done name='ccp' nodes='94' live='34' stamp='0.142'/>
</phase>
<phase_done name='optimizer' nodes='94' live='18' stamp='0.142'/>
</phase>
<phase name='matcher' nodes='94' live='18' stamp='0.142'>
<phase_done name='matcher' nodes='14' live='14' stamp='0.142'/>
</phase>
<phase name='regalloc' nodes='16' live='16' stamp='0.142'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='17' live='17' stamp='0.142'/>
</phase>
<phase name='output' nodes='17' live='17' stamp='0.142'>
<phase_done name='output' nodes='22' live='22' stamp='0.143'/>
</phase>
<code_cache total_blobs='259' nmethods='23' adapters='147' free_code_cache='248794624'/>
<task_done success='1' nmsize='56' count='205' backedge_count='1981440' stamp='0.143'/>
</task>
</compilation_log>
<compilation_log thread='42499'>
<start_compile_thread name='C2 CompilerThread4' thread='42499' process='6014' stamp='0.063'/>
<task compile_id='25' compile_kind='osr' method='com/liukai/jvmaction/ch_11/JITCompilerTest calSum ()J' bytes='26' count='1118' backedge_count='111802' iicount='1120' osr_bci='4' stamp='0.145'>
<phase name='parse' nodes='3' live='3' stamp='0.145'>
<type id='737' name='long'/>
<klass id='847' name='com/liukai/jvmaction/ch_11/JITCompilerTest' flags='1'/>
<method id='848' holder='847' name='calSum' return='737' flags='9' bytes='26' compile_id='24' compiler='C1' level='3' iicount='1213'/>
<parse method='848' uses='1213' osr_bci='4' stamp='0.145'>
<uncommon_trap bci='4' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='4' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='162' bci='7'/>
<branch target_bci='24' taken='1077' not_taken='107702' cnt='108779' prob='0.00990081'/>
<bc code='184' bci='12'/>
<type id='736' name='int'/>
<method id='850' holder='847' name='doubleValue' return='736' arguments='736' flags='9' bytes='19' compile_id='23' compiler='C2' level='4' iicount='205'/>
<call method='850' count='107702' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='850' uses='107702' stamp='0.146'>
<bc code='162' bci='6'/>
<branch target_bci='15' taken='166' not_taken='1891412' cnt='1.89158e+06' prob='8.77574e-05'/>
<uncommon_trap bci='9' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='9' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='162' bci='6'/>
<branch target_bci='15' taken='166' not_taken='1891412' cnt='1.89141e+06' prob='8.77574e-05'/>
<parse_done nodes='160' live='155' memory='46456' stamp='0.146'/>
</parse>
<parse_done nodes='166' live='160' memory='47672' stamp='0.146'/>
</parse>
<phase_done name='parse' nodes='167' live='101' stamp='0.146'/>
</phase>
<phase name='optimizer' nodes='167' live='101' stamp='0.146'>
<phase name='idealLoop' nodes='167' live='84' stamp='0.146'>
<loop_tree>
<loop idx='167' >
<loop idx='174' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='179' live='76' stamp='0.146'/>
</phase>
<phase name='idealLoop' nodes='179' live='76' stamp='0.146'>
<loop_tree>
<loop idx='167' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='218' live='65' stamp='0.146'/>
</phase>
<phase name='idealLoop' nodes='218' live='65' stamp='0.146'>
<loop_tree>
<loop idx='280' main_loop='280' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='290' live='94' stamp='0.146'/>
</phase>
<phase name='ccp' nodes='290' live='94' stamp='0.146'>
<phase_done name='ccp' nodes='290' live='94' stamp='0.146'/>
</phase>
<phase name='idealLoop' nodes='290' live='94' stamp='0.146'>
<loop_tree>
<loop idx='252' inner_loop='1' pre_loop='223' >
</loop>
<loop idx='312' inner_loop='1' main_loop='312' >
</loop>
<loop idx='232' inner_loop='1' post_loop='223' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='322' live='103' stamp='0.146'/>
</phase>
<phase name='idealLoop' nodes='322' live='103' stamp='0.146'>
<loop_tree>
<loop idx='252' inner_loop='1' pre_loop='223' >
</loop>
<loop idx='350' inner_loop='1' main_loop='350' >
</loop>
<loop idx='232' inner_loop='1' post_loop='223' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='362' live='121' stamp='0.146'/>
</phase>
<phase name='idealLoop' nodes='362' live='121' stamp='0.146'>
<loop_tree>
<loop idx='252' inner_loop='1' pre_loop='223' >
</loop>
<loop idx='350' inner_loop='1' main_loop='350' >
</loop>
<loop idx='232' inner_loop='1' post_loop='223' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='371' live='118' stamp='0.146'/>
</phase>
<phase_done name='optimizer' nodes='371' live='118' stamp='0.146'/>
</phase>
<phase name='matcher' nodes='371' live='118' stamp='0.146'>
<phase_done name='matcher' nodes='119' live='119' stamp='0.146'/>
</phase>
<phase name='regalloc' nodes='146' live='146' stamp='0.146'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='161' live='160' stamp='0.146'/>
</phase>
<phase name='output' nodes='161' live='160' stamp='0.146'>
<phase_done name='output' nodes='175' live='169' stamp='0.146'/>
</phase>
<code_cache total_blobs='261' nmethods='25' adapters='147' free_code_cache='248792320'/>
<task_done success='1' nmsize='280' count='7868' backedge_count='786889' inlined_bytes='19' stamp='0.148'/>
</task>
<task compile_id='26' method='com/liukai/jvmaction/ch_11/JITCompilerTest calSum ()J' bytes='26' count='7875' backedge_count='787438' iicount='7875' stamp='0.148'>
<phase name='parse' nodes='3' live='3' stamp='0.148'>
<type id='737' name='long'/>
<klass id='847' name='com/liukai/jvmaction/ch_11/JITCompilerTest' flags='1'/>
<method id='848' holder='847' name='calSum' return='737' flags='9' bytes='26' compile_id='24' compiler='C1' level='3' iicount='7916'/>
<parse method='848' uses='7916' stamp='0.148'>
<bc code='162' bci='7'/>
<branch target_bci='24' taken='7781' not_taken='778165' cnt='785946' prob='0.00990017'/>
<uncommon_trap bci='10' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='10' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='184' bci='12'/>
<type id='736' name='int'/>
<method id='850' holder='847' name='doubleValue' return='736' arguments='736' flags='9' bytes='19' compile_id='23' compiler='C2' level='4' iicount='205'/>
<call method='850' count='778165' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='850' uses='778165' stamp='0.148'>
<bc code='162' bci='6'/>
<branch target_bci='15' taken='166' not_taken='1891412' cnt='1.89158e+06' prob='8.77574e-05'/>
<uncommon_trap bci='9' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='9' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='162' bci='6'/>
<branch target_bci='15' taken='166' not_taken='1891412' cnt='1.89141e+06' prob='8.77574e-05'/>
<parse_done nodes='138' live='133' memory='42840' stamp='0.148'/>
</parse>
<bc code='162' bci='7'/>
<branch target_bci='24' taken='7781' not_taken='778165' cnt='778164' prob='0.00990017'/>
<parse_done nodes='150' live='144' memory='45000' stamp='0.148'/>
</parse>
<phase_done name='parse' nodes='151' live='84' stamp='0.148'/>
</phase>
<phase name='optimizer' nodes='151' live='84' stamp='0.148'>
<phase name='idealLoop' nodes='151' live='70' stamp='0.148'>
<loop_tree>
<loop idx='158' >
<loop idx='164' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='169' live='62' stamp='0.148'/>
</phase>
<phase name='idealLoop' nodes='169' live='62' stamp='0.148'>
<loop_tree>
<loop idx='158' inner_loop='1' main_loop='158' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='242' live='76' stamp='0.148'/>
</phase>
<phase name='idealLoop' nodes='242' live='76' stamp='0.148'>
<loop_tree>
<loop idx='251' inner_loop='1' main_loop='251' >
</loop>
<loop idx='179' inner_loop='1' post_loop='158' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='266' live='65' stamp='0.148'/>
</phase>
<phase name='ccp' nodes='266' live='65' stamp='0.148'>
<phase_done name='ccp' nodes='266' live='65' stamp='0.148'/>
</phase>
<phase name='idealLoop' nodes='266' live='65' stamp='0.148'>
<loop_tree>
<loop idx='287' inner_loop='1' main_loop='287' >
</loop>
<loop idx='179' inner_loop='1' post_loop='158' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='310' live='78' stamp='0.148'/>
</phase>
<phase name='idealLoop' nodes='310' live='78' stamp='0.148'>
<loop_tree>
<loop idx='331' inner_loop='1' main_loop='331' >
</loop>
<loop idx='179' inner_loop='1' post_loop='158' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='369' live='92' stamp='0.148'/>
</phase>
<phase name='idealLoop' nodes='369' live='92' stamp='0.148'>
<loop_tree>
<loop idx='331' inner_loop='1' main_loop='331' >
</loop>
<loop idx='179' inner_loop='1' post_loop='158' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='378' live='80' stamp='0.148'/>
</phase>
<phase_done name='optimizer' nodes='378' live='80' stamp='0.148'/>
</phase>
<phase name='matcher' nodes='378' live='80' stamp='0.148'>
<phase_done name='matcher' nodes='73' live='73' stamp='0.149'/>
</phase>
<phase name='regalloc' nodes='87' live='87' stamp='0.149'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='93' live='93' stamp='0.149'/>
</phase>
<phase name='output' nodes='93' live='93' stamp='0.149'>
<phase_done name='output' nodes='103' live='99' stamp='0.149'/>
</phase>
<code_cache total_blobs='262' nmethods='26' adapters='147' free_code_cache='248791488'/>
<task_done success='1' nmsize='184' count='12304' backedge_count='1230455' inlined_bytes='19' stamp='0.150'/>
</task>
</compilation_log>
<compilation_log thread='42755'>
<fragment>
<![CDATA[
<start_compile_thread name='C2 CompilerThread3' thread='42755' process='6014' stamp='0.063'/>
]]>
</fragment>
</compilation_log>
<compilation_log thread='43011'>
<fragment>
<![CDATA[
<start_compile_thread name='C2 CompilerThread2' thread='43011' process='6014' stamp='0.063'/>
]]>
</fragment>
</compilation_log>
<compilation_log thread='21763'>
<fragment>
<![CDATA[
<start_compile_thread name='C2 CompilerThread1' thread='21763' process='6014' stamp='0.063'/>
]]>
</fragment>
</compilation_log>
<compilation_log thread='14851'>
<fragment>
<![CDATA[
<start_compile_thread name='C2 CompilerThread0' thread='14851' process='6014' stamp='0.063'/>
]]>
</fragment>
</compilation_log>
<hotspot_log_done stamp='0.153'/>
</hotspot_log>
